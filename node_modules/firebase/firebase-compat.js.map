{"version":3,"file":"firebase-compat.js","sources":["../../node_modules/whatwg-fetch/fetch.js","../../node_modules/core-js/internals/fails.js","../../node_modules/core-js/internals/create-property-descriptor.js","../../node_modules/core-js/internals/classof-raw.js","../../node_modules/core-js/internals/require-object-coercible.js","../../node_modules/core-js/internals/to-indexed-object.js","../../node_modules/core-js/internals/is-object.js","../../node_modules/core-js/internals/to-primitive.js","../../node_modules/core-js/internals/has.js","../../node_modules/core-js/internals/document-create-element.js","../../node_modules/core-js/internals/an-object.js","../../node_modules/core-js/internals/set-global.js","../../node_modules/core-js/internals/global.js","../../node_modules/core-js/internals/descriptors.js","../../node_modules/core-js/internals/object-property-is-enumerable.js","../../node_modules/core-js/internals/indexed-object.js","../../node_modules/core-js/internals/ie8-dom-define.js","../../node_modules/core-js/internals/object-get-own-property-descriptor.js","../../node_modules/core-js/internals/object-define-property.js","../../node_modules/core-js/internals/create-non-enumerable-property.js","../../node_modules/core-js/internals/shared-store.js","../../node_modules/core-js/internals/inspect-source.js","../../node_modules/core-js/internals/uid.js","../../node_modules/core-js/internals/internal-state.js","../../node_modules/core-js/internals/native-weak-map.js","../../node_modules/core-js/internals/is-pure.js","../../node_modules/core-js/internals/shared.js","../../node_modules/core-js/internals/shared-key.js","../../node_modules/core-js/internals/hidden-keys.js","../../node_modules/core-js/internals/get-built-in.js","../../node_modules/core-js/internals/to-integer.js","../../node_modules/core-js/internals/to-length.js","../../node_modules/core-js/internals/object-keys-internal.js","../../node_modules/core-js/internals/copy-constructor-properties.js","../../node_modules/core-js/internals/export.js","../../node_modules/core-js/internals/to-object.js","../../node_modules/core-js/internals/object-create.js","../../node_modules/core-js/internals/redefine.js","../../node_modules/core-js/internals/path.js","../../node_modules/core-js/internals/to-absolute-index.js","../../node_modules/core-js/internals/array-includes.js","../../node_modules/core-js/internals/enum-bug-keys.js","../../node_modules/core-js/internals/object-get-own-property-names.js","../../node_modules/core-js/internals/object-get-own-property-symbols.js","../../node_modules/core-js/internals/own-keys.js","../../node_modules/core-js/internals/is-forced.js","../../node_modules/core-js/internals/correct-prototype-getter.js","../../node_modules/core-js/internals/object-get-prototype-of.js","../../node_modules/core-js/internals/object-set-prototype-of.js","../../node_modules/core-js/internals/a-possible-prototype.js","../../node_modules/core-js/internals/object-keys.js","../../node_modules/core-js/internals/object-define-properties.js","../../node_modules/core-js/internals/html.js","../../node_modules/core-js/internals/well-known-symbol.js","../../node_modules/core-js/internals/is-array-iterator-method.js","../../node_modules/core-js/internals/a-function.js","../../node_modules/core-js/internals/function-bind-context.js","../../node_modules/core-js/internals/native-symbol.js","../../node_modules/core-js/internals/use-symbol-as-uid.js","../../node_modules/core-js/internals/iterators.js","../../node_modules/core-js/internals/to-string-tag-support.js","../../node_modules/core-js/internals/get-iterator-method.js","../../node_modules/core-js/internals/iterator-close.js","../../node_modules/core-js/internals/iterate.js","../../node_modules/core-js/internals/classof.js","../../node_modules/core-js/modules/es.aggregate-error.js","../../node_modules/core-js/internals/object-to-string.js","../../node_modules/core-js/modules/es.object.to-string.js","../../node_modules/core-js/internals/redefine-all.js","../../node_modules/core-js/internals/set-to-string-tag.js","../../node_modules/core-js/internals/set-species.js","../../node_modules/core-js/internals/an-instance.js","../../node_modules/core-js/internals/native-promise-constructor.js","../../node_modules/core-js/internals/check-correctness-of-iteration.js","../../node_modules/core-js/internals/species-constructor.js","../../node_modules/core-js/internals/task.js","../../node_modules/core-js/internals/engine-user-agent.js","../../node_modules/core-js/internals/engine-is-ios.js","../../node_modules/core-js/internals/engine-is-node.js","../../node_modules/core-js/internals/microtask.js","../../node_modules/core-js/internals/new-promise-capability.js","../../node_modules/core-js/internals/promise-resolve.js","../../node_modules/core-js/internals/perform.js","../../node_modules/core-js/internals/engine-v8-version.js","../../node_modules/core-js/modules/es.promise.js","../../node_modules/core-js/internals/host-report-errors.js","../../node_modules/core-js/modules/es.promise.all-settled.js","../../node_modules/core-js/modules/es.promise.any.js","../../node_modules/core-js/modules/es.promise.finally.js","../../node_modules/core-js/internals/string-multibyte.js","../../node_modules/core-js/internals/iterators-core.js","../../node_modules/core-js/internals/create-iterator-constructor.js","../../node_modules/core-js/internals/define-iterator.js","../../node_modules/core-js/modules/es.string.iterator.js","../../node_modules/core-js/internals/dom-iterables.js","../../node_modules/core-js/internals/add-to-unscopables.js","../../node_modules/core-js/modules/es.array.iterator.js","../../node_modules/core-js/modules/web.dom-collections.iterator.js","../../node_modules/core-js/es/promise/index.js","../../node_modules/core-js/modules/esnext.promise.try.js","../../node_modules/core-js/internals/array-species-create.js","../../node_modules/core-js/internals/array-method-uses-to-length.js","../../node_modules/core-js/internals/is-array.js","../../node_modules/core-js/internals/array-iteration.js","../../node_modules/core-js/modules/es.array.find.js","../../node_modules/core-js/internals/entry-unbind.js","../../node_modules/core-js/modules/es.array.find-index.js","../../node_modules/core-js/es/array/find.js","../../node_modules/core-js/internals/create-property.js","../../node_modules/core-js/es/array/find-index.js","../../node_modules/core-js/modules/es.array.from.js","../../node_modules/core-js/internals/array-from.js","../../node_modules/core-js/internals/call-with-safe-iteration-closing.js","../../node_modules/core-js/es/array/from.js","../../node_modules/core-js/internals/array-method-is-strict.js","../../node_modules/core-js/modules/es.array.some.js","../../node_modules/core-js/es/array/some.js","../../node_modules/core-js/internals/array-buffer-view-core.js","../../node_modules/core-js/internals/array-buffer-native.js","../../node_modules/core-js/modules/es.typed-array.iterator.js","../../node_modules/core-js/internals/object-assign.js","../../node_modules/core-js/modules/es.object.assign.js","../../node_modules/core-js/es/object/assign.js","../../node_modules/core-js/internals/object-to-array.js","../../node_modules/core-js/modules/es.object.entries.js","../../node_modules/core-js/es/object/entries.js","../../node_modules/core-js/modules/es.object.values.js","../../node_modules/core-js/es/object/values.js","../../node_modules/core-js/internals/not-a-regexp.js","../../node_modules/core-js/internals/is-regexp.js","../../node_modules/core-js/internals/correct-is-regexp-logic.js","../../node_modules/core-js/modules/es.string.includes.js","../../node_modules/core-js/es/string/includes.js","../../node_modules/core-js/modules/es.string.starts-with.js","../../node_modules/core-js/es/string/starts-with.js","../../node_modules/core-js/modules/es.string.repeat.js","../../node_modules/core-js/internals/string-repeat.js","../../node_modules/core-js/es/string/repeat.js","../../node_modules/core-js/internals/array-method-has-species-support.js","../../node_modules/core-js/modules/es.array.concat.js","../../node_modules/core-js/internals/define-well-known-symbol.js","../../node_modules/core-js/modules/es.symbol.js","../../node_modules/core-js/internals/object-get-own-property-names-external.js","../../node_modules/core-js/internals/well-known-symbol-wrapped.js","../../node_modules/core-js/modules/es.symbol.async-iterator.js","../../node_modules/core-js/modules/es.symbol.description.js","../../node_modules/core-js/modules/es.symbol.has-instance.js","../../node_modules/core-js/modules/es.symbol.is-concat-spreadable.js","../../node_modules/core-js/modules/es.symbol.iterator.js","../../node_modules/core-js/modules/es.symbol.match.js","../../node_modules/core-js/modules/es.symbol.match-all.js","../../node_modules/core-js/modules/es.symbol.replace.js","../../node_modules/core-js/modules/es.symbol.search.js","../../node_modules/core-js/modules/es.symbol.species.js","../../node_modules/core-js/modules/es.symbol.split.js","../../node_modules/core-js/modules/es.symbol.to-primitive.js","../../node_modules/core-js/modules/es.symbol.to-string-tag.js","../../node_modules/core-js/modules/es.symbol.unscopables.js","../../node_modules/core-js/modules/es.json.to-string-tag.js","../../node_modules/core-js/modules/es.math.to-string-tag.js","../../node_modules/core-js/modules/es.reflect.to-string-tag.js","../../node_modules/core-js/es/symbol/index.js","../../node_modules/core-js/modules/esnext.symbol.async-dispose.js","../../node_modules/core-js/modules/esnext.symbol.dispose.js","../../node_modules/core-js/modules/esnext.symbol.observable.js","../../node_modules/core-js/modules/esnext.symbol.pattern-match.js","../../node_modules/core-js/modules/esnext.symbol.replace-all.js","../../node_modules/core-js/es/symbol/iterator.js","../../node_modules/core-js/internals/freezing.js","../../node_modules/core-js/internals/internal-metadata.js","../../node_modules/core-js/internals/collection.js","../../node_modules/core-js/internals/inherit-if-required.js","../../node_modules/core-js/internals/collection-strong.js","../../node_modules/core-js/modules/es.map.js","../../node_modules/core-js/es/map/index.js","../../node_modules/core-js/internals/collection-from.js","../../node_modules/core-js/modules/esnext.map.from.js","../../node_modules/core-js/internals/collection-of.js","../../node_modules/core-js/modules/esnext.map.of.js","../../node_modules/core-js/internals/collection-delete-all.js","../../node_modules/core-js/modules/esnext.map.delete-all.js","../../node_modules/core-js/modules/esnext.map.emplace.js","../../node_modules/core-js/internals/map-emplace.js","../../node_modules/core-js/internals/get-map-iterator.js","../../node_modules/core-js/modules/esnext.map.every.js","../../node_modules/core-js/modules/esnext.map.filter.js","../../node_modules/core-js/modules/esnext.map.find.js","../../node_modules/core-js/modules/esnext.map.find-key.js","../../node_modules/core-js/modules/esnext.map.group-by.js","../../node_modules/core-js/modules/esnext.map.includes.js","../../node_modules/core-js/internals/same-value-zero.js","../../node_modules/core-js/modules/esnext.map.key-by.js","../../node_modules/core-js/modules/esnext.map.key-of.js","../../node_modules/core-js/modules/esnext.map.map-keys.js","../../node_modules/core-js/modules/esnext.map.map-values.js","../../node_modules/core-js/modules/esnext.map.merge.js","../../node_modules/core-js/modules/esnext.map.reduce.js","../../node_modules/core-js/modules/esnext.map.some.js","../../node_modules/core-js/modules/esnext.map.update.js","../../node_modules/core-js/internals/map-upsert.js","../../node_modules/core-js/modules/esnext.map.upsert.js","../../node_modules/core-js/modules/esnext.map.update-or-insert.js","../../node_modules/core-js/modules/es.set.js","../../node_modules/core-js/es/set/index.js","../../node_modules/core-js/modules/esnext.set.from.js","../../node_modules/core-js/modules/esnext.set.of.js","../../node_modules/core-js/modules/esnext.set.add-all.js","../../node_modules/core-js/internals/collection-add-all.js","../../node_modules/core-js/modules/esnext.set.delete-all.js","../../node_modules/core-js/internals/get-set-iterator.js","../../node_modules/core-js/modules/esnext.set.every.js","../../node_modules/core-js/modules/esnext.set.difference.js","../../node_modules/core-js/modules/esnext.set.filter.js","../../node_modules/core-js/modules/esnext.set.find.js","../../node_modules/core-js/modules/esnext.set.intersection.js","../../node_modules/core-js/modules/esnext.set.is-disjoint-from.js","../../node_modules/core-js/modules/esnext.set.is-subset-of.js","../../node_modules/core-js/internals/get-iterator.js","../../node_modules/core-js/modules/esnext.set.is-superset-of.js","../../node_modules/core-js/modules/esnext.set.join.js","../../node_modules/core-js/modules/esnext.set.map.js","../../node_modules/core-js/modules/esnext.set.reduce.js","../../node_modules/core-js/modules/esnext.set.some.js","../../node_modules/core-js/modules/esnext.set.symmetric-difference.js","../../node_modules/core-js/modules/esnext.set.union.js","../../node_modules/core-js/internals/is-integer.js","../../node_modules/core-js/modules/es.number.is-integer.js","../../node_modules/core-js/es/number/is-integer.js","../../node_modules/core-js/modules/es.number.is-nan.js","../../node_modules/core-js/es/number/is-nan.js","../../node_modules/tslib/tslib.es6.js","../../packages/util/src/crypt.ts","../../packages/util/src/deepCopy.ts","../../packages/util/src/deferred.ts","../../packages/util/src/environment.ts","../../packages/util/src/errors.ts","../../packages/util/src/query.ts","../../packages/util/src/subscribe.ts","../../packages/util/src/exponential_backoff.ts","../../packages/util/src/compat.ts","../../packages/component/src/component.ts","../../packages/component/src/constants.ts","../../packages/component/src/provider.ts","../../packages/component/src/component_container.ts","../../packages/logger/src/logger.ts","../app-exp/src/platformLoggerService.ts","../app-exp/src/logger.ts","../app-exp/src/registerCoreComponents.ts","../app-exp/src/constants.ts","../app-exp/src/internal.ts","../app-exp/src/errors.ts","../app-exp/src/firebaseApp.ts","../app-exp/src/api.ts","../app-compat/src/firebaseApp.ts","../app-compat/src/errors.ts","../app-compat/src/firebaseNamespaceCore.ts","../../packages/util/src/obj.ts","../app-compat/src/firebaseNamespace.ts","../app-compat/src/logger.ts","../app-compat/src/index.ts","../app-compat/src/registerCoreComponents.ts","compat/app/index.ts","../auth-exp/src/core/errors.ts","../auth-exp/src/core/util/log.ts","../auth-exp/src/core/util/assert.ts","../auth-exp/src/core/util/instantiator.ts","../auth-exp/src/core/util/location.ts","../auth-exp/src/core/util/delay.ts","../auth-exp/src/core/util/navigator.ts","../auth-exp/src/core/util/emulator.ts","../auth-exp/src/core/util/fetch_provider.ts","../auth-exp/src/api/errors.ts","../auth-exp/src/api/index.ts","../auth-exp/src/core/util/time.ts","../auth-exp/src/core/user/id_token_result.ts","../auth-exp/src/core/user/invalidation.ts","../auth-exp/src/core/user/proactive_refresh.ts","../auth-exp/src/core/user/user_metadata.ts","../auth-exp/src/core/user/reload.ts","../auth-exp/src/api/account_management/account.ts","../auth-exp/src/core/user/token_manager.ts","../auth-exp/src/api/authentication/token.ts","../auth-exp/src/core/user/user_impl.ts","../auth-exp/src/core/persistence/in_memory.ts","../auth-exp/src/core/persistence/persistence_user_manager.ts","../auth-exp/src/core/util/browser.ts","../auth-exp/src/core/util/version.ts","../auth-exp/src/core/auth/auth_impl.ts","../auth-exp/src/core/auth/emulator.ts","../auth-exp/src/core/credentials/auth_credential.ts","../auth-exp/src/api/account_management/email_and_password.ts","../auth-exp/src/api/authentication/email_and_password.ts","../auth-exp/src/core/credentials/email.ts","../auth-exp/src/api/authentication/email_link.ts","../auth-exp/src/api/authentication/idp.ts","../auth-exp/src/core/credentials/oauth.ts","../auth-exp/src/api/authentication/sms.ts","../auth-exp/src/core/credentials/phone.ts","../auth-exp/src/core/action_code_url.ts","../auth-exp/src/core/providers/email.ts","../auth-exp/src/core/providers/federated.ts","../auth-exp/src/core/providers/oauth.ts","../auth-exp/src/core/providers/facebook.ts","../auth-exp/src/core/providers/google.ts","../auth-exp/src/core/providers/github.ts","../auth-exp/src/core/credentials/saml.ts","../auth-exp/src/core/providers/twitter.ts","../auth-exp/src/api/authentication/sign_up.ts","../auth-exp/src/core/user/user_credential_impl.ts","../auth-exp/src/mfa/mfa_error.ts","../auth-exp/src/core/util/providers.ts","../auth-exp/src/core/user/link_unlink.ts","../auth-exp/src/core/user/reauthenticate.ts","../auth-exp/src/core/strategies/credential.ts","../auth-exp/src/core/strategies/custom_token.ts","../auth-exp/src/api/authentication/custom_token.ts","../auth-exp/src/mfa/mfa_info.ts","../auth-exp/src/core/strategies/action_code_settings.ts","../auth-exp/src/core/strategies/email_and_password.ts","../auth-exp/src/core/strategies/email_link.ts","../auth-exp/src/core/strategies/email.ts","../auth-exp/src/api/authentication/create_auth_uri.ts","../auth-exp/src/core/user/account_info.ts","../auth-exp/src/api/account_management/profile.ts","../auth-exp/src/core/user/additional_user_info.ts","../auth-exp/src/mfa/mfa_session.ts","../auth-exp/src/mfa/mfa_resolver.ts","../auth-exp/src/mfa/mfa_user.ts","../auth-exp/src/api/account_management/mfa.ts","../auth-exp/src/core/auth/firebase_internal.ts","../auth-exp/src/core/persistence/index.ts","../auth-exp/src/platform_browser/persistence/browser.ts","../auth-exp/src/platform_browser/persistence/local_storage.ts","../auth-exp/src/platform_browser/messagechannel/receiver.ts","../auth-exp/src/platform_browser/messagechannel/promise.ts","../auth-exp/src/platform_browser/messagechannel/sender.ts","../auth-exp/src/platform_browser/auth_window.ts","../auth-exp/src/platform_browser/util/worker.ts","../auth-exp/src/platform_browser/persistence/indexed_db.ts","../auth-exp/src/core/auth/auth_event_manager.ts","../auth-exp/src/core/util/event_id.ts","../auth-exp/src/core/util/validate_origin.ts","../auth-exp/src/api/project_config/get_project_config.ts","../auth-exp/src/platform_browser/load_js.ts","../auth-exp/src/platform_browser/iframe/gapi.ts","../auth-exp/src/platform_browser/iframe/iframe.ts","../auth-exp/src/platform_browser/persistence/session_storage.ts","../auth-exp/src/platform_browser/util/popup.ts","../auth-exp/src/core/util/resolver.ts","../auth-exp/src/core/strategies/idp.ts","../auth-exp/src/core/strategies/abstract_popup_redirect_operation.ts","../auth-exp/src/core/strategies/redirect.ts","../auth-exp/src/platform_browser/strategies/redirect.ts","../auth-exp/src/core/util/handler.ts","../auth-exp/src/platform_browser/popup_redirect.ts","../auth-exp/src/platform_browser/recaptcha/recaptcha_mock.ts","../auth-exp/src/platform_browser/recaptcha/recaptcha_loader.ts","../auth-exp/src/platform_browser/recaptcha/recaptcha_verifier.ts","../auth-exp/src/core/auth/register.ts","../auth-exp/src/api/authentication/recaptcha.ts","../auth-exp/src/platform_browser/strategies/phone.ts","../auth-exp/src/api/authentication/mfa.ts","../auth-exp/src/platform_browser/providers/phone.ts","../auth-exp/src/platform_browser/strategies/popup.ts","../auth-exp/src/mfa/mfa_assertion.ts","../auth-exp/src/platform_browser/mfa/assertions/phone.ts","../auth-exp/src/platform_cordova/plugins.ts","../auth-exp/src/core/auth/initialize.ts","../auth-exp/src/platform_cordova/popup_redirect/utils.ts","../auth-exp/src/platform_cordova/popup_redirect/events.ts","../auth-exp/src/platform_cordova/popup_redirect/popup_redirect.ts","../auth-compat-exp/src/platform.ts","../auth-compat-exp/src/persistence.ts","../auth-compat-exp/src/popup_redirect.ts","../auth-compat-exp/src/user_credential.ts","../auth-compat-exp/src/wrap.ts","../auth-compat-exp/src/user.ts","../auth-compat-exp/src/auth.ts","../auth-exp/internal/index.ts","../auth-exp/src/core/strategies/anonymous.ts","../auth-compat-exp/src/phone_auth_provider.ts","../auth-compat-exp/src/recaptcha_verifier.ts","../auth-compat-exp/index.ts","../functions-exp/src/serializer.ts","../functions-exp/src/constants.ts","../functions-exp/src/error.ts","../functions-exp/src/context.ts","../functions-exp/src/service.ts","../functions-exp/src/config.ts","../functions-exp/src/api.ts","../functions-exp/src/index.ts","../functions-compat/src/service.ts","../functions-compat/src/register.ts","../../node_modules/idb/lib/idb.mjs","../functions-compat/src/index.ts","../installations-exp/src/util/constants.ts","../installations-exp/src/util/errors.ts","../installations-exp/src/functions/common.ts","../installations-exp/src/util/sleep.ts","../installations-exp/src/helpers/generate-fid.ts","../installations-exp/src/helpers/buffer-to-base64-url-safe.ts","../installations-exp/src/util/get-key.ts","../installations-exp/src/helpers/fid-changed.ts","../installations-exp/src/helpers/idb-manager.ts","../installations-exp/src/helpers/get-installation-entry.ts","../installations-exp/src/functions/create-installation-request.ts","../installations-exp/src/functions/generate-auth-token-request.ts","../installations-exp/src/helpers/refresh-auth-token.ts","../installations-exp/src/api/get-token.ts","../installations-exp/src/helpers/extract-app-config.ts","../installations-exp/src/functions/config.ts","../installations-exp/src/api/get-id.ts","../installations-exp/src/index.ts","../messaging-exp/src/util/errors.ts","../messaging-exp/src/helpers/extract-app-config.ts","../messaging-exp/src/messaging-service.ts","../messaging-exp/src/util/constants.ts","../messaging-exp/src/helpers/array-base64-translator.ts","../messaging-exp/src/interfaces/internal-message-payload.ts","../messaging-exp/src/helpers/migrate-old-database.ts","../messaging-exp/src/internals/idb-manager.ts","../messaging-exp/src/internals/requests.ts","../messaging-exp/src/internals/token-manager.ts","../messaging-exp/src/helpers/registerDefaultSw.ts","../messaging-exp/src/api/getToken.ts","../messaging-exp/src/helpers/updateVapidKey.ts","../messaging-exp/src/helpers/updateSwReg.ts","../messaging-exp/src/api.ts","../messaging-exp/src/api/deleteToken.ts","../messaging-exp/src/api/onMessage.ts","../messaging-exp/src/api/onBackgroundMessage.ts","../messaging-exp/src/helpers/register.ts","../messaging-exp/src/api/isSupported.ts","../messaging-compat/src/messaging-compat.ts","../messaging-compat/src/registerMessagingCompat.ts","../messaging-compat/src/index.ts","../performance-exp/src/constants.ts","../performance-exp/src/utils/attributes_utils.ts","../performance-exp/src/utils/errors.ts","../performance-exp/src/utils/console_logger.ts","../performance-exp/src/services/api_service.ts","../performance-exp/src/services/iid_service.ts","../performance-exp/src/utils/string_merger.ts","../performance-exp/src/services/settings_service.ts","../performance-exp/src/utils/app_utils.ts","../performance-exp/src/services/remote_config_service.ts","../performance-exp/src/services/initialization_service.ts","../performance-exp/src/services/transport_service.ts","../performance-exp/src/services/perf_logger.ts","../performance-exp/src/utils/metric_utils.ts","../performance-exp/src/resources/trace.ts","../performance-exp/src/resources/network_request.ts","../performance-exp/src/services/oob_resources_service.ts","../performance-exp/src/controllers/perf.ts","../performance-exp/src/index.ts","../performance-compat/src/performance.ts","../performance-compat/src/index.ts","../analytics-exp/src/constants.ts","../analytics-exp/src/logger.ts","../analytics-exp/src/helpers.ts","../analytics-exp/src/errors.ts","../analytics-exp/src/get-config.ts","../analytics-exp/src/initialize-analytics.ts","../analytics-exp/src/factory.ts","../analytics-exp/src/api.ts","../analytics-exp/src/functions.ts","../analytics-exp/src/index.ts","../analytics-compat/src/constants.ts","../analytics-compat/src/service.ts","../analytics-compat/src/index.ts","../remote-config-exp/src/client/remote_config_fetch_client.ts","../remote-config-exp/src/errors.ts","../remote-config-exp/src/value.ts","../remote-config-exp/src/api.ts","../remote-config-exp/src/client/caching_client.ts","../remote-config-exp/src/client/rest_client.ts","../remote-config-exp/src/language.ts","../remote-config-exp/src/client/retrying_client.ts","../remote-config-exp/src/remote_config.ts","../remote-config-exp/src/storage/storage.ts","../remote-config-exp/src/storage/storage_cache.ts","../remote-config-exp/src/register.ts","../remote-config-exp/src/constants.ts","../remote-config-compat/src/remoteConfig.ts","../remote-config-exp/src/api2.ts","../remote-config-compat/src/index.ts","compat/index.cdn.ts"],"sourcesContent":["(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.github.io/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func\n  (function () { return this; })() || Function('return this')();\n","var fails = require('../internals/fails');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = shared.state || (shared.state = new WeakMap());\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    metadata.facade = it;\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","module.exports = false;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.8.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'\n});\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","module.exports = {};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  var state;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) {\n      createNonEnumerableProperty(value, 'name', key);\n    }\n    state = enforceInternalState(value);\n    if (!state.source) {\n      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');\n    }\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","exports.f = Object.getOwnPropertySymbols;\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name)) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];\n    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","var NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  // eslint-disable-next-line no-undef\n  && !Symbol.sham\n  // eslint-disable-next-line no-undef\n  && typeof Symbol.iterator == 'symbol';\n","module.exports = {};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var anObject = require('../internals/an-object');\n\nmodule.exports = function (iterator) {\n  var returnMethod = iterator['return'];\n  if (returnMethod !== undefined) {\n    return anObject(returnMethod.call(iterator)).value;\n  }\n};\n","var anObject = require('../internals/an-object');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar iteratorClose = require('../internals/iterator-close');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nmodule.exports = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator);\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = toLength(iterable.length); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && result instanceof Result) return result;\n      } return new Result(false);\n    }\n    iterator = iterFn.call(iterable);\n  }\n\n  next = iterator.next;\n  while (!(step = next.call(iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator);\n      throw error;\n    }\n    if (typeof result == 'object' && result && result instanceof Result) return result;\n  } return new Result(false);\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar create = require('../internals/object-create');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar iterate = require('../internals/iterate');\n\nvar $AggregateError = function AggregateError(errors, message) {\n  var that = this;\n  if (!(that instanceof $AggregateError)) return new $AggregateError(errors, message);\n  if (setPrototypeOf) {\n    that = setPrototypeOf(new Error(undefined), getPrototypeOf(that));\n  }\n  if (message !== undefined) createNonEnumerableProperty(that, 'message', String(message));\n  var errorsArray = [];\n  iterate(errors, errorsArray.push, { that: errorsArray });\n  createNonEnumerableProperty(that, 'errors', errorsArray);\n  return that;\n};\n\n$AggregateError.prototype = create(Error.prototype, {\n  constructor: createPropertyDescriptor(5, $AggregateError),\n  message: createPropertyDescriptor(5, ''),\n  name: createPropertyDescriptor(5, 'AggregateError')\n});\n\n$({ global: true }, {\n  AggregateError: $AggregateError\n});\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\n// `Object.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nif (!TO_STRING_TAG_SUPPORT) {\n  redefine(Object.prototype, 'toString', toString, { unsafe: true });\n}\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) redefine(target, key, src[key], options);\n  return target;\n};\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n","module.exports = function (it, Constructor, name) {\n  if (!(it instanceof Constructor)) {\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n  } return it;\n};\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.github.io/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","var global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar bind = require('../internals/function-bind-context');\nvar html = require('../internals/html');\nvar createElement = require('../internals/document-create-element');\nvar IS_IOS = require('../internals/engine-is-ios');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar location = global.location;\nvar set = global.setImmediate;\nvar clear = global.clearImmediate;\nvar process = global.process;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\n\nvar run = function (id) {\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar listener = function (event) {\n  run(event.data);\n};\n\nvar post = function (id) {\n  // old engines have not location.origin\n  global.postMessage(id + '', location.protocol + '//' + location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (IS_NODE) {\n    defer = function (id) {\n      process.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  // except iOS - https://github.com/zloirock/core-js/issues/624\n  } else if (MessageChannel && !IS_IOS) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = bind(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (\n    global.addEventListener &&\n    typeof postMessage == 'function' &&\n    !global.importScripts &&\n    location && location.protocol !== 'file:' &&\n    !fails(post)\n  ) {\n    defer = post;\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: set,\n  clear: clear\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var userAgent = require('../internals/engine-user-agent');\n\nmodule.exports = /(iphone|ipod|ipad).*applewebkit/i.test(userAgent);\n","var classof = require('../internals/classof-raw');\nvar global = require('../internals/global');\n\nmodule.exports = classof(global.process) == 'process';\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar macrotask = require('../internals/task').set;\nvar IS_IOS = require('../internals/engine-is-ios');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar MutationObserver = global.MutationObserver || global.WebKitMutationObserver;\nvar document = global.document;\nvar process = global.process;\nvar Promise = global.Promise;\n// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\nvar queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');\nvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n\nvar flush, head, last, notify, toggle, node, promise, then;\n\n// modern engines have queueMicrotask method\nif (!queueMicrotask) {\n  flush = function () {\n    var parent, fn;\n    if (IS_NODE && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (error) {\n        if (head) notify();\n        else last = undefined;\n        throw error;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n  if (!IS_IOS && !IS_NODE && MutationObserver && document) {\n    toggle = true;\n    node = document.createTextNode('');\n    new MutationObserver(flush).observe(node, { characterData: true });\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    promise = Promise.resolve(undefined);\n    then = promise.then;\n    notify = function () {\n      then.call(promise, flush);\n    };\n  // Node.js without promises\n  } else if (IS_NODE) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n}\n\nmodule.exports = queueMicrotask || function (fn) {\n  var task = { fn: fn, next: undefined };\n  if (last) last.next = task;\n  if (!head) {\n    head = task;\n    notify();\n  } last = task;\n};\n","'use strict';\nvar aFunction = require('../internals/a-function');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n};\n\n// 25.4.1.5 NewPromiseCapability(C)\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","module.exports = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = match[1];\n  }\n}\n\nmodule.exports = version && +version;\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar setSpecies = require('../internals/set-species');\nvar isObject = require('../internals/is-object');\nvar aFunction = require('../internals/a-function');\nvar anInstance = require('../internals/an-instance');\nvar inspectSource = require('../internals/inspect-source');\nvar iterate = require('../internals/iterate');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar speciesConstructor = require('../internals/species-constructor');\nvar task = require('../internals/task').set;\nvar microtask = require('../internals/microtask');\nvar promiseResolve = require('../internals/promise-resolve');\nvar hostReportErrors = require('../internals/host-report-errors');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar InternalStateModule = require('../internals/internal-state');\nvar isForced = require('../internals/is-forced');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_NODE = require('../internals/engine-is-node');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\nvar PROMISE = 'Promise';\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar getInternalPromiseState = InternalStateModule.getterFor(PROMISE);\nvar PromiseConstructor = NativePromise;\nvar TypeError = global.TypeError;\nvar document = global.document;\nvar process = global.process;\nvar $fetch = getBuiltIn('fetch');\nvar newPromiseCapability = newPromiseCapabilityModule.f;\nvar newGenericPromiseCapability = newPromiseCapability;\nvar DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);\nvar NATIVE_REJECTION_EVENT = typeof PromiseRejectionEvent == 'function';\nvar UNHANDLED_REJECTION = 'unhandledrejection';\nvar REJECTION_HANDLED = 'rejectionhandled';\nvar PENDING = 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\nvar HANDLED = 1;\nvar UNHANDLED = 2;\nvar Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n\nvar FORCED = isForced(PROMISE, function () {\n  var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);\n  if (!GLOBAL_CORE_JS_PROMISE) {\n    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n    // We can't detect it synchronously, so just check versions\n    if (V8_VERSION === 66) return true;\n    // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    if (!IS_NODE && !NATIVE_REJECTION_EVENT) return true;\n  }\n  // We need Promise#finally in the pure version for preventing prototype pollution\n  if (IS_PURE && !PromiseConstructor.prototype['finally']) return true;\n  // We can't use @@species feature detection in V8 since it causes\n  // deoptimization and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor)) return false;\n  // Detect correctness of subclassing with @@species support\n  var promise = PromiseConstructor.resolve(1);\n  var FakePromise = function (exec) {\n    exec(function () { /* empty */ }, function () { /* empty */ });\n  };\n  var constructor = promise.constructor = {};\n  constructor[SPECIES] = FakePromise;\n  return !(promise.then(function () { /* empty */ }) instanceof FakePromise);\n});\n\nvar INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {\n  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });\n});\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\n\nvar notify = function (state, isReject) {\n  if (state.notified) return;\n  state.notified = true;\n  var chain = state.reactions;\n  microtask(function () {\n    var value = state.value;\n    var ok = state.state == FULFILLED;\n    var index = 0;\n    // variable length - can't use forEach\n    while (chain.length > index) {\n      var reaction = chain[index++];\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (state.rejection === UNHANDLED) onHandleUnhandled(state);\n            state.rejection = HANDLED;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // can throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (error) {\n        if (domain && !exited) domain.exit();\n        reject(error);\n      }\n    }\n    state.reactions = [];\n    state.notified = false;\n    if (isReject && !state.rejection) onUnhandled(state);\n  });\n};\n\nvar dispatchEvent = function (name, promise, reason) {\n  var event, handler;\n  if (DISPATCH_EVENT) {\n    event = document.createEvent('Event');\n    event.promise = promise;\n    event.reason = reason;\n    event.initEvent(name, false, true);\n    global.dispatchEvent(event);\n  } else event = { promise: promise, reason: reason };\n  if (!NATIVE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);\n  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n};\n\nvar onUnhandled = function (state) {\n  task.call(global, function () {\n    var promise = state.facade;\n    var value = state.value;\n    var IS_UNHANDLED = isUnhandled(state);\n    var result;\n    if (IS_UNHANDLED) {\n      result = perform(function () {\n        if (IS_NODE) {\n          process.emit('unhandledRejection', value, promise);\n        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n      if (result.error) throw result.value;\n    }\n  });\n};\n\nvar isUnhandled = function (state) {\n  return state.rejection !== HANDLED && !state.parent;\n};\n\nvar onHandleUnhandled = function (state) {\n  task.call(global, function () {\n    var promise = state.facade;\n    if (IS_NODE) {\n      process.emit('rejectionHandled', promise);\n    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n  });\n};\n\nvar bind = function (fn, state, unwrap) {\n  return function (value) {\n    fn(state, value, unwrap);\n  };\n};\n\nvar internalReject = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  state.value = value;\n  state.state = REJECTED;\n  notify(state, true);\n};\n\nvar internalResolve = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  try {\n    if (state.facade === value) throw TypeError(\"Promise can't be resolved itself\");\n    var then = isThenable(value);\n    if (then) {\n      microtask(function () {\n        var wrapper = { done: false };\n        try {\n          then.call(value,\n            bind(internalResolve, wrapper, state),\n            bind(internalReject, wrapper, state)\n          );\n        } catch (error) {\n          internalReject(wrapper, error, state);\n        }\n      });\n    } else {\n      state.value = value;\n      state.state = FULFILLED;\n      notify(state, false);\n    }\n  } catch (error) {\n    internalReject({ done: false }, error, state);\n  }\n};\n\n// constructor polyfill\nif (FORCED) {\n  // 25.4.3.1 Promise(executor)\n  PromiseConstructor = function Promise(executor) {\n    anInstance(this, PromiseConstructor, PROMISE);\n    aFunction(executor);\n    Internal.call(this);\n    var state = getInternalState(this);\n    try {\n      executor(bind(internalResolve, state), bind(internalReject, state));\n    } catch (error) {\n      internalReject(state, error);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    setInternalState(this, {\n      type: PROMISE,\n      done: false,\n      notified: false,\n      parent: false,\n      reactions: [],\n      rejection: false,\n      state: PENDING,\n      value: undefined\n    });\n  };\n  Internal.prototype = redefineAll(PromiseConstructor.prototype, {\n    // `Promise.prototype.then` method\n    // https://tc39.github.io/ecma262/#sec-promise.prototype.then\n    then: function then(onFulfilled, onRejected) {\n      var state = getInternalPromiseState(this);\n      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = IS_NODE ? process.domain : undefined;\n      state.parent = true;\n      state.reactions.push(reaction);\n      if (state.state != PENDING) notify(state, false);\n      return reaction.promise;\n    },\n    // `Promise.prototype.catch` method\n    // https://tc39.github.io/ecma262/#sec-promise.prototype.catch\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    var state = getInternalState(promise);\n    this.promise = promise;\n    this.resolve = bind(internalResolve, state);\n    this.reject = bind(internalReject, state);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === PromiseConstructor || C === PromiseWrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n\n  if (!IS_PURE && typeof NativePromise == 'function') {\n    nativeThen = NativePromise.prototype.then;\n\n    // wrap native Promise#then for native async functions\n    redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {\n      var that = this;\n      return new PromiseConstructor(function (resolve, reject) {\n        nativeThen.call(that, resolve, reject);\n      }).then(onFulfilled, onRejected);\n    // https://github.com/zloirock/core-js/issues/640\n    }, { unsafe: true });\n\n    // wrap fetch result\n    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {\n      // eslint-disable-next-line no-unused-vars\n      fetch: function fetch(input /* , init */) {\n        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));\n      }\n    });\n  }\n}\n\n$({ global: true, wrap: true, forced: FORCED }, {\n  Promise: PromiseConstructor\n});\n\nsetToStringTag(PromiseConstructor, PROMISE, false, true);\nsetSpecies(PROMISE);\n\nPromiseWrapper = getBuiltIn(PROMISE);\n\n// statics\n$({ target: PROMISE, stat: true, forced: FORCED }, {\n  // `Promise.reject` method\n  // https://tc39.github.io/ecma262/#sec-promise.reject\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    capability.reject.call(undefined, r);\n    return capability.promise;\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {\n  // `Promise.resolve` method\n  // https://tc39.github.io/ecma262/#sec-promise.resolve\n  resolve: function resolve(x) {\n    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {\n  // `Promise.all` method\n  // https://tc39.github.io/ecma262/#sec-promise.all\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        $promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  },\n  // `Promise.race` method\n  // https://tc39.github.io/ecma262/#sec-promise.race\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      iterate(iterable, function (promise) {\n        $promiseResolve.call(C, promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","var global = require('../internals/global');\n\nmodule.exports = function (a, b) {\n  var console = global.console;\n  if (console && console.error) {\n    arguments.length === 1 ? console.error(a) : console.error(a, b);\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar iterate = require('../internals/iterate');\n\n// `Promise.allSettled` method\n// https://github.com/tc39/proposal-promise-allSettled\n$({ target: 'Promise', stat: true }, {\n  allSettled: function allSettled(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aFunction(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'fulfilled', value: value };\n          --remaining || resolve(values);\n        }, function (error) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'rejected', reason: error };\n          --remaining || resolve(values);\n        });\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar getBuiltIn = require('../internals/get-built-in');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar iterate = require('../internals/iterate');\n\nvar PROMISE_ANY_ERROR = 'No one promise resolved';\n\n// `Promise.any` method\n// https://github.com/tc39/proposal-promise-any\n$({ target: 'Promise', stat: true }, {\n  any: function any(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aFunction(C.resolve);\n      var errors = [];\n      var counter = 0;\n      var remaining = 1;\n      var alreadyResolved = false;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyRejected = false;\n        errors.push(undefined);\n        remaining++;\n        promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyRejected || alreadyResolved) return;\n          alreadyResolved = true;\n          resolve(value);\n        }, function (error) {\n          if (alreadyRejected || alreadyResolved) return;\n          alreadyRejected = true;\n          errors[index] = error;\n          --remaining || reject(new (getBuiltIn('AggregateError'))(errors, PROMISE_ANY_ERROR));\n        });\n      });\n      --remaining || reject(new (getBuiltIn('AggregateError'))(errors, PROMISE_ANY_ERROR));\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar redefine = require('../internals/redefine');\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromise && fails(function () {\n  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.github.io/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = typeof onFinally == 'function';\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// patch native Promise.prototype for native async functions\nif (!IS_PURE && typeof NativePromise == 'function' && !NativePromise.prototype['finally']) {\n  redefine(NativePromise.prototype, 'finally', getBuiltIn('Promise').prototype['finally']);\n}\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.github.io/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","require('../../modules/es.aggregate-error');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.promise');\nrequire('../../modules/es.promise.all-settled');\nrequire('../../modules/es.promise.any');\nrequire('../../modules/es.promise.finally');\nrequire('../../modules/es.string.iterator');\nrequire('../../modules/web.dom-collections.iterator');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Promise;\n","'use strict';\nvar $ = require('../internals/export');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\n\n// `Promise.try` method\n// https://github.com/tc39/proposal-promise-try\n$({ target: 'Promise', stat: true }, {\n  'try': function (callbackfn) {\n    var promiseCapability = newPromiseCapabilityModule.f(this);\n    var result = perform(callbackfn);\n    (result.error ? promiseCapability.reject : promiseCapability.resolve)(result.value);\n    return promiseCapability.promise;\n  }\n});\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\n\nvar defineProperty = Object.defineProperty;\nvar cache = {};\n\nvar thrower = function (it) { throw it; };\n\nmodule.exports = function (METHOD_NAME, options) {\n  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];\n  if (!options) options = {};\n  var method = [][METHOD_NAME];\n  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;\n  var argument0 = has(options, 0) ? options[0] : thrower;\n  var argument1 = has(options, 1) ? options[1] : undefined;\n\n  return cache[METHOD_NAME] = !!method && !fails(function () {\n    if (ACCESSORS && !DESCRIPTORS) return true;\n    var O = { length: -1 };\n\n    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });\n    else O[1] = 1;\n\n    method.call(O, argument0, argument1);\n  });\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","var bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_OUT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push.call(target, value); // filterOut\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterOut` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterOut: createMethod(7)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND);\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","var global = require('../internals/global');\nvar bind = require('../internals/function-bind-context');\n\nvar call = Function.call;\n\nmodule.exports = function (CONSTRUCTOR, METHOD, length) {\n  return bind(call, global[CONSTRUCTOR].prototype[METHOD], length);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $findIndex = require('../internals/array-iteration').findIndex;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND_INDEX = 'findIndex';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND_INDEX);\n\n// Shouldn't skip holes\nif (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.findIndex` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND_INDEX);\n","require('../../modules/es.array.find');\nvar entryUnbind = require('../../internals/entry-unbind');\n\nmodule.exports = entryUnbind('Array', 'find');\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","require('../../modules/es.array.find-index');\nvar entryUnbind = require('../../internals/entry-unbind');\n\nmodule.exports = entryUnbind('Array', 'findIndex');\n","var $ = require('../internals/export');\nvar from = require('../internals/array-from');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.github.io/ecma262/#sec-array.from\n$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from\n});\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\n// `Array.from` method implementation\n// https://tc39.github.io/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var C = typeof this == 'function' ? this : Array;\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var iteratorMethod = getIteratorMethod(O);\n  var index = 0;\n  var length, result, step, iterator, next, value;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = iteratorMethod.call(O);\n    next = iterator.next;\n    result = new C();\n    for (;!(step = next.call(iterator)).done; index++) {\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n      createProperty(result, index, value);\n    }\n  } else {\n    length = toLength(O.length);\n    result = new C(length);\n    for (;length > index; index++) {\n      value = mapping ? mapfn(O[index], index) : O[index];\n      createProperty(result, index, value);\n    }\n  }\n  result.length = index;\n  return result;\n};\n","var anObject = require('../internals/an-object');\nvar iteratorClose = require('../internals/iterator-close');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    iteratorClose(iterator);\n    throw error;\n  }\n};\n","require('../../modules/es.string.iterator');\nrequire('../../modules/es.array.from');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Array.from;\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $some = require('../internals/array-iteration').some;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('some');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('some');\n\n// `Array.prototype.some` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.some\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  some: function some(callbackfn /* , thisArg */) {\n    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","require('../../modules/es.array.some');\nvar entryUnbind = require('../../internals/entry-unbind');\n\nmodule.exports = entryUnbind('Array', 'some');\n","'use strict';\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-native');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar uid = require('../internals/uid');\n\nvar Int8Array = global.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar Uint8ClampedArray = global.Uint8ClampedArray;\nvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\nvar TypedArray = Int8Array && getPrototypeOf(Int8Array);\nvar TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\nvar ObjectPrototype = Object.prototype;\nvar isPrototypeOf = ObjectPrototype.isPrototypeOf;\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\n// Fixing native typed arrays in Opera Presto crashes the browser, see #595\nvar NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';\nvar TYPED_ARRAY_TAG_REQIRED = false;\nvar NAME;\n\nvar TypedArrayConstructorsList = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\n\nvar BigIntArrayConstructorsList = {\n  BigInt64Array: 8,\n  BigUint64Array: 8\n};\n\nvar isView = function isView(it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return klass === 'DataView'\n    || has(TypedArrayConstructorsList, klass)\n    || has(BigIntArrayConstructorsList, klass);\n};\n\nvar isTypedArray = function (it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return has(TypedArrayConstructorsList, klass)\n    || has(BigIntArrayConstructorsList, klass);\n};\n\nvar aTypedArray = function (it) {\n  if (isTypedArray(it)) return it;\n  throw TypeError('Target is not a typed array');\n};\n\nvar aTypedArrayConstructor = function (C) {\n  if (setPrototypeOf) {\n    if (isPrototypeOf.call(TypedArray, C)) return C;\n  } else for (var ARRAY in TypedArrayConstructorsList) if (has(TypedArrayConstructorsList, NAME)) {\n    var TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && (C === TypedArrayConstructor || isPrototypeOf.call(TypedArrayConstructor, C))) {\n      return C;\n    }\n  } throw TypeError('Target is not a typed array constructor');\n};\n\nvar exportTypedArrayMethod = function (KEY, property, forced) {\n  if (!DESCRIPTORS) return;\n  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n    var TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && has(TypedArrayConstructor.prototype, KEY)) {\n      delete TypedArrayConstructor.prototype[KEY];\n    }\n  }\n  if (!TypedArrayPrototype[KEY] || forced) {\n    redefine(TypedArrayPrototype, KEY, forced ? property\n      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property);\n  }\n};\n\nvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n  var ARRAY, TypedArrayConstructor;\n  if (!DESCRIPTORS) return;\n  if (setPrototypeOf) {\n    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n      TypedArrayConstructor = global[ARRAY];\n      if (TypedArrayConstructor && has(TypedArrayConstructor, KEY)) {\n        delete TypedArrayConstructor[KEY];\n      }\n    }\n    if (!TypedArray[KEY] || forced) {\n      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n      try {\n        return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && Int8Array[KEY] || property);\n      } catch (error) { /* empty */ }\n    } else return;\n  }\n  for (ARRAY in TypedArrayConstructorsList) {\n    TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n      redefine(TypedArrayConstructor, KEY, property);\n    }\n  }\n};\n\nfor (NAME in TypedArrayConstructorsList) {\n  if (!global[NAME]) NATIVE_ARRAY_BUFFER_VIEWS = false;\n}\n\n// WebKit bug - typed arrays constructors prototype is Object.prototype\nif (!NATIVE_ARRAY_BUFFER_VIEWS || typeof TypedArray != 'function' || TypedArray === Function.prototype) {\n  // eslint-disable-next-line no-shadow\n  TypedArray = function TypedArray() {\n    throw TypeError('Incorrect invocation');\n  };\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);\n  }\n}\n\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\n  TypedArrayPrototype = TypedArray.prototype;\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);\n  }\n}\n\n// WebKit bug - one more object in Uint8ClampedArray prototype chain\nif (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n}\n\nif (DESCRIPTORS && !has(TypedArrayPrototype, TO_STRING_TAG)) {\n  TYPED_ARRAY_TAG_REQIRED = true;\n  defineProperty(TypedArrayPrototype, TO_STRING_TAG, { get: function () {\n    return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n  } });\n  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {\n    createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);\n  }\n}\n\nmodule.exports = {\n  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG,\n  aTypedArray: aTypedArray,\n  aTypedArrayConstructor: aTypedArrayConstructor,\n  exportTypedArrayMethod: exportTypedArrayMethod,\n  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n  isView: isView,\n  isTypedArray: isTypedArray,\n  TypedArray: TypedArray,\n  TypedArrayPrototype: TypedArrayPrototype\n};\n","module.exports = typeof ArrayBuffer !== 'undefined' && typeof DataView !== 'undefined';\n","'use strict';\nvar global = require('../internals/global');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar ArrayIterators = require('../modules/es.array.iterator');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar Uint8Array = global.Uint8Array;\nvar arrayValues = ArrayIterators.values;\nvar arrayKeys = ArrayIterators.keys;\nvar arrayEntries = ArrayIterators.entries;\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar nativeTypedArrayIterator = Uint8Array && Uint8Array.prototype[ITERATOR];\n\nvar CORRECT_ITER_NAME = !!nativeTypedArrayIterator\n  && (nativeTypedArrayIterator.name == 'values' || nativeTypedArrayIterator.name == undefined);\n\nvar typedArrayValues = function values() {\n  return arrayValues.call(aTypedArray(this));\n};\n\n// `%TypedArray%.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.entries\nexportTypedArrayMethod('entries', function entries() {\n  return arrayEntries.call(aTypedArray(this));\n});\n// `%TypedArray%.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.keys\nexportTypedArrayMethod('keys', function keys() {\n  return arrayKeys.call(aTypedArray(this));\n});\n// `%TypedArray%.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.values\nexportTypedArrayMethod('values', typedArrayValues, !CORRECT_ITER_NAME);\n// `%TypedArray%.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype-@@iterator\nexportTypedArrayMethod(ITERATOR, typedArrayValues, !CORRECT_ITER_NAME);\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\n\nvar nativeAssign = Object.assign;\nvar defineProperty = Object.defineProperty;\n\n// `Object.assign` method\n// https://tc39.github.io/ecma262/#sec-object.assign\nmodule.exports = !nativeAssign || fails(function () {\n  // should have correct order of operations (Edge bug)\n  if (DESCRIPTORS && nativeAssign({ b: 1 }, nativeAssign(defineProperty({}, 'a', {\n    enumerable: true,\n    get: function () {\n      defineProperty(this, 'b', {\n        value: 3,\n        enumerable: false\n      });\n    }\n  }), { b: 2 })).b !== 1) return true;\n  // should work with symbols and should have deterministic property order (V8 bug)\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var symbol = Symbol();\n  var alphabet = 'abcdefghijklmnopqrst';\n  A[symbol] = 7;\n  alphabet.split('').forEach(function (chr) { B[chr] = chr; });\n  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var argumentsLength = arguments.length;\n  var index = 1;\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  var propertyIsEnumerable = propertyIsEnumerableModule.f;\n  while (argumentsLength > index) {\n    var S = IndexedObject(arguments[index++]);\n    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : nativeAssign;\n","var $ = require('../internals/export');\nvar assign = require('../internals/object-assign');\n\n// `Object.assign` method\n// https://tc39.github.io/ecma262/#sec-object.assign\n$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {\n  assign: assign\n});\n","require('../../modules/es.object.assign');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Object.assign;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {\n        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.github.io/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.github.io/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.github.io/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","require('../../modules/es.object.entries');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Object.entries;\n","var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.github.io/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","require('../../modules/es.object.values');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Object.values;\n","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.github.io/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~String(requireObjectCoercible(this))\n      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","require('../../modules/es.string.includes');\nvar entryUnbind = require('../../internals/entry-unbind');\n\nmodule.exports = entryUnbind('String', 'includes');\n","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\nvar nativeStartsWith = ''.startsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.startsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.startswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return nativeStartsWith\n      ? nativeStartsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","require('../../modules/es.string.starts-with');\nvar entryUnbind = require('../../internals/entry-unbind');\n\nmodule.exports = entryUnbind('String', 'startsWith');\n","var $ = require('../internals/export');\nvar repeat = require('../internals/string-repeat');\n\n// `String.prototype.repeat` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\n$({ target: 'String', proto: true }, {\n  repeat: repeat\n});\n","'use strict';\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\nmodule.exports = ''.repeat || function repeat(count) {\n  var str = String(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","require('../../modules/es.string.repeat');\nvar entryUnbind = require('../../internals/entry-unbind');\n\nmodule.exports = entryUnbind('String', 'repeat');\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","var path = require('../internals/path');\nvar has = require('../internals/has');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\nvar WellKnownSymbolsStore = shared('wks');\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar isSymbol = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return Object(it) instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPrimitive(P, true);\n  anObject(Attributes);\n  if (has(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPrimitive(V, true);\n  var enumerable = nativePropertyIsEnumerable.call(this, P);\n  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPrimitive(P, true);\n  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n      result.push(AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.github.io/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  redefine($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Symbol.for` method\n  // https://tc39.github.io/ecma262/#sec-symbol.for\n  'for': function (key) {\n    var string = String(key);\n    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = $Symbol(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  },\n  // `Symbol.keyFor` method\n  // https://tc39.github.io/ecma262/#sec-symbol.keyfor\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  },\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.github.io/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // `Object.getOwnPropertySymbols` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return getOwnPropertySymbolsModule.f(toObject(it));\n  }\n});\n\n// `JSON.stringify` method behavior with symbols\n// https://tc39.github.io/ecma262/#sec-json.stringify\nif ($stringify) {\n  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {\n    var symbol = $Symbol();\n    // MS Edge converts symbol values to JSON as {}\n    return $stringify([symbol]) != '[null]'\n      // WebKit converts symbol values to JSON as null\n      || $stringify({ a: symbol }) != '{}'\n      // V8 throws on boxed symbols\n      || $stringify(Object(symbol)) != '{}';\n  });\n\n  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {\n    // eslint-disable-next-line no-unused-vars\n    stringify: function stringify(it, replacer, space) {\n      var args = [it];\n      var index = 1;\n      var $replacer;\n      while (arguments.length > index) args.push(arguments[index++]);\n      $replacer = replacer;\n      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n      if (!isArray(replacer)) replacer = function (key, value) {\n        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n        if (!isSymbol(value)) return value;\n      };\n      args[1] = replacer;\n      return $stringify.apply(null, args);\n    }\n  });\n}\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive\nif (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n}\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return nativeGetOwnPropertyNames(it);\n  } catch (error) {\n    return windowNames.slice();\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]'\n    ? getWindowNames(it)\n    : nativeGetOwnPropertyNames(toIndexedObject(it));\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.asyncIterator` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.asynciterator\ndefineWellKnownSymbol('asyncIterator');\n","// `Symbol.prototype.description` getter\n// https://tc39.github.io/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar has = require('../internals/has');\nvar isObject = require('../internals/is-object');\nvar defineProperty = require('../internals/object-define-property').f;\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n\n  var symbolToString = symbolPrototype.toString;\n  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (has(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.hasInstance` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.hasinstance\ndefineWellKnownSymbol('hasInstance');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.isConcatSpreadable` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.isconcatspreadable\ndefineWellKnownSymbol('isConcatSpreadable');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.match` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.match\ndefineWellKnownSymbol('match');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.matchAll` well-known symbol\ndefineWellKnownSymbol('matchAll');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.replace` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.replace\ndefineWellKnownSymbol('replace');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.search` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.search\ndefineWellKnownSymbol('search');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.species` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.species\ndefineWellKnownSymbol('species');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.split` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.split\ndefineWellKnownSymbol('split');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.toPrimitive` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.toprimitive\ndefineWellKnownSymbol('toPrimitive');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.toStringTag` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.tostringtag\ndefineWellKnownSymbol('toStringTag');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.unscopables` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.unscopables\ndefineWellKnownSymbol('unscopables');\n","var global = require('../internals/global');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n// JSON[@@toStringTag] property\n// https://tc39.github.io/ecma262/#sec-json-@@tostringtag\nsetToStringTag(global.JSON, 'JSON', true);\n","var setToStringTag = require('../internals/set-to-string-tag');\n\n// Math[@@toStringTag] property\n// https://tc39.github.io/ecma262/#sec-math-@@tostringtag\nsetToStringTag(Math, 'Math', true);\n","var $ = require('../internals/export');\nvar global = require('../internals/global');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n$({ global: true }, { Reflect: {} });\n\n// Reflect[@@toStringTag] property\n// https://tc39.es/ecma262/#sec-reflect-@@tostringtag\nsetToStringTag(global.Reflect, 'Reflect', true);\n","require('../../modules/es.array.concat');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.symbol');\nrequire('../../modules/es.symbol.async-iterator');\nrequire('../../modules/es.symbol.description');\nrequire('../../modules/es.symbol.has-instance');\nrequire('../../modules/es.symbol.is-concat-spreadable');\nrequire('../../modules/es.symbol.iterator');\nrequire('../../modules/es.symbol.match');\nrequire('../../modules/es.symbol.match-all');\nrequire('../../modules/es.symbol.replace');\nrequire('../../modules/es.symbol.search');\nrequire('../../modules/es.symbol.species');\nrequire('../../modules/es.symbol.split');\nrequire('../../modules/es.symbol.to-primitive');\nrequire('../../modules/es.symbol.to-string-tag');\nrequire('../../modules/es.symbol.unscopables');\nrequire('../../modules/es.json.to-string-tag');\nrequire('../../modules/es.math.to-string-tag');\nrequire('../../modules/es.reflect.to-string-tag');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Symbol;\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.asyncDispose` well-known symbol\n// https://github.com/tc39/proposal-using-statement\ndefineWellKnownSymbol('asyncDispose');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.dispose` well-known symbol\n// https://github.com/tc39/proposal-using-statement\ndefineWellKnownSymbol('dispose');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.observable` well-known symbol\n// https://github.com/tc39/proposal-observable\ndefineWellKnownSymbol('observable');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.patternMatch` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('patternMatch');\n","// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\ndefineWellKnownSymbol('replaceAll');\n","require('../../modules/es.symbol.iterator');\nrequire('../../modules/es.string.iterator');\nrequire('../../modules/web.dom-collections.iterator');\nvar WrappedWellKnownSymbolModule = require('../../internals/well-known-symbol-wrapped');\n\nmodule.exports = WrappedWellKnownSymbolModule.f('iterator');\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  return Object.isExtensible(Object.preventExtensions({}));\n});\n","var hiddenKeys = require('../internals/hidden-keys');\nvar isObject = require('../internals/is-object');\nvar has = require('../internals/has');\nvar defineProperty = require('../internals/object-define-property').f;\nvar uid = require('../internals/uid');\nvar FREEZING = require('../internals/freezing');\n\nvar METADATA = uid('meta');\nvar id = 0;\n\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\n\nvar setMetadata = function (it) {\n  defineProperty(it, METADATA, { value: {\n    objectID: 'O' + ++id, // object ID\n    weakData: {}          // weak collections IDs\n  } });\n};\n\nvar fastKey = function (it, create) {\n  // return a primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMetadata(it);\n  // return object ID\n  } return it[METADATA].objectID;\n};\n\nvar getWeakData = function (it, create) {\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMetadata(it);\n  // return the store of weak collections IDs\n  } return it[METADATA].weakData;\n};\n\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);\n  return it;\n};\n\nvar meta = module.exports = {\n  REQUIRED: false,\n  fastKey: fastKey,\n  getWeakData: getWeakData,\n  onFreeze: onFreeze\n};\n\nhiddenKeys[METADATA] = true;\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar InternalMetadataModule = require('../internals/internal-metadata');\nvar iterate = require('../internals/iterate');\nvar anInstance = require('../internals/an-instance');\nvar isObject = require('../internals/is-object');\nvar fails = require('../internals/fails');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nmodule.exports = function (CONSTRUCTOR_NAME, wrapper, common) {\n  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;\n  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var NativeConstructor = global[CONSTRUCTOR_NAME];\n  var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n  var Constructor = NativeConstructor;\n  var exported = {};\n\n  var fixMethod = function (KEY) {\n    var nativeMethod = NativePrototype[KEY];\n    redefine(NativePrototype, KEY,\n      KEY == 'add' ? function add(value) {\n        nativeMethod.call(this, value === 0 ? 0 : value);\n        return this;\n      } : KEY == 'delete' ? function (key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'get' ? function get(key) {\n        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'has' ? function has(key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : function set(key, value) {\n        nativeMethod.call(this, key === 0 ? 0 : key, value);\n        return this;\n      }\n    );\n  };\n\n  // eslint-disable-next-line max-len\n  if (isForced(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {\n    new NativeConstructor().entries().next();\n  })))) {\n    // create collection constructor\n    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n    InternalMetadataModule.REQUIRED = true;\n  } else if (isForced(CONSTRUCTOR_NAME, true)) {\n    var instance = new Constructor();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    // eslint-disable-next-line no-new\n    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new NativeConstructor();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n\n    if (!ACCEPT_ITERABLES) {\n      Constructor = wrapper(function (dummy, iterable) {\n        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);\n        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);\n        if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });\n        return that;\n      });\n      Constructor.prototype = NativePrototype;\n      NativePrototype.constructor = Constructor;\n    }\n\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n\n    // weak collections should not contains .clear method\n    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;\n  }\n\n  exported[CONSTRUCTOR_NAME] = Constructor;\n  $({ global: true, forced: Constructor != NativeConstructor }, exported);\n\n  setToStringTag(Constructor, CONSTRUCTOR_NAME);\n\n  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n\n  return Constructor;\n};\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","'use strict';\nvar defineProperty = require('../internals/object-define-property').f;\nvar create = require('../internals/object-create');\nvar redefineAll = require('../internals/redefine-all');\nvar bind = require('../internals/function-bind-context');\nvar anInstance = require('../internals/an-instance');\nvar iterate = require('../internals/iterate');\nvar defineIterator = require('../internals/define-iterator');\nvar setSpecies = require('../internals/set-species');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fastKey = require('../internals/internal-metadata').fastKey;\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar internalStateGetterFor = InternalStateModule.getterFor;\n\nmodule.exports = {\n  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, CONSTRUCTOR_NAME);\n      setInternalState(that, {\n        type: CONSTRUCTOR_NAME,\n        index: create(null),\n        first: undefined,\n        last: undefined,\n        size: 0\n      });\n      if (!DESCRIPTORS) that.size = 0;\n      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });\n    });\n\n    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n    var define = function (that, key, value) {\n      var state = getInternalState(that);\n      var entry = getEntry(that, key);\n      var previous, index;\n      // change existing entry\n      if (entry) {\n        entry.value = value;\n      // create new entry\n      } else {\n        state.last = entry = {\n          index: index = fastKey(key, true),\n          key: key,\n          value: value,\n          previous: previous = state.last,\n          next: undefined,\n          removed: false\n        };\n        if (!state.first) state.first = entry;\n        if (previous) previous.next = entry;\n        if (DESCRIPTORS) state.size++;\n        else that.size++;\n        // add to index\n        if (index !== 'F') state.index[index] = entry;\n      } return that;\n    };\n\n    var getEntry = function (that, key) {\n      var state = getInternalState(that);\n      // fast case\n      var index = fastKey(key);\n      var entry;\n      if (index !== 'F') return state.index[index];\n      // frozen object case\n      for (entry = state.first; entry; entry = entry.next) {\n        if (entry.key == key) return entry;\n      }\n    };\n\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        var that = this;\n        var state = getInternalState(that);\n        var data = state.index;\n        var entry = state.first;\n        while (entry) {\n          entry.removed = true;\n          if (entry.previous) entry.previous = entry.previous.next = undefined;\n          delete data[entry.index];\n          entry = entry.next;\n        }\n        state.first = state.last = undefined;\n        if (DESCRIPTORS) state.size = 0;\n        else that.size = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = this;\n        var state = getInternalState(that);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.next;\n          var prev = entry.previous;\n          delete state.index[entry.index];\n          entry.removed = true;\n          if (prev) prev.next = next;\n          if (next) next.previous = prev;\n          if (state.first == entry) state.first = next;\n          if (state.last == entry) state.last = prev;\n          if (DESCRIPTORS) state.size--;\n          else that.size--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        var state = getInternalState(this);\n        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.next : state.first) {\n          boundFunction(entry.value, entry.key, this);\n          // revert to the last existing entry\n          while (entry && entry.removed) entry = entry.previous;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(this, key);\n      }\n    });\n\n    redefineAll(C.prototype, IS_MAP ? {\n      // 23.1.3.6 Map.prototype.get(key)\n      get: function get(key) {\n        var entry = getEntry(this, key);\n        return entry && entry.value;\n      },\n      // 23.1.3.9 Map.prototype.set(key, value)\n      set: function set(key, value) {\n        return define(this, key === 0 ? 0 : key, value);\n      }\n    } : {\n      // 23.2.3.1 Set.prototype.add(value)\n      add: function add(value) {\n        return define(this, value = value === 0 ? 0 : value, value);\n      }\n    });\n    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {\n      get: function () {\n        return getInternalState(this).size;\n      }\n    });\n    return C;\n  },\n  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {\n    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {\n      setInternalState(this, {\n        type: ITERATOR_NAME,\n        target: iterated,\n        state: getInternalCollectionState(iterated),\n        kind: kind,\n        last: undefined\n      });\n    }, function () {\n      var state = getInternalIteratorState(this);\n      var kind = state.kind;\n      var entry = state.last;\n      // revert to the last existing entry\n      while (entry && entry.removed) entry = entry.previous;\n      // get next entry\n      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n        // or finish the iteration\n        state.target = undefined;\n        return { value: undefined, done: true };\n      }\n      // return step by kind\n      if (kind == 'keys') return { value: entry.key, done: false };\n      if (kind == 'values') return { value: entry.value, done: false };\n      return { value: [entry.key, entry.value], done: false };\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(CONSTRUCTOR_NAME);\n  }\n};\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.github.io/ecma262/#sec-map-objects\nmodule.exports = collection('Map', function (init) {\n  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","require('../../modules/es.map');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.string.iterator');\nrequire('../../modules/web.dom-collections.iterator');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Map;\n","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar aFunction = require('../internals/a-function');\nvar bind = require('../internals/function-bind-context');\nvar iterate = require('../internals/iterate');\n\nmodule.exports = function from(source /* , mapFn, thisArg */) {\n  var length = arguments.length;\n  var mapFn = length > 1 ? arguments[1] : undefined;\n  var mapping, array, n, boundFunction;\n  aFunction(this);\n  mapping = mapFn !== undefined;\n  if (mapping) aFunction(mapFn);\n  if (source == undefined) return new this();\n  array = [];\n  if (mapping) {\n    n = 0;\n    boundFunction = bind(mapFn, length > 2 ? arguments[2] : undefined, 2);\n    iterate(source, function (nextItem) {\n      array.push(boundFunction(nextItem, n++));\n    });\n  } else {\n    iterate(source, array.push, { that: array });\n  }\n  return new this(array);\n};\n","var $ = require('../internals/export');\nvar from = require('../internals/collection-from');\n\n// `Map.from` method\n// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from\n$({ target: 'Map', stat: true }, {\n  from: from\n});\n","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nmodule.exports = function of() {\n  var length = arguments.length;\n  var A = new Array(length);\n  while (length--) A[length] = arguments[length];\n  return new this(A);\n};\n","var $ = require('../internals/export');\nvar of = require('../internals/collection-of');\n\n// `Map.of` method\n// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of\n$({ target: 'Map', stat: true }, {\n  of: of\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\n\n// https://github.com/tc39/collection-methods\nmodule.exports = function (/* ...elements */) {\n  var collection = anObject(this);\n  var remover = aFunction(collection['delete']);\n  var allDeleted = true;\n  var wasDeleted;\n  for (var k = 0, len = arguments.length; k < len; k++) {\n    wasDeleted = remover.call(collection, arguments[k]);\n    allDeleted = allDeleted && wasDeleted;\n  }\n  return !!allDeleted;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar collectionDeleteAll = require('../internals/collection-delete-all');\n\n// `Map.prototype.deleteAll` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  deleteAll: function deleteAll(/* ...elements */) {\n    return collectionDeleteAll.apply(this, arguments);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar $emplace = require('../internals/map-emplace');\n\n// `Map.prototype.emplace` method\n// https://github.com/thumbsupep/proposal-upsert\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  emplace: $emplace\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `Map.prototype.emplace` method\n// https://github.com/thumbsupep/proposal-upsert\nmodule.exports = function emplace(key, handler) {\n  var map = anObject(this);\n  var value = (map.has(key) && 'update' in handler)\n    ? handler.update(map.get(key), key, map)\n    : handler.insert(key, map);\n  map.set(key, value);\n  return value;\n};\n","var IS_PURE = require('../internals/is-pure');\nvar getIterator = require('../internals/get-iterator');\n\nmodule.exports = IS_PURE ? getIterator : function (it) {\n  // eslint-disable-next-line no-undef\n  return Map.prototype.entries.call(it);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar bind = require('../internals/function-bind-context');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.every` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  every: function every(callbackfn /* , thisArg */) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    return !iterate(iterator, function (key, value, stop) {\n      if (!boundFunction(value, key, map)) return stop();\n    }, { AS_ENTRIES: true, IS_ITERATOR: true, INTERRUPTED: true }).stopped;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar bind = require('../internals/function-bind-context');\nvar speciesConstructor = require('../internals/species-constructor');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.filter` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var newMap = new (speciesConstructor(map, getBuiltIn('Map')))();\n    var setter = aFunction(newMap.set);\n    iterate(iterator, function (key, value) {\n      if (boundFunction(value, key, map)) setter.call(newMap, key, value);\n    }, { AS_ENTRIES: true, IS_ITERATOR: true });\n    return newMap;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar bind = require('../internals/function-bind-context');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.find` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  find: function find(callbackfn /* , thisArg */) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    return iterate(iterator, function (key, value, stop) {\n      if (boundFunction(value, key, map)) return stop(value);\n    }, { AS_ENTRIES: true, IS_ITERATOR: true, INTERRUPTED: true }).result;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar bind = require('../internals/function-bind-context');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.findKey` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  findKey: function findKey(callbackfn /* , thisArg */) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    return iterate(iterator, function (key, value, stop) {\n      if (boundFunction(value, key, map)) return stop(key);\n    }, { AS_ENTRIES: true, IS_ITERATOR: true, INTERRUPTED: true }).result;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar aFunction = require('../internals/a-function');\n\n// `Map.groupBy` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', stat: true }, {\n  groupBy: function groupBy(iterable, keyDerivative) {\n    var newMap = new this();\n    aFunction(keyDerivative);\n    var has = aFunction(newMap.has);\n    var get = aFunction(newMap.get);\n    var set = aFunction(newMap.set);\n    iterate(iterable, function (element) {\n      var derivedKey = keyDerivative(element);\n      if (!has.call(newMap, derivedKey)) set.call(newMap, derivedKey, [element]);\n      else get.call(newMap, derivedKey).push(element);\n    });\n    return newMap;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar sameValueZero = require('../internals/same-value-zero');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.includes` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  includes: function includes(searchElement) {\n    return iterate(getMapIterator(anObject(this)), function (key, value, stop) {\n      if (sameValueZero(value, searchElement)) return stop();\n    }, { AS_ENTRIES: true, IS_ITERATOR: true, INTERRUPTED: true }).stopped;\n  }\n});\n","// `SameValueZero` abstract operation\n// https://tc39.github.io/ecma262/#sec-samevaluezero\nmodule.exports = function (x, y) {\n  // eslint-disable-next-line no-self-compare\n  return x === y || x != x && y != y;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar aFunction = require('../internals/a-function');\n\n// `Map.keyBy` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', stat: true }, {\n  keyBy: function keyBy(iterable, keyDerivative) {\n    var newMap = new this();\n    aFunction(keyDerivative);\n    var setter = aFunction(newMap.set);\n    iterate(iterable, function (element) {\n      setter.call(newMap, keyDerivative(element), element);\n    });\n    return newMap;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.includes` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  keyOf: function keyOf(searchElement) {\n    return iterate(getMapIterator(anObject(this)), function (key, value, stop) {\n      if (value === searchElement) return stop(key);\n    }, { AS_ENTRIES: true, IS_ITERATOR: true, INTERRUPTED: true }).result;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar bind = require('../internals/function-bind-context');\nvar speciesConstructor = require('../internals/species-constructor');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.mapKeys` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  mapKeys: function mapKeys(callbackfn /* , thisArg */) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var newMap = new (speciesConstructor(map, getBuiltIn('Map')))();\n    var setter = aFunction(newMap.set);\n    iterate(iterator, function (key, value) {\n      setter.call(newMap, boundFunction(value, key, map), value);\n    }, { AS_ENTRIES: true, IS_ITERATOR: true });\n    return newMap;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar bind = require('../internals/function-bind-context');\nvar speciesConstructor = require('../internals/species-constructor');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.mapValues` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  mapValues: function mapValues(callbackfn /* , thisArg */) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var newMap = new (speciesConstructor(map, getBuiltIn('Map')))();\n    var setter = aFunction(newMap.set);\n    iterate(iterator, function (key, value) {\n      setter.call(newMap, key, boundFunction(value, key, map));\n    }, { AS_ENTRIES: true, IS_ITERATOR: true });\n    return newMap;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.merge` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  // eslint-disable-next-line no-unused-vars\n  merge: function merge(iterable /* ...iterbles */) {\n    var map = anObject(this);\n    var setter = aFunction(map.set);\n    var i = 0;\n    while (i < arguments.length) {\n      iterate(arguments[i++], setter, { that: map, AS_ENTRIES: true });\n    }\n    return map;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.reduce` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var noInitial = arguments.length < 2;\n    var accumulator = noInitial ? undefined : arguments[1];\n    aFunction(callbackfn);\n    iterate(iterator, function (key, value) {\n      if (noInitial) {\n        noInitial = false;\n        accumulator = value;\n      } else {\n        accumulator = callbackfn(accumulator, value, key, map);\n      }\n    }, { AS_ENTRIES: true, IS_ITERATOR: true });\n    if (noInitial) throw TypeError('Reduce of empty map with no initial value');\n    return accumulator;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar bind = require('../internals/function-bind-context');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.some` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  some: function some(callbackfn /* , thisArg */) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    return iterate(iterator, function (key, value, stop) {\n      if (boundFunction(value, key, map)) return stop();\n    }, { AS_ENTRIES: true, IS_ITERATOR: true, INTERRUPTED: true }).stopped;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\n\n// `Set.prototype.update` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  update: function update(key, callback /* , thunk */) {\n    var map = anObject(this);\n    var length = arguments.length;\n    aFunction(callback);\n    var isPresentInMap = map.has(key);\n    if (!isPresentInMap && length < 3) {\n      throw TypeError('Updating absent value');\n    }\n    var value = isPresentInMap ? map.get(key) : aFunction(length > 2 ? arguments[2] : undefined)(key, map);\n    map.set(key, callback(value, key, map));\n    return map;\n  }\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `Map.prototype.upsert` method\n// https://github.com/thumbsupep/proposal-upsert\nmodule.exports = function upsert(key, updateFn /* , insertFn */) {\n  var map = anObject(this);\n  var insertFn = arguments.length > 2 ? arguments[2] : undefined;\n  var value;\n  if (typeof updateFn != 'function' && typeof insertFn != 'function') {\n    throw TypeError('At least one callback required');\n  }\n  if (map.has(key)) {\n    value = map.get(key);\n    if (typeof updateFn == 'function') {\n      value = updateFn(value);\n      map.set(key, value);\n    }\n  } else if (typeof insertFn == 'function') {\n    value = insertFn();\n    map.set(key, value);\n  } return value;\n};\n","'use strict';\n// TODO: remove from `core-js@4`\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar $upsert = require('../internals/map-upsert');\n\n// `Map.prototype.upsert` method (replaced by `Map.prototype.emplace`)\n// https://github.com/thumbsupep/proposal-upsert\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  upsert: $upsert\n});\n","'use strict';\n// TODO: remove from `core-js@4`\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar $upsert = require('../internals/map-upsert');\n\n// `Map.prototype.updateOrInsert` method (replaced by `Map.prototype.emplace`)\n// https://github.com/thumbsupep/proposal-upsert\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  updateOrInsert: $upsert\n});\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.github.io/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","require('../../modules/es.set');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.string.iterator');\nrequire('../../modules/web.dom-collections.iterator');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Set;\n","var $ = require('../internals/export');\nvar from = require('../internals/collection-from');\n\n// `Set.from` method\n// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from\n$({ target: 'Set', stat: true }, {\n  from: from\n});\n","var $ = require('../internals/export');\nvar of = require('../internals/collection-of');\n\n// `Set.of` method\n// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of\n$({ target: 'Set', stat: true }, {\n  of: of\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar collectionAddAll = require('../internals/collection-add-all');\n\n// `Set.prototype.addAll` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  addAll: function addAll(/* ...elements */) {\n    return collectionAddAll.apply(this, arguments);\n  }\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\n\n// https://github.com/tc39/collection-methods\nmodule.exports = function (/* ...elements */) {\n  var set = anObject(this);\n  var adder = aFunction(set.add);\n  for (var k = 0, len = arguments.length; k < len; k++) {\n    adder.call(set, arguments[k]);\n  }\n  return set;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar collectionDeleteAll = require('../internals/collection-delete-all');\n\n// `Set.prototype.deleteAll` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  deleteAll: function deleteAll(/* ...elements */) {\n    return collectionDeleteAll.apply(this, arguments);\n  }\n});\n","var IS_PURE = require('../internals/is-pure');\nvar getIterator = require('../internals/get-iterator');\n\nmodule.exports = IS_PURE ? getIterator : function (it) {\n  // eslint-disable-next-line no-undef\n  return Set.prototype.values.call(it);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar bind = require('../internals/function-bind-context');\nvar getSetIterator = require('../internals/get-set-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.every` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  every: function every(callbackfn /* , thisArg */) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    return !iterate(iterator, function (value, stop) {\n      if (!boundFunction(value, value, set)) return stop();\n    }, { IS_ITERATOR: true, INTERRUPTED: true }).stopped;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar speciesConstructor = require('../internals/species-constructor');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.difference` method\n// https://github.com/tc39/proposal-set-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  difference: function difference(iterable) {\n    var set = anObject(this);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))(set);\n    var remover = aFunction(newSet['delete']);\n    iterate(iterable, function (value) {\n      remover.call(newSet, value);\n    });\n    return newSet;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar bind = require('../internals/function-bind-context');\nvar speciesConstructor = require('../internals/species-constructor');\nvar getSetIterator = require('../internals/get-set-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.filter` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))();\n    var adder = aFunction(newSet.add);\n    iterate(iterator, function (value) {\n      if (boundFunction(value, value, set)) adder.call(newSet, value);\n    }, { IS_ITERATOR: true });\n    return newSet;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar bind = require('../internals/function-bind-context');\nvar getSetIterator = require('../internals/get-set-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.find` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  find: function find(callbackfn /* , thisArg */) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    return iterate(iterator, function (value, stop) {\n      if (boundFunction(value, value, set)) return stop(value);\n    }, { IS_ITERATOR: true, INTERRUPTED: true }).result;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar speciesConstructor = require('../internals/species-constructor');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.intersection` method\n// https://github.com/tc39/proposal-set-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  intersection: function intersection(iterable) {\n    var set = anObject(this);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))();\n    var hasCheck = aFunction(set.has);\n    var adder = aFunction(newSet.add);\n    iterate(iterable, function (value) {\n      if (hasCheck.call(set, value)) adder.call(newSet, value);\n    });\n    return newSet;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.isDisjointFrom` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isDisjointFrom\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  isDisjointFrom: function isDisjointFrom(iterable) {\n    var set = anObject(this);\n    var hasCheck = aFunction(set.has);\n    return !iterate(iterable, function (value, stop) {\n      if (hasCheck.call(set, value) === true) return stop();\n    }, { INTERRUPTED: true }).stopped;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar getIterator = require('../internals/get-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.isSubsetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSubsetOf\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  isSubsetOf: function isSubsetOf(iterable) {\n    var iterator = getIterator(this);\n    var otherSet = anObject(iterable);\n    var hasCheck = otherSet.has;\n    if (typeof hasCheck != 'function') {\n      otherSet = new (getBuiltIn('Set'))(iterable);\n      hasCheck = aFunction(otherSet.has);\n    }\n    return !iterate(iterator, function (value, stop) {\n      if (hasCheck.call(otherSet, value) === false) return stop();\n    }, { IS_ITERATOR: true, INTERRUPTED: true }).stopped;\n  }\n});\n","var anObject = require('../internals/an-object');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nmodule.exports = function (it) {\n  var iteratorMethod = getIteratorMethod(it);\n  if (typeof iteratorMethod != 'function') {\n    throw TypeError(String(it) + ' is not iterable');\n  } return anObject(iteratorMethod.call(it));\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.isSupersetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSupersetOf\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  isSupersetOf: function isSupersetOf(iterable) {\n    var set = anObject(this);\n    var hasCheck = aFunction(set.has);\n    return !iterate(iterable, function (value, stop) {\n      if (hasCheck.call(set, value) === false) return stop();\n    }, { INTERRUPTED: true }).stopped;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar getSetIterator = require('../internals/get-set-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.join` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  join: function join(separator) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var sep = separator === undefined ? ',' : String(separator);\n    var result = [];\n    iterate(iterator, result.push, { that: result, IS_ITERATOR: true });\n    return result.join(sep);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar bind = require('../internals/function-bind-context');\nvar speciesConstructor = require('../internals/species-constructor');\nvar getSetIterator = require('../internals/get-set-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.map` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  map: function map(callbackfn /* , thisArg */) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))();\n    var adder = aFunction(newSet.add);\n    iterate(iterator, function (value) {\n      adder.call(newSet, boundFunction(value, value, set));\n    }, { IS_ITERATOR: true });\n    return newSet;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar getSetIterator = require('../internals/get-set-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.reduce` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var noInitial = arguments.length < 2;\n    var accumulator = noInitial ? undefined : arguments[1];\n    aFunction(callbackfn);\n    iterate(iterator, function (value) {\n      if (noInitial) {\n        noInitial = false;\n        accumulator = value;\n      } else {\n        accumulator = callbackfn(accumulator, value, value, set);\n      }\n    }, { IS_ITERATOR: true });\n    if (noInitial) throw TypeError('Reduce of empty set with no initial value');\n    return accumulator;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar bind = require('../internals/function-bind-context');\nvar getSetIterator = require('../internals/get-set-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.some` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  some: function some(callbackfn /* , thisArg */) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    return iterate(iterator, function (value, stop) {\n      if (boundFunction(value, value, set)) return stop();\n    }, { IS_ITERATOR: true, INTERRUPTED: true }).stopped;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar speciesConstructor = require('../internals/species-constructor');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.symmetricDifference` method\n// https://github.com/tc39/proposal-set-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  symmetricDifference: function symmetricDifference(iterable) {\n    var set = anObject(this);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))(set);\n    var remover = aFunction(newSet['delete']);\n    var adder = aFunction(newSet.add);\n    iterate(iterable, function (value) {\n      remover.call(newSet, value) || adder.call(newSet, value);\n    });\n    return newSet;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar speciesConstructor = require('../internals/species-constructor');\nvar iterate = require('../internals/iterate');\n\n// `Set.prototype.union` method\n// https://github.com/tc39/proposal-set-methods\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\n  union: function union(iterable) {\n    var set = anObject(this);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))(set);\n    iterate(iterable, aFunction(newSet.add), { that: newSet });\n    return newSet;\n  }\n});\n","var isObject = require('../internals/is-object');\n\nvar floor = Math.floor;\n\n// `Number.isInteger` method implementation\n// https://tc39.github.io/ecma262/#sec-number.isinteger\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","var $ = require('../internals/export');\nvar isInteger = require('../internals/is-integer');\n\n// `Number.isInteger` method\n// https://tc39.github.io/ecma262/#sec-number.isinteger\n$({ target: 'Number', stat: true }, {\n  isInteger: isInteger\n});\n","require('../../modules/es.number.is-integer');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Number.isInteger;\n","var $ = require('../internals/export');\n\n// `Number.isNaN` method\n// https://tc39.github.io/ecma262/#sec-number.isnan\n$({ target: 'Number', stat: true }, {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare\n    return number != number;\n  }\n});\n","require('../../modules/es.number.is-nan');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Number.isNaN;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return 'indexedDB' in self && indexedDB != null;\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (!navigator || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  readonly name = ERROR_NAME;\n\n  constructor(\n    readonly code: string,\n    message: string,\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private onInitCallbacks: Set<OnInitCallBack<T>> = new Set();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier: string = DEFAULT_ENTRY_NAME): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    const { identifier, optional } = {\n      identifier: DEFAULT_ENTRY_NAME,\n      optional: false,\n      ...options\n    };\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier = this.normalizeInstanceIdentifier(\n        instanceIdentifier\n      );\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { instanceIdentifier = DEFAULT_ENTRY_NAME, options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(\n        instanceIdentifier\n      );\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    this.invokeOnInitCallbacks(instance, normalizedIdentifier);\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>): () => void {\n    this.onInitCallbacks.add(callback);\n\n    return () => {\n      this.onInitCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    for (const callback of this.onInitCallbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(identifier: string): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return (this.providers.get(name) as unknown) as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, (provider as unknown) as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages-exp/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages-exp/analytics-exp/package.json';\nimport { name as authName } from '../../../packages-exp/auth-exp/package.json';\nimport { name as authCompatName } from '../../../packages-exp/auth-compat-exp/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database/compat/package.json';\nimport { name as functionsName } from '../../../packages-exp/functions-exp/package.json';\nimport { name as functionsCompatName } from '../../../packages-exp/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages-exp/installations-exp/package.json';\nimport { name as installationsCompatName } from '../../../packages-exp/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages-exp/messaging-exp/package.json';\nimport { name as messagingCompatName } from '../../../packages-exp/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages-exp/performance-exp/package.json';\nimport { name as performanceCompatName } from '../../../packages-exp/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages-exp/remote-config-exp/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages-exp/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage/compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore/compat/package.json';\nimport { name as packageName } from '../../../packages-exp/firebase-exp/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]: \"Firebase App named '{$appName}' already exists\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppConfig\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppConfig>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app-exp', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppConfig\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase-exp/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppConfig\n): FirebaseApp;\nexport function initializeApp(\n  options: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppConfig> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  if (_apps.has(name)) {\n    throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a FirebaseApp instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseOptions } from './public-types';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstantiationMode,\n  Name\n} from '@firebase/component';\nimport {\n  deleteApp,\n  _addComponent,\n  _addOrOverwriteComponent,\n  _DEFAULT_ENTRY_NAME,\n  _FirebaseAppInternal as _FirebaseAppExp\n} from '@firebase/app-exp';\nimport { _FirebaseService, _FirebaseNamespace } from './types';\nimport { Compat } from '@firebase/util';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface _FirebaseApp {\n  /**\n   * The (read-only) name (identifier) for this App. '[DEFAULT]' is the default\n   * App.\n   */\n  name: string;\n\n  /**\n   * The (read-only) configuration options from the app initialization.\n   */\n  options: FirebaseOptions;\n\n  /**\n   * The settable config flag for GDPR opt-in/opt-out\n   */\n  automaticDataCollectionEnabled: boolean;\n\n  /**\n   * Make the given App unusable and free resources.\n   */\n  delete(): Promise<void>;\n}\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n */\nexport class FirebaseAppImpl implements Compat<_FirebaseAppExp>, _FirebaseApp {\n  private container: ComponentContainer;\n\n  constructor(\n    readonly _delegate: _FirebaseAppExp,\n    private readonly firebase: _FirebaseNamespace\n  ) {\n    // add itself to container\n    _addComponent(\n      _delegate,\n      new Component('app-compat', () => this, ComponentType.PUBLIC)\n    );\n\n    this.container = _delegate.container;\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    return this._delegate.automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this._delegate.automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    return this._delegate.name;\n  }\n\n  get options(): FirebaseOptions {\n    return this._delegate.options;\n  }\n\n  delete(): Promise<void> {\n    return new Promise<void>(resolve => {\n      this._delegate.checkDestroyed();\n      resolve();\n    }).then(() => {\n      this.firebase.INTERNAL.removeApp(this.name);\n      return deleteApp(this._delegate);\n    });\n  }\n\n  /**\n   * Return a service instance associated with this app (creating it\n   * on demand), identified by the passed instanceIdentifier.\n   *\n   * NOTE: Currently storage and functions are the only ones that are leveraging this\n   * functionality. They invoke it by calling:\n   *\n   * ```javascript\n   * firebase.app().storage('STORAGE BUCKET ID')\n   * ```\n   *\n   * The service name is passed to this already\n   * @internal\n   */\n  _getService(\n    name: string,\n    instanceIdentifier: string = _DEFAULT_ENTRY_NAME\n  ): _FirebaseService {\n    this._delegate.checkDestroyed();\n\n    // Initialize instance if InstatiationMode is `EXPLICIT`.\n    const provider = this._delegate.container.getProvider(name as Name);\n    if (\n      !provider.isInitialized() &&\n      provider.getComponent()?.instantiationMode === InstantiationMode.EXPLICIT\n    ) {\n      provider.initialize();\n    }\n\n    // getImmediate will always succeed because _getService is only called for registered components.\n    return (provider.getImmediate({\n      identifier: instanceIdentifier\n    }) as unknown) as _FirebaseService;\n  }\n\n  /**\n   * Remove a service instance from the cache, so we will create a new instance for this service\n   * when people try to get it again.\n   *\n   * NOTE: currently only firestore uses this functionality to support firestore shutdown.\n   *\n   * @param name The service name\n   * @param instanceIdentifier instance identifier in case multiple instances are allowed\n   * @internal\n   */\n  _removeServiceInstance(\n    name: string,\n    instanceIdentifier: string = _DEFAULT_ENTRY_NAME\n  ): void {\n    this._delegate.container\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .getProvider(name as any)\n      .clearInstance(instanceIdentifier);\n  }\n\n  /**\n   * @param component the component being added to this app's container\n   * @internal\n   */\n  _addComponent(component: Component): void {\n    _addComponent(this._delegate, component);\n  }\n\n  _addOrOverwriteComponent(component: Component): void {\n    _addOrOverwriteComponent(this._delegate, component);\n  }\n\n  toJSON(): object {\n    return {\n      name: this.name,\n      automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\n      options: this.options\n    };\n  }\n}\n\n// TODO: investigate why the following needs to be commented out\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n//   FirebaseAppImpl.prototype.delete ||\n//   console.log('dc');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.'\n};\n\ntype ErrorParams = { [key in AppError]: { appName: string } };\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app-compat',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from './public-types';\nimport {\n  _FirebaseNamespace,\n  _FirebaseService,\n  FirebaseServiceNamespace\n} from './types';\nimport * as modularAPIs from '@firebase/app-exp';\nimport { _FirebaseAppInternal as _FirebaseAppExp } from '@firebase/app-exp';\nimport { Component, ComponentType, Name } from '@firebase/component';\n\nimport { deepExtend, contains } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { FirebaseAppLiteImpl } from './lite/firebaseAppLite';\n\n/**\n * Because auth can't share code with other components, we attach the utility functions\n * in an internal namespace to share code.\n * This function return a firebase namespace object without\n * any utility functions, so it can be shared between the regular firebaseNamespace and\n * the lite version.\n */\nexport function createFirebaseNamespaceCore(\n  firebaseAppImpl: typeof FirebaseAppImpl | typeof FirebaseAppLiteImpl\n): _FirebaseNamespace {\n  const apps: { [name: string]: FirebaseApp } = {};\n  // // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // const components = new Map<string, Component<any>>();\n\n  // A namespace is a plain JavaScript Object.\n  const namespace: _FirebaseNamespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp: initializeAppCompat,\n    // @ts-ignore\n    app,\n    registerVersion: modularAPIs.registerVersion,\n    setLogLevel: modularAPIs.setLogLevel,\n    onLog: modularAPIs.onLog,\n    // @ts-ignore\n    apps: null,\n    SDK_VERSION: modularAPIs.SDK_VERSION,\n    INTERNAL: {\n      registerComponent: registerComponentCompat,\n      removeApp,\n      useAsService,\n      modularAPIs\n    }\n  };\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (namespace as any)['default'] = namespace;\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    delete apps[name];\n  }\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || modularAPIs._DEFAULT_ENTRY_NAME;\n    if (!contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n    }\n    return apps[name];\n  }\n\n  // @ts-ignore\n  app['App'] = firebaseAppImpl;\n\n  /**\n   * Create a new App instance (name must be unique).\n   */\n  function initializeAppCompat(\n    options: FirebaseOptions,\n    rawConfig = {}\n  ): FirebaseApp {\n    const app = modularAPIs.initializeApp(\n      options,\n      rawConfig\n    ) as _FirebaseAppExp;\n    const appCompat = new firebaseAppImpl(app, namespace);\n    apps[app.name] = appCompat;\n    return appCompat;\n  }\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n  }\n\n  function registerComponentCompat<T extends Name>(\n    component: Component<T>\n  ): FirebaseServiceNamespace<_FirebaseService> | null {\n    const componentName = component.name;\n    const componentNameWithoutCompat = componentName.replace('-compat', '');\n    if (\n      modularAPIs._registerComponent(component) &&\n      component.type === ComponentType.PUBLIC\n    ) {\n      // create service namespace for public components\n      // The Service namespace is an accessor function ...\n      const serviceNamespace = (\n        appArg: FirebaseApp = app()\n      ): _FirebaseService => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (typeof (appArg as any)[componentNameWithoutCompat] !== 'function') {\n          // Invalid argument.\n          // This happens in the following case: firebase.storage('gs:/')\n          throw ERROR_FACTORY.create(AppError.INVALID_APP_ARGUMENT, {\n            appName: componentName\n          });\n        }\n\n        // Forward service instance lookup to the FirebaseApp.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return (appArg as any)[componentNameWithoutCompat]();\n      };\n\n      // ... and a container for service-level properties.\n      if (component.serviceProps !== undefined) {\n        deepExtend(serviceNamespace, component.serviceProps);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (namespace as any)[componentNameWithoutCompat] = serviceNamespace;\n\n      // Patch the FirebaseAppImpl prototype\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (firebaseAppImpl.prototype as any)[componentNameWithoutCompat] =\n        // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n        // option added to the no-explicit-any rule when ESlint releases it.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        function (...args: any) {\n          const serviceFxn = this._getService.bind(this, componentName);\n          return serviceFxn.apply(\n            this,\n            component.multipleInstances ? args : []\n          );\n        };\n    }\n\n    return component.type === ComponentType.PUBLIC\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (namespace as any)[componentNameWithoutCompat]\n      : null;\n  }\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    const useService = name;\n\n    return useService;\n  }\n\n  return namespace;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { createSubscribe, deepExtend, ErrorFactory } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { createFirebaseNamespaceCore } from './firebaseNamespaceCore';\n\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nexport function createFirebaseNamespace(): FirebaseNamespace {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\n  namespace.INTERNAL = {\n    ...namespace.INTERNAL,\n    createFirebaseNamespace,\n    extendNamespace,\n    createSubscribe,\n    ErrorFactory,\n    deepExtend\n  };\n\n  /**\n   * Patch the top-level firebase namespace with additional properties.\n   *\n   * firebase.INTERNAL.extendNamespace()\n   */\n  function extendNamespace(props: { [prop: string]: unknown }): void {\n    deepExtend(namespace, props);\n  }\n\n  return namespace;\n}\n\nexport const firebase = createFirebaseNamespace();\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app-compat');\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { isBrowser } from '@firebase/util';\nimport { firebase as firebaseNamespace } from './firebaseNamespace';\nimport { logger } from './logger';\nimport { registerCoreComponents } from './registerCoreComponents';\n\n// Firebase Lite detection\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nif (isBrowser() && (self as any).firebase !== undefined) {\n  logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\n\n  // eslint-disable-next-line\n  const sdkVersion = ((self as any).firebase as FirebaseNamespace).SDK_VERSION;\n  if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\n    logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\n  }\n}\n\nexport const firebase = firebaseNamespace;\n\nregisterCoreComponents();\n\n// eslint-disable-next-line import/no-default-export\nexport default firebase;\n\nexport { _FirebaseNamespace, _FirebaseService } from './types';\nexport { FirebaseApp, FirebaseNamespace } from './public-types';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerVersion } from '@firebase/app-exp';\n\nimport { name, version } from '../package.json';\n\nexport function registerCoreComponents(variant?: string): void {\n  // Register `app` package.\n  registerVersion(name, version, variant);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app-compat';\nimport { name, version } from '../../package.json';\n\nfirebase.registerVersion(name, version, 'app-compat');\n\nexport default firebase;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { AuthErrorMap, User } from '../model/public_types';\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { AppName } from '../model/auth';\nimport { AuthCredential } from './credentials';\n\n/**\n * Enumeration of Firebase Auth error codes.\n *\n * @public\n */\nexport const enum AuthErrorCode {\n  ADMIN_ONLY_OPERATION = 'admin-restricted-operation',\n  ARGUMENT_ERROR = 'argument-error',\n  APP_NOT_AUTHORIZED = 'app-not-authorized',\n  APP_NOT_INSTALLED = 'app-not-installed',\n  CAPTCHA_CHECK_FAILED = 'captcha-check-failed',\n  CODE_EXPIRED = 'code-expired',\n  CORDOVA_NOT_READY = 'cordova-not-ready',\n  CORS_UNSUPPORTED = 'cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE = 'credential-already-in-use',\n  CREDENTIAL_MISMATCH = 'custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH = 'dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'email-change-needs-verification',\n  EMAIL_EXISTS = 'email-already-in-use',\n  EMULATOR_CONFIG_FAILED = 'emulator-config-failed',\n  EXPIRED_OOB_CODE = 'expired-action-code',\n  EXPIRED_POPUP_REQUEST = 'cancelled-popup-request',\n  INTERNAL_ERROR = 'internal-error',\n  INVALID_API_KEY = 'invalid-api-key',\n  INVALID_APP_CREDENTIAL = 'invalid-app-credential',\n  INVALID_APP_ID = 'invalid-app-id',\n  INVALID_AUTH = 'invalid-user-token',\n  INVALID_AUTH_EVENT = 'invalid-auth-event',\n  INVALID_CERT_HASH = 'invalid-cert-hash',\n  INVALID_CODE = 'invalid-verification-code',\n  INVALID_CONTINUE_URI = 'invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION = 'invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN = 'invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'invalid-dynamic-link-domain',\n  INVALID_EMAIL = 'invalid-email',\n  INVALID_EMULATOR_SCHEME = 'invalid-emulator-scheme',\n  INVALID_IDP_RESPONSE = 'invalid-credential',\n  INVALID_MESSAGE_PAYLOAD = 'invalid-message-payload',\n  INVALID_MFA_SESSION = 'invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID = 'invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER = 'invalid-oauth-provider',\n  INVALID_OOB_CODE = 'invalid-action-code',\n  INVALID_ORIGIN = 'unauthorized-domain',\n  INVALID_PASSWORD = 'wrong-password',\n  INVALID_PERSISTENCE = 'invalid-persistence-type',\n  INVALID_PHONE_NUMBER = 'invalid-phone-number',\n  INVALID_PROVIDER_ID = 'invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL = 'invalid-recipient-email',\n  INVALID_SENDER = 'invalid-sender',\n  INVALID_SESSION_INFO = 'invalid-verification-id',\n  INVALID_TENANT_ID = 'invalid-tenant-id',\n  MFA_INFO_NOT_FOUND = 'multi-factor-info-not-found',\n  MFA_REQUIRED = 'multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME = 'missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL = 'missing-app-credential',\n  MISSING_AUTH_DOMAIN = 'auth-domain-config-required',\n  MISSING_CODE = 'missing-verification-code',\n  MISSING_CONTINUE_URI = 'missing-continue-uri',\n  MISSING_IFRAME_START = 'missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID = 'missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE = 'missing-or-invalid-nonce',\n  MISSING_MFA_INFO = 'missing-multi-factor-info',\n  MISSING_MFA_SESSION = 'missing-multi-factor-session',\n  MISSING_PHONE_NUMBER = 'missing-phone-number',\n  MISSING_SESSION_INFO = 'missing-verification-id',\n  MODULE_DESTROYED = 'app-deleted',\n  NEED_CONFIRMATION = 'account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED = 'network-request-failed',\n  NULL_USER = 'null-user',\n  NO_AUTH_EVENT = 'no-auth-event',\n  NO_SUCH_PROVIDER = 'no-such-provider',\n  OPERATION_NOT_ALLOWED = 'operation-not-allowed',\n  OPERATION_NOT_SUPPORTED = 'operation-not-supported-in-this-environment',\n  POPUP_BLOCKED = 'popup-blocked',\n  POPUP_CLOSED_BY_USER = 'popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED = 'provider-already-linked',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER = 'redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING = 'redirect-operation-pending',\n  REJECTED_CREDENTIAL = 'rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED = 'second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH = 'tenant-id-mismatch',\n  TIMEOUT = 'timeout',\n  TOKEN_EXPIRED = 'user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'too-many-requests',\n  UNAUTHORIZED_DOMAIN = 'unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR = 'unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE = 'unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION = 'unsupported-tenant-operation',\n  UNVERIFIED_EMAIL = 'unverified-email',\n  USER_CANCELLED = 'user-cancelled',\n  USER_DELETED = 'user-not-found',\n  USER_DISABLED = 'user-disabled',\n  USER_MISMATCH = 'user-mismatch',\n  USER_SIGNED_OUT = 'user-signed-out',\n  WEAK_PASSWORD = 'weak-password',\n  WEB_STORAGE_UNSUPPORTED = 'web-storage-unsupported',\n  ALREADY_INITIALIZED = 'already-initialized'\n}\n\nfunction _debugErrorMap(): ErrorMap<AuthErrorCode> {\n  return {\n    [AuthErrorCode.ADMIN_ONLY_OPERATION]:\n      'This operation is restricted to administrators only.',\n    [AuthErrorCode.ARGUMENT_ERROR]: '',\n    [AuthErrorCode.APP_NOT_AUTHORIZED]:\n      \"This app, identified by the domain where it's hosted, is not \" +\n      'authorized to use Firebase Authentication with the provided API key. ' +\n      'Review your key configuration in the Google API console.',\n    [AuthErrorCode.APP_NOT_INSTALLED]:\n      'The requested mobile application corresponding to the identifier (' +\n      'Android package name or iOS bundle ID) provided is not installed on ' +\n      'this device.',\n    [AuthErrorCode.CAPTCHA_CHECK_FAILED]:\n      'The reCAPTCHA response token provided is either invalid, expired, ' +\n      'already used or the domain associated with it does not match the list ' +\n      'of whitelisted domains.',\n    [AuthErrorCode.CODE_EXPIRED]:\n      'The SMS code has expired. Please re-send the verification code to try ' +\n      'again.',\n    [AuthErrorCode.CORDOVA_NOT_READY]: 'Cordova framework is not ready.',\n    [AuthErrorCode.CORS_UNSUPPORTED]: 'This browser is not supported.',\n    [AuthErrorCode.CREDENTIAL_ALREADY_IN_USE]:\n      'This credential is already associated with a different user account.',\n    [AuthErrorCode.CREDENTIAL_MISMATCH]:\n      'The custom token corresponds to a different audience.',\n    [AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n      'This operation is sensitive and requires recent authentication. Log in ' +\n      'again before retrying this request.',\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.',\n    [AuthErrorCode.DYNAMIC_LINK_NOT_ACTIVATED]:\n      'Please activate Dynamic Links in the Firebase Console and agree to the terms and ' +\n      'conditions.',\n    [AuthErrorCode.EMAIL_CHANGE_NEEDS_VERIFICATION]:\n      'Multi-factor users must always have a verified email.',\n    [AuthErrorCode.EMAIL_EXISTS]:\n      'The email address is already in use by another account.',\n    [AuthErrorCode.EMULATOR_CONFIG_FAILED]:\n      'Auth instance has already been used to make a network call. Auth can ' +\n      'no longer be configured to use the emulator. Try calling ' +\n      '\"useAuthEmulator()\" sooner.',\n    [AuthErrorCode.EXPIRED_OOB_CODE]: 'The action code has expired.',\n    [AuthErrorCode.EXPIRED_POPUP_REQUEST]:\n      'This operation has been cancelled due to another conflicting popup being opened.',\n    [AuthErrorCode.INTERNAL_ERROR]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_APP_CREDENTIAL]:\n      'The phone verification request contains an invalid application verifier.' +\n      ' The reCAPTCHA token response is either invalid or expired.',\n    [AuthErrorCode.INVALID_APP_ID]:\n      'The mobile app identifier is not registed for the current project.',\n    [AuthErrorCode.INVALID_AUTH]:\n      \"This user's credential isn't valid for this project. This can happen \" +\n      \"if the user's token has been tampered with, or if the user isn't for \" +\n      'the project associated with this API key.',\n    [AuthErrorCode.INVALID_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_CODE]:\n      'The SMS verification code used to create the phone auth credential is ' +\n      'invalid. Please resend the verification code sms and be sure use the ' +\n      'verification code provided by the user.',\n    [AuthErrorCode.INVALID_CONTINUE_URI]:\n      'The continue URL provided in the request is invalid.',\n    [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]:\n      'The following Cordova plugins must be installed to enable OAuth sign-in: ' +\n      'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' +\n      'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' +\n      'cordova-plugin-customurlscheme.',\n    [AuthErrorCode.INVALID_CUSTOM_TOKEN]:\n      'The custom token format is incorrect. Please check the documentation.',\n    [AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN]:\n      'The provided dynamic link domain is not configured or authorized for the current project.',\n    [AuthErrorCode.INVALID_EMAIL]: 'The email address is badly formatted.',\n    [AuthErrorCode.INVALID_EMULATOR_SCHEME]:\n      'Emulator URL must start with a valid scheme (http:// or https://).',\n    [AuthErrorCode.INVALID_API_KEY]:\n      'Your API key is invalid, please check you have copied it correctly.',\n    [AuthErrorCode.INVALID_CERT_HASH]:\n      'The SHA-1 certificate hash provided is invalid.',\n    [AuthErrorCode.INVALID_IDP_RESPONSE]:\n      'The supplied auth credential is malformed or has expired.',\n    [AuthErrorCode.INVALID_MESSAGE_PAYLOAD]:\n      'The email template corresponding to this action contains invalid characters in its message. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_MFA_SESSION]:\n      'The request does not contain a valid proof of first factor successful sign-in.',\n    [AuthErrorCode.INVALID_OAUTH_PROVIDER]:\n      'EmailAuthProvider is not supported for this operation. This operation ' +\n      'only supports OAuth providers.',\n    [AuthErrorCode.INVALID_OAUTH_CLIENT_ID]:\n      'The OAuth client ID provided is either invalid or does not match the ' +\n      'specified API key.',\n    [AuthErrorCode.INVALID_ORIGIN]:\n      'This domain is not authorized for OAuth operations for your Firebase ' +\n      'project. Edit the list of authorized domains from the Firebase console.',\n    [AuthErrorCode.INVALID_OOB_CODE]:\n      'The action code is invalid. This can happen if the code is malformed, ' +\n      'expired, or has already been used.',\n    [AuthErrorCode.INVALID_PASSWORD]:\n      'The password is invalid or the user does not have a password.',\n    [AuthErrorCode.INVALID_PERSISTENCE]:\n      'The specified persistence type is invalid. It can only be local, session or none.',\n    [AuthErrorCode.INVALID_PHONE_NUMBER]:\n      'The format of the phone number provided is incorrect. Please enter the ' +\n      'phone number in a format that can be parsed into E.164 format. E.164 ' +\n      'phone numbers are written in the format [+][country code][subscriber ' +\n      'number including area code].',\n    [AuthErrorCode.INVALID_PROVIDER_ID]:\n      'The specified provider ID is invalid.',\n    [AuthErrorCode.INVALID_RECIPIENT_EMAIL]:\n      'The email corresponding to this action failed to send as the provided ' +\n      'recipient email address is invalid.',\n    [AuthErrorCode.INVALID_SENDER]:\n      'The email template corresponding to this action contains an invalid sender email or name. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_SESSION_INFO]:\n      'The verification ID used to create the phone auth credential is invalid.',\n    [AuthErrorCode.INVALID_TENANT_ID]:\n      \"The Auth instance's tenant ID is invalid.\",\n    [AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME]:\n      'An Android Package Name must be provided if the Android App is required to be installed.',\n    [AuthErrorCode.MISSING_AUTH_DOMAIN]:\n      'Be sure to include authDomain when calling firebase.initializeApp(), ' +\n      'by following the instructions in the Firebase console.',\n    [AuthErrorCode.MISSING_APP_CREDENTIAL]:\n      'The phone verification request is missing an application verifier ' +\n      'assertion. A reCAPTCHA response token needs to be provided.',\n    [AuthErrorCode.MISSING_CODE]:\n      'The phone auth credential was created with an empty SMS verification code.',\n    [AuthErrorCode.MISSING_CONTINUE_URI]:\n      'A continue URL must be provided in the request.',\n    [AuthErrorCode.MISSING_IFRAME_START]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.MISSING_IOS_BUNDLE_ID]:\n      'An iOS Bundle ID must be provided if an App Store ID is provided.',\n    [AuthErrorCode.MISSING_OR_INVALID_NONCE]:\n      'The request does not contain a valid nonce. This can occur if the ' +\n      'SHA-256 hash of the provided raw nonce does not match the hashed nonce ' +\n      'in the ID token payload.',\n    [AuthErrorCode.MISSING_MFA_INFO]:\n      'No second factor identifier is provided.',\n    [AuthErrorCode.MISSING_MFA_SESSION]:\n      'The request is missing proof of first factor successful sign-in.',\n    [AuthErrorCode.MISSING_PHONE_NUMBER]:\n      'To send verification codes, provide a phone number for the recipient.',\n    [AuthErrorCode.MISSING_SESSION_INFO]:\n      'The phone auth credential was created with an empty verification ID.',\n    [AuthErrorCode.MODULE_DESTROYED]:\n      'This instance of FirebaseApp has been deleted.',\n    [AuthErrorCode.MFA_INFO_NOT_FOUND]:\n      'The user does not have a second factor matching the identifier provided.',\n    [AuthErrorCode.MFA_REQUIRED]:\n      'Proof of ownership of a second factor is required to complete sign-in.',\n    [AuthErrorCode.NEED_CONFIRMATION]:\n      'An account already exists with the same email address but different ' +\n      'sign-in credentials. Sign in using a provider associated with this ' +\n      'email address.',\n    [AuthErrorCode.NETWORK_REQUEST_FAILED]:\n      'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.',\n    [AuthErrorCode.NO_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.NO_SUCH_PROVIDER]:\n      'User was not linked to an account with the given provider.',\n    [AuthErrorCode.NULL_USER]:\n      'A null user object was provided as the argument for an operation which ' +\n      'requires a non-null user object.',\n    [AuthErrorCode.OPERATION_NOT_ALLOWED]:\n      'The given sign-in provider is disabled for this Firebase project. ' +\n      'Enable it in the Firebase console, under the sign-in method tab of the ' +\n      'Auth section.',\n    [AuthErrorCode.OPERATION_NOT_SUPPORTED]:\n      'This operation is not supported in the environment this application is ' +\n      'running on. \"location.protocol\" must be http, https or chrome-extension' +\n      ' and web storage must be enabled.',\n    [AuthErrorCode.POPUP_BLOCKED]:\n      'Unable to establish a connection with the popup. It may have been blocked by the browser.',\n    [AuthErrorCode.POPUP_CLOSED_BY_USER]:\n      'The popup has been closed by the user before finalizing the operation.',\n    [AuthErrorCode.PROVIDER_ALREADY_LINKED]:\n      'User can only be linked to one identity for the given provider.',\n    [AuthErrorCode.QUOTA_EXCEEDED]:\n      \"The project's quota for this operation has been exceeded.\",\n    [AuthErrorCode.REDIRECT_CANCELLED_BY_USER]:\n      'The redirect operation has been cancelled by the user before finalizing.',\n    [AuthErrorCode.REDIRECT_OPERATION_PENDING]:\n      'A redirect sign-in operation is already pending.',\n    [AuthErrorCode.REJECTED_CREDENTIAL]:\n      'The request contains malformed or mismatching credentials.',\n    [AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED]:\n      'The second factor is already enrolled on this account.',\n    [AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED]:\n      'The maximum allowed number of second factors on a user has been exceeded.',\n    [AuthErrorCode.TENANT_ID_MISMATCH]:\n      \"The provided tenant ID does not match the Auth instance's tenant ID\",\n    [AuthErrorCode.TIMEOUT]: 'The operation has timed out.',\n    [AuthErrorCode.TOKEN_EXPIRED]:\n      \"The user's credential is no longer valid. The user must sign in again.\",\n    [AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER]:\n      'We have blocked all requests from this device due to unusual activity. ' +\n      'Try again later.',\n    [AuthErrorCode.UNAUTHORIZED_DOMAIN]:\n      'The domain of the continue URL is not whitelisted.  Please whitelist ' +\n      'the domain in the Firebase console.',\n    [AuthErrorCode.UNSUPPORTED_FIRST_FACTOR]:\n      'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.',\n    [AuthErrorCode.UNSUPPORTED_PERSISTENCE]:\n      'The current environment does not support the specified persistence type.',\n    [AuthErrorCode.UNSUPPORTED_TENANT_OPERATION]:\n      'This operation is not supported in a multi-tenant context.',\n    [AuthErrorCode.UNVERIFIED_EMAIL]:\n      'The operation requires a verified email.',\n    [AuthErrorCode.USER_CANCELLED]:\n      'The user did not grant your application the permissions it requested.',\n    [AuthErrorCode.USER_DELETED]:\n      'There is no user record corresponding to this identifier. The user may ' +\n      'have been deleted.',\n    [AuthErrorCode.USER_DISABLED]:\n      'The user account has been disabled by an administrator.',\n    [AuthErrorCode.USER_MISMATCH]:\n      'The supplied credentials do not correspond to the previously signed in user.',\n    [AuthErrorCode.USER_SIGNED_OUT]: '',\n    [AuthErrorCode.WEAK_PASSWORD]:\n      'The password must be 6 characters long or more.',\n    [AuthErrorCode.WEB_STORAGE_UNSUPPORTED]:\n      'This browser is not supported or 3rd party cookies and data may be disabled.',\n    [AuthErrorCode.ALREADY_INITIALIZED]:\n      'Auth can only be initialized once per app.'\n  };\n}\n\nexport interface ErrorMapRetriever extends AuthErrorMap {\n  (): ErrorMap<AuthErrorCode>;\n}\n\nfunction _prodErrorMap(): ErrorMap<AuthErrorCode> {\n  // We will include this one message in the prod error map since by the very\n  // nature of this error, developers will never be able to see the message\n  // using the debugErrorMap (which is installed during auth initialization).\n  return {\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.'\n  } as ErrorMap<AuthErrorCode>;\n}\n\n/**\n * A verbose error map with detailed descriptions for most error codes.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const debugErrorMap: AuthErrorMap = _debugErrorMap;\n\n/**\n * A minimal error map with all verbose error messages stripped.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const prodErrorMap: AuthErrorMap = _prodErrorMap;\n\nexport interface NamedErrorParams {\n  appName: AppName;\n  credential?: AuthCredential;\n  email?: string;\n  phoneNumber?: string;\n  tenantId?: string;\n  user?: User;\n  serverResponse?: object;\n}\n\ntype GenericAuthErrorParams = {\n  [key in Exclude<\n    AuthErrorCode,\n    | AuthErrorCode.ARGUMENT_ERROR\n    | AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    | AuthErrorCode.INTERNAL_ERROR\n    | AuthErrorCode.MFA_REQUIRED\n    | AuthErrorCode.NO_AUTH_EVENT\n  >]: {\n    appName: AppName;\n    email?: string;\n    phoneNumber?: string;\n  };\n};\n\nexport interface AuthErrorParams extends GenericAuthErrorParams {\n  [AuthErrorCode.ARGUMENT_ERROR]: { appName?: AppName };\n  [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]: { appName?: AppName };\n  [AuthErrorCode.INTERNAL_ERROR]: { appName?: AppName };\n  [AuthErrorCode.NO_AUTH_EVENT]: { appName?: AppName };\n  [AuthErrorCode.MFA_REQUIRED]: {\n    appName: AppName;\n    serverResponse: IdTokenMfaResponse;\n  };\n  [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]: {\n    appName: AppName;\n    missingPlugin?: string;\n  };\n}\n\nexport const _DEFAULT_AUTH_ERROR_FACTORY = new ErrorFactory<\n  AuthErrorCode,\n  AuthErrorParams\n>('auth', 'Firebase', _prodErrorMap());\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SDK_VERSION } from '@firebase/app-exp';\n\nexport { LogLevel };\n\nconst logClient = new Logger('@firebase/auth-exp');\n\n// Helper methods are needed because variables can't be exported as read/write\nexport function _getLogLevel(): LogLevel {\n  return logClient.logLevel;\n}\n\nexport function _setLogLevel(newLevel: LogLevel): void {\n  logClient.logLevel = newLevel;\n}\n\nexport function _logDebug(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.DEBUG) {\n    logClient.debug(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function _logError(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.ERROR) {\n    logClient.error(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  _DEFAULT_AUTH_ERROR_FACTORY,\n  AuthErrorCode,\n  AuthErrorParams\n} from '../errors';\nimport { _logError } from './log';\n\ntype AuthErrorListParams<K> = K extends keyof AuthErrorParams\n  ? [AuthErrorParams[K]]\n  : [];\ntype LessAppName<K extends AuthErrorCode> = Omit<AuthErrorParams[K], 'appName'>;\n\n/**\n * Unconditionally fails, throwing a developer facing INTERNAL_ERROR\n *\n * @example\n * ```javascript\n * fail(auth, AuthErrorCode.MFA_REQUIRED);  // Error: the MFA_REQUIRED error needs more params than appName\n * fail(auth, AuthErrorCode.MFA_REQUIRED, {serverResponse});  // Compiles\n * fail(AuthErrorCode.INTERNAL_ERROR);  // Compiles; internal error does not need appName\n * fail(AuthErrorCode.USER_DELETED);  // Error: USER_DELETED requires app name\n * fail(auth, AuthErrorCode.USER_DELETED);  // Compiles; USER_DELETED _only_ needs app name\n * ```\n *\n * @param appName App name for tagging the error\n * @throws FirebaseError\n */\nexport function _fail<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): never {\n  throw createErrorInternal(authOrCode, ...rest);\n}\n\nexport function _createError<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  return createErrorInternal(authOrCode, ...rest);\n}\n\nfunction createErrorInternal<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  if (typeof authOrCode !== 'string') {\n    const code = rest[0] as K;\n    const fullParams = [...rest.slice(1)] as AuthErrorListParams<K>;\n    if (fullParams[0]) {\n      fullParams[0].appName = authOrCode.name;\n    }\n\n    return (authOrCode as AuthInternal)._errorFactory.create(\n      code,\n      ...fullParams\n    );\n  }\n\n  return _DEFAULT_AUTH_ERROR_FACTORY.create(\n    authOrCode,\n    ...(rest as AuthErrorListParams<K>)\n  );\n}\n\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): asserts assertion {\n  if (!assertion) {\n    throw createErrorInternal(authOrCode, ...rest);\n  }\n}\n\n// We really do want to accept literally any function type here\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype TypeExpectation = Function | string | MapType;\n\ninterface MapType extends Record<string, TypeExpectation | Optional> {}\n\nclass Optional {\n  constructor(readonly type: TypeExpectation) {}\n}\n\nexport function opt(type: TypeExpectation): Optional {\n  return new Optional(type);\n}\n\n/**\n * Asserts the runtime types of arguments. The 'expected' field can be one of\n * a class, a string (representing a \"typeof\" call), or a record map of name\n * to type. Furthermore, the opt() function can be used to mark a field as\n * optional. For example:\n *\n * function foo(auth: Auth, profile: {displayName?: string}, update = false) {\n *   assertTypes(arguments, [AuthImpl, {displayName: opt('string')}, opt('boolean')]);\n * }\n *\n * opt() can be used for any type:\n * function foo(auth?: Auth) {\n *   assertTypes(arguments, [opt(AuthImpl)]);\n * }\n *\n * The string types can be or'd together, and you can use \"null\" as well (note\n * that typeof null === 'object'; this is an edge case). For example:\n *\n * function foo(profile: {displayName?: string | null}) {\n *   assertTypes(arguments, [{displayName: opt('string|null')}]);\n * }\n *\n * @param args\n * @param expected\n */\nexport function assertTypes(\n  args: Omit<IArguments, 'callee'>,\n  ...expected: Array<TypeExpectation | Optional>\n): void {\n  if (args.length > expected.length) {\n    _fail(AuthErrorCode.ARGUMENT_ERROR, {});\n  }\n\n  for (let i = 0; i < expected.length; i++) {\n    let expect = expected[i];\n    const arg = args[i];\n\n    if (expect instanceof Optional) {\n      // If the arg is undefined, then it matches \"optional\" and we can move to\n      // the next arg\n      if (typeof arg === 'undefined') {\n        continue;\n      }\n      expect = expect.type;\n    }\n\n    if (typeof expect === 'string') {\n      // Handle the edge case for null because typeof null === 'object'\n      if (expect.includes('null') && arg === null) {\n        continue;\n      }\n\n      const required = expect.split('|');\n      _assert(required.includes(typeof arg), AuthErrorCode.ARGUMENT_ERROR, {});\n    } else if (typeof expect === 'object') {\n      // Recursively check record arguments\n      const record = arg as Record<string, unknown>;\n      const map = expect as MapType;\n      const keys = Object.keys(expect);\n\n      assertTypes(\n        keys.map(k => record[k]),\n        ...keys.map(k => map[k])\n      );\n    } else {\n      _assert(arg instanceof expect, AuthErrorCode.ARGUMENT_ERROR, {});\n    }\n  }\n}\n\n/**\n * Unconditionally fails, throwing an internal error with the given message.\n *\n * @param failure type of failure encountered\n * @throws Error\n */\nexport function debugFail(failure: string): never {\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const message = `INTERNAL ASSERTION FAILED: ` + failure;\n  _logError(message);\n\n  // NOTE: We don't use FirebaseError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n  throw new Error(message);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * @param assertion\n * @param message\n */\nexport function debugAssert(\n  assertion: unknown,\n  message: string\n): asserts assertion {\n  if (!assertion) {\n    debugFail(message);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from './assert';\n\n/**\n * Our API has a lot of one-off constants that are used to do things.\n * Unfortunately we can't export these as classes instantiated directly since\n * the constructor may side effect and therefore can't be proven to be safely\n * culled. Instead, we export these classes themselves as a lowerCamelCase\n * constant, and instantiate them under the hood.\n */\nexport interface SingletonInstantiator<T> {\n  new (): T;\n}\n\nconst instanceCache: Map<unknown, unknown> = new Map();\n\nexport function _getInstance<T>(cls: unknown): T {\n  debugAssert(cls instanceof Function, 'Expected a class definition');\n  let instance = instanceCache.get(cls) as T | undefined;\n\n  if (instance) {\n    debugAssert(\n      instance instanceof cls,\n      'Instance stored in cache mismatched with class'\n    );\n    return instance;\n  }\n\n  instance = new (cls as SingletonInstantiator<T>)();\n  instanceCache.set(cls, instance);\n  return instance;\n}\n\nexport function _clearInstanceMap(): void {\n  instanceCache.clear();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _getCurrentUrl(): string {\n  return (typeof self !== 'undefined' && self.location?.href) || '';\n}\n\nexport function _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\nexport function _getCurrentScheme(): string | null {\n  return (typeof self !== 'undefined' && self.location?.protocol) || null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isMobileCordova, isReactNative } from '@firebase/util';\nimport { _isOnline } from './navigator';\nimport { debugAssert } from './assert';\n\nexport const enum DelayMin {\n  OFFLINE = 5000\n}\n\n/**\n * A structure to help pick between a range of long and short delay durations\n * depending on the current environment. In general, the long delay is used for\n * mobile environments whereas short delays are used for desktop environments.\n */\nexport class Delay {\n  // The default value for the offline delay timeout in ms.\n\n  private readonly isMobile: boolean;\n  constructor(\n    private readonly shortDelay: number,\n    private readonly longDelay: number\n  ) {\n    // Internal error when improperly initialized.\n    debugAssert(\n      longDelay > shortDelay,\n      'Short delay should be less than long delay!'\n    );\n    this.isMobile = isMobileCordova() || isReactNative();\n  }\n\n  get(): number {\n    if (!_isOnline()) {\n      // Pick the shorter timeout.\n      return Math.min(DelayMin.OFFLINE, this.shortDelay);\n    }\n    // If running in a mobile environment, return the long delay, otherwise\n    // return the short delay.\n    // This could be improved in the future to dynamically change based on other\n    // variables instead of just reading the current environment.\n    return this.isMobile ? this.longDelay : this.shortDelay;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isBrowserExtension } from '@firebase/util';\nimport { _isHttpOrHttps } from './location';\n\n/**\n * Determine whether the browser is working online\n */\nexport function _isOnline(): boolean {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator &&\n    'onLine' in navigator &&\n    typeof navigator.onLine === 'boolean' &&\n    // Apply only for traditional web apps and Chrome extensions.\n    // This is especially true for Cordova apps which have unreliable\n    // navigator.onLine behavior unless cordova-plugin-network-information is\n    // installed which overwrites the native navigator.onLine value and\n    // defines navigator.connection.\n    (_isHttpOrHttps() || isBrowserExtension() || 'connection' in navigator)\n  ) {\n    return navigator.onLine;\n  }\n  // If we can't determine the state, assume it is online.\n  return true;\n}\n\nexport function _getUserLanguage(): string | null {\n  if (typeof navigator === 'undefined') {\n    return null;\n  }\n  const navigatorLanguage: NavigatorLanguage = navigator;\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language ||\n    // Couldn't determine language.\n    null\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConfigInternal } from '../../model/auth';\nimport { debugAssert } from './assert';\n\nexport function _emulatorUrl(config: ConfigInternal, path?: string): string {\n  debugAssert(config.emulator, 'Emulator should always be set here');\n  const { url } = config.emulator;\n\n  if (!path) {\n    return url;\n  }\n\n  return `${url}${path.startsWith('/') ? path.slice(1) : path}`;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugFail } from './assert';\n\nexport class FetchProvider {\n  private static fetchImpl: typeof fetch | null;\n  private static headersImpl: typeof Headers | null;\n  private static responseImpl: typeof Response | null;\n\n  static initialize(\n    fetchImpl: typeof fetch,\n    headersImpl?: typeof Headers,\n    responseImpl?: typeof Response\n  ): void {\n    this.fetchImpl = fetchImpl;\n    if (headersImpl) {\n      this.headersImpl = headersImpl;\n    }\n    if (responseImpl) {\n      this.responseImpl = responseImpl;\n    }\n  }\n\n  static fetch(): typeof fetch {\n    if (this.fetchImpl) {\n      return this.fetchImpl;\n    }\n    if (typeof self !== 'undefined' && 'fetch' in self) {\n      return self.fetch;\n    }\n    debugFail(\n      'Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static headers(): typeof Headers {\n    if (this.headersImpl) {\n      return this.headersImpl;\n    }\n    if (typeof self !== 'undefined' && 'Headers' in self) {\n      return self.Headers;\n    }\n    debugFail(\n      'Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static response(): typeof Response {\n    if (this.responseImpl) {\n      return this.responseImpl;\n    }\n    if (typeof self !== 'undefined' && 'Response' in self) {\n      return self.Response;\n    }\n    debugFail(\n      'Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../core/errors';\n\n/**\n * Errors that can be returned by the backend\n */\nexport const enum ServerError {\n  ADMIN_ONLY_OPERATION = 'ADMIN_ONLY_OPERATION',\n  CAPTCHA_CHECK_FAILED = 'CAPTCHA_CHECK_FAILED',\n  CORS_UNSUPPORTED = 'CORS_UNSUPPORTED',\n  CREDENTIAL_MISMATCH = 'CREDENTIAL_MISMATCH',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'CREDENTIAL_TOO_OLD_LOGIN_AGAIN',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'DYNAMIC_LINK_NOT_ACTIVATED',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'EMAIL_CHANGE_NEEDS_VERIFICATION',\n  EMAIL_EXISTS = 'EMAIL_EXISTS',\n  EMAIL_NOT_FOUND = 'EMAIL_NOT_FOUND',\n  EXPIRED_OOB_CODE = 'EXPIRED_OOB_CODE',\n  FEDERATED_USER_ID_ALREADY_LINKED = 'FEDERATED_USER_ID_ALREADY_LINKED',\n  INVALID_APP_CREDENTIAL = 'INVALID_APP_CREDENTIAL',\n  INVALID_APP_ID = 'INVALID_APP_ID',\n  INVALID_CERT_HASH = 'INVALID_CERT_HASH',\n  INVALID_CODE = 'INVALID_CODE',\n  INVALID_CONTINUE_URI = 'INVALID_CONTINUE_URI',\n  INVALID_CUSTOM_TOKEN = 'INVALID_CUSTOM_TOKEN',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'INVALID_DYNAMIC_LINK_DOMAIN',\n  INVALID_EMAIL = 'INVALID_EMAIL',\n  INVALID_ID_TOKEN = 'INVALID_ID_TOKEN',\n  INVALID_IDP_RESPONSE = 'INVALID_IDP_RESPONSE',\n  INVALID_IDENTIFIER = 'INVALID_IDENTIFIER',\n  INVALID_MESSAGE_PAYLOAD = 'INVALID_MESSAGE_PAYLOAD',\n  INVALID_MFA_PENDING_CREDENTIAL = 'INVALID_MFA_PENDING_CREDENTIAL',\n  INVALID_OAUTH_CLIENT_ID = 'INVALID_OAUTH_CLIENT_ID',\n  INVALID_OOB_CODE = 'INVALID_OOB_CODE',\n  INVALID_PASSWORD = 'INVALID_PASSWORD',\n  INVALID_PENDING_TOKEN = 'INVALID_PENDING_TOKEN',\n  INVALID_PHONE_NUMBER = 'INVALID_PHONE_NUMBER',\n  INVALID_PROVIDER_ID = 'INVALID_PROVIDER_ID',\n  INVALID_RECIPIENT_EMAIL = 'INVALID_RECIPIENT_EMAIL',\n  INVALID_SENDER = 'INVALID_SENDER',\n  INVALID_SESSION_INFO = 'INVALID_SESSION_INFO',\n  INVALID_TEMPORARY_PROOF = 'INVALID_TEMPORARY_PROOF',\n  INVALID_TENANT_ID = 'INVALID_TENANT_ID',\n  MFA_ENROLLMENT_NOT_FOUND = 'MFA_ENROLLMENT_NOT_FOUND',\n  MISSING_ANDROID_PACKAGE_NAME = 'MISSING_ANDROID_PACKAGE_NAME',\n  MISSING_APP_CREDENTIAL = 'MISSING_APP_CREDENTIAL',\n  MISSING_CODE = 'MISSING_CODE',\n  MISSING_CONTINUE_URI = 'MISSING_CONTINUE_URI',\n  MISSING_CUSTOM_TOKEN = 'MISSING_CUSTOM_TOKEN',\n  MISSING_IOS_BUNDLE_ID = 'MISSING_IOS_BUNDLE_ID',\n  MISSING_MFA_ENROLLMENT_ID = 'MISSING_MFA_ENROLLMENT_ID',\n  MISSING_MFA_PENDING_CREDENTIAL = 'MISSING_MFA_PENDING_CREDENTIAL',\n  MISSING_OOB_CODE = 'MISSING_OOB_CODE',\n  MISSING_OR_INVALID_NONCE = 'MISSING_OR_INVALID_NONCE',\n  MISSING_PASSWORD = 'MISSING_PASSWORD',\n  MISSING_REQ_TYPE = 'MISSING_REQ_TYPE',\n  MISSING_PHONE_NUMBER = 'MISSING_PHONE_NUMBER',\n  MISSING_SESSION_INFO = 'MISSING_SESSION_INFO',\n  OPERATION_NOT_ALLOWED = 'OPERATION_NOT_ALLOWED',\n  PASSWORD_LOGIN_DISABLED = 'PASSWORD_LOGIN_DISABLED',\n  QUOTA_EXCEEDED = 'QUOTA_EXCEEDED',\n  RESET_PASSWORD_EXCEED_LIMIT = 'RESET_PASSWORD_EXCEED_LIMIT',\n  REJECTED_CREDENTIAL = 'REJECTED_CREDENTIAL',\n  SECOND_FACTOR_EXISTS = 'SECOND_FACTOR_EXISTS',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'SECOND_FACTOR_LIMIT_EXCEEDED',\n  SESSION_EXPIRED = 'SESSION_EXPIRED',\n  TENANT_ID_MISMATCH = 'TENANT_ID_MISMATCH',\n  TOKEN_EXPIRED = 'TOKEN_EXPIRED',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'TOO_MANY_ATTEMPTS_TRY_LATER',\n  UNSUPPORTED_FIRST_FACTOR = 'UNSUPPORTED_FIRST_FACTOR',\n  UNSUPPORTED_TENANT_OPERATION = 'UNSUPPORTED_TENANT_OPERATION',\n  UNAUTHORIZED_DOMAIN = 'UNAUTHORIZED_DOMAIN',\n  UNVERIFIED_EMAIL = 'UNVERIFIED_EMAIL',\n  USER_CANCELLED = 'USER_CANCELLED',\n  USER_DISABLED = 'USER_DISABLED',\n  USER_NOT_FOUND = 'USER_NOT_FOUND',\n  WEAK_PASSWORD = 'WEAK_PASSWORD'\n}\n\n/**\n * API Response in the event of an error\n */\nexport interface JsonError {\n  error: {\n    code: number;\n    message: string;\n    errors?: [\n      {\n        message: ServerError;\n        domain: string;\n        reason: string;\n      }\n    ];\n  };\n}\n\n/**\n * Type definition for a map from server errors to developer visible errors\n */\nexport declare type ServerErrorMap<ApiError extends string> = {\n  readonly [K in ApiError]: AuthErrorCode;\n};\n\n/**\n * Map from errors returned by the server to errors to developer visible errors\n */\nexport const SERVER_ERROR_MAP: Partial<ServerErrorMap<ServerError>> = {\n  // Custom token errors.\n  [ServerError.CREDENTIAL_MISMATCH]: AuthErrorCode.CREDENTIAL_MISMATCH,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CUSTOM_TOKEN]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Create Auth URI errors.\n  [ServerError.INVALID_IDENTIFIER]: AuthErrorCode.INVALID_EMAIL,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CONTINUE_URI]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Sign in with email and password errors (some apply to sign up too).\n  [ServerError.INVALID_PASSWORD]: AuthErrorCode.INVALID_PASSWORD,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_PASSWORD]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Sign up with email and password errors.\n  [ServerError.EMAIL_EXISTS]: AuthErrorCode.EMAIL_EXISTS,\n  [ServerError.PASSWORD_LOGIN_DISABLED]: AuthErrorCode.OPERATION_NOT_ALLOWED,\n\n  // Verify assertion for sign in with credential errors:\n  [ServerError.INVALID_IDP_RESPONSE]: AuthErrorCode.INVALID_IDP_RESPONSE,\n  [ServerError.INVALID_PENDING_TOKEN]: AuthErrorCode.INVALID_IDP_RESPONSE,\n  [ServerError.FEDERATED_USER_ID_ALREADY_LINKED]:\n    AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_REQ_TYPE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Send Password reset email errors:\n  [ServerError.EMAIL_NOT_FOUND]: AuthErrorCode.USER_DELETED,\n  [ServerError.RESET_PASSWORD_EXCEED_LIMIT]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n\n  [ServerError.EXPIRED_OOB_CODE]: AuthErrorCode.EXPIRED_OOB_CODE,\n  [ServerError.INVALID_OOB_CODE]: AuthErrorCode.INVALID_OOB_CODE,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_OOB_CODE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Operations that require ID token in request:\n  [ServerError.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n    AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN,\n  [ServerError.INVALID_ID_TOKEN]: AuthErrorCode.INVALID_AUTH,\n  [ServerError.TOKEN_EXPIRED]: AuthErrorCode.TOKEN_EXPIRED,\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.TOKEN_EXPIRED,\n\n  // Other errors.\n  [ServerError.TOO_MANY_ATTEMPTS_TRY_LATER]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n\n  // Phone Auth related errors.\n  [ServerError.INVALID_CODE]: AuthErrorCode.INVALID_CODE,\n  [ServerError.INVALID_SESSION_INFO]: AuthErrorCode.INVALID_SESSION_INFO,\n  [ServerError.INVALID_TEMPORARY_PROOF]: AuthErrorCode.INVALID_IDP_RESPONSE,\n  [ServerError.MISSING_SESSION_INFO]: AuthErrorCode.MISSING_SESSION_INFO,\n  [ServerError.SESSION_EXPIRED]: AuthErrorCode.CODE_EXPIRED,\n\n  // Other action code errors when additional settings passed.\n  // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\n  // This is OK as this error will be caught by client side validation.\n  [ServerError.MISSING_ANDROID_PACKAGE_NAME]:\n    AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME,\n  [ServerError.UNAUTHORIZED_DOMAIN]: AuthErrorCode.UNAUTHORIZED_DOMAIN,\n\n  // getProjectConfig errors when clientId is passed.\n  [ServerError.INVALID_OAUTH_CLIENT_ID]: AuthErrorCode.INVALID_OAUTH_CLIENT_ID,\n\n  // User actions (sign-up or deletion) disabled errors.\n  [ServerError.ADMIN_ONLY_OPERATION]: AuthErrorCode.ADMIN_ONLY_OPERATION,\n\n  // Multi factor related errors.\n  [ServerError.INVALID_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.INVALID_MFA_SESSION,\n  [ServerError.MFA_ENROLLMENT_NOT_FOUND]: AuthErrorCode.MFA_INFO_NOT_FOUND,\n  [ServerError.MISSING_MFA_ENROLLMENT_ID]: AuthErrorCode.MISSING_MFA_INFO,\n  [ServerError.MISSING_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.MISSING_MFA_SESSION,\n  [ServerError.SECOND_FACTOR_EXISTS]:\n    AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED,\n  [ServerError.SECOND_FACTOR_LIMIT_EXCEEDED]:\n    AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError, querystring } from '@firebase/util';\n\nimport { AuthErrorCode, NamedErrorParams } from '../core/errors';\nimport { _createError, _fail } from '../core/util/assert';\nimport { Delay } from '../core/util/delay';\nimport { _emulatorUrl } from '../core/util/emulator';\nimport { FetchProvider } from '../core/util/fetch_provider';\nimport { Auth } from '../model/public_types';\nimport { AuthInternal, ConfigInternal } from '../model/auth';\nimport { IdTokenResponse, TaggedWithTokenResponse } from '../model/id_token';\nimport { IdTokenMfaResponse } from './authentication/mfa';\nimport { SERVER_ERROR_MAP, ServerError, ServerErrorMap } from './errors';\n\nexport const enum HttpMethod {\n  POST = 'POST',\n  GET = 'GET'\n}\n\nexport const enum HttpHeader {\n  CONTENT_TYPE = 'Content-Type',\n  X_FIREBASE_LOCALE = 'X-Firebase-Locale',\n  X_CLIENT_VERSION = 'X-Client-Version'\n}\n\nexport const enum Endpoint {\n  CREATE_AUTH_URI = '/v1/accounts:createAuthUri',\n  DELETE_ACCOUNT = '/v1/accounts:delete',\n  RESET_PASSWORD = '/v1/accounts:resetPassword',\n  SIGN_UP = '/v1/accounts:signUp',\n  SIGN_IN_WITH_CUSTOM_TOKEN = '/v1/accounts:signInWithCustomToken',\n  SIGN_IN_WITH_EMAIL_LINK = '/v1/accounts:signInWithEmailLink',\n  SIGN_IN_WITH_IDP = '/v1/accounts:signInWithIdp',\n  SIGN_IN_WITH_PASSWORD = '/v1/accounts:signInWithPassword',\n  SIGN_IN_WITH_PHONE_NUMBER = '/v1/accounts:signInWithPhoneNumber',\n  SEND_VERIFICATION_CODE = '/v1/accounts:sendVerificationCode',\n  SEND_OOB_CODE = '/v1/accounts:sendOobCode',\n  SET_ACCOUNT_INFO = '/v1/accounts:update',\n  GET_ACCOUNT_INFO = '/v1/accounts:lookup',\n  GET_RECAPTCHA_PARAM = '/v1/recaptchaParams',\n  START_PHONE_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:start',\n  FINALIZE_PHONE_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:finalize',\n  START_PHONE_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:start',\n  FINALIZE_PHONE_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:finalize',\n  WITHDRAW_MFA = '/v2/accounts/mfaEnrollment:withdraw',\n  GET_PROJECT_CONFIG = '/v1/projects'\n}\n\nexport const DEFAULT_API_TIMEOUT_MS = new Delay(30_000, 60_000);\n\nexport function _addTidIfNecessary<T extends { tenantId?: string }>(\n  auth: Auth,\n  request: T\n): T {\n  if (auth.tenantId && !request.tenantId) {\n    return {\n      ...request,\n      tenantId: auth.tenantId\n    };\n  }\n  return request;\n}\n\nexport async function _performApiRequest<T, V>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  return _performFetchWithErrorHandling(auth, customErrorMap, () => {\n    let body = {};\n    let params = {};\n    if (request) {\n      if (method === HttpMethod.GET) {\n        params = request;\n      } else {\n        body = {\n          body: JSON.stringify(request)\n        };\n      }\n    }\n\n    const query = querystring({\n      key: auth.config.apiKey,\n      ...params\n    }).slice(1);\n\n    const headers = new (FetchProvider.headers())();\n    headers.set(HttpHeader.CONTENT_TYPE, 'application/json');\n    headers.set(\n      HttpHeader.X_CLIENT_VERSION,\n      (auth as AuthInternal)._getSdkClientVersion()\n    );\n\n    if (auth.languageCode) {\n      headers.set(HttpHeader.X_FIREBASE_LOCALE, auth.languageCode);\n    }\n\n    return FetchProvider.fetch()(\n      _getFinalTarget(auth, auth.config.apiHost, path, query),\n      {\n        method,\n        headers,\n        referrerPolicy: 'no-referrer',\n        ...body\n      }\n    );\n  });\n}\n\nexport async function _performFetchWithErrorHandling<V>(\n  auth: Auth,\n  customErrorMap: Partial<ServerErrorMap<ServerError>>,\n  fetchFn: () => Promise<Response>\n): Promise<V> {\n  (auth as AuthInternal)._canInitEmulator = false;\n  const errorMap = { ...SERVER_ERROR_MAP, ...customErrorMap };\n  try {\n    const networkTimeout = new NetworkTimeout<Response>(auth);\n    const response: Response = await Promise.race<Promise<Response>>([\n      fetchFn(),\n      networkTimeout.promise\n    ]);\n\n    // If we've reached this point, the fetch succeeded and the networkTimeout\n    // didn't throw; clear the network timeout delay so that Node won't hang\n    networkTimeout.clearNetworkTimeout();\n\n    const json = await response.json();\n    if ('needConfirmation' in json) {\n      throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, json);\n    }\n\n    if (response.ok && !('errorMessage' in json)) {\n      return json;\n    } else {\n      const errorMessage = response.ok ? json.errorMessage : json.error.message;\n      const serverErrorCode = errorMessage.split(' : ')[0] as ServerError;\n      if (serverErrorCode === ServerError.FEDERATED_USER_ID_ALREADY_LINKED) {\n        throw _makeTaggedError(\n          auth,\n          AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n          json\n        );\n      } else if (serverErrorCode === ServerError.EMAIL_EXISTS) {\n        throw _makeTaggedError(auth, AuthErrorCode.EMAIL_EXISTS, json);\n      }\n      const authError =\n        errorMap[serverErrorCode] ||\n        ((serverErrorCode\n          .toLowerCase()\n          .replace(/[_\\s]+/g, '-') as unknown) as AuthErrorCode);\n      _fail(auth, authError);\n    }\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      throw e;\n    }\n    _fail(auth, AuthErrorCode.NETWORK_REQUEST_FAILED);\n  }\n}\n\nexport async function _performSignInRequest<T, V extends IdTokenResponse>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  const serverResponse = (await _performApiRequest<T, V | IdTokenMfaResponse>(\n    auth,\n    method,\n    path,\n    request,\n    customErrorMap\n  )) as V;\n  if ('mfaPendingCredential' in serverResponse) {\n    _fail(auth, AuthErrorCode.MFA_REQUIRED, {\n      serverResponse\n    });\n  }\n\n  return serverResponse;\n}\n\nexport function _getFinalTarget(\n  auth: Auth,\n  host: string,\n  path: string,\n  query: string\n): string {\n  const base = `${host}${path}?${query}`;\n\n  if (!(auth as AuthInternal).config.emulator) {\n    return `${auth.config.apiScheme}://${base}`;\n  }\n\n  return _emulatorUrl(auth.config as ConfigInternal, base);\n}\n\nclass NetworkTimeout<T> {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timer: any | null = null;\n  readonly promise = new Promise<T>((_, reject) => {\n    this.timer = setTimeout(() => {\n      return reject(_createError(this.auth, AuthErrorCode.TIMEOUT));\n    }, DEFAULT_API_TIMEOUT_MS.get());\n  });\n\n  clearNetworkTimeout(): void {\n    clearTimeout(this.timer);\n  }\n\n  constructor(private readonly auth: Auth) {}\n}\n\ninterface PotentialResponse extends IdTokenResponse {\n  email?: string;\n  phoneNumber?: string;\n}\n\nexport function _makeTaggedError(\n  auth: Auth,\n  code: AuthErrorCode,\n  response: PotentialResponse\n): FirebaseError {\n  const errorParams: NamedErrorParams = {\n    appName: auth.name\n  };\n\n  if (response.email) {\n    errorParams.email = response.email;\n  }\n  if (response.phoneNumber) {\n    errorParams.phoneNumber = response.phoneNumber;\n  }\n\n  const error = _createError(auth, code, errorParams);\n\n  // We know customData is defined on error because errorParams is defined\n  (error.customData! as TaggedWithTokenResponse)._tokenResponse = response;\n  return error;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function utcTimestampToDateString(\n  utcTimestamp?: string | number\n): string | undefined {\n  if (!utcTimestamp) {\n    return undefined;\n  }\n  try {\n    // Convert to date object.\n    const date = new Date(Number(utcTimestamp));\n    // Test date is valid.\n    if (!isNaN(date.getTime())) {\n      // Convert to UTC date string.\n      return date.toUTCString();\n    }\n  } catch (e) {\n    // Do nothing. undefined will be returned.\n  }\n  return undefined;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult, ParsedToken, User } from '../../model/public_types';\nimport { base64Decode, getModularInstance } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { _logError } from '../util/log';\nimport { utcTimestampToDateString } from '../util/time';\nimport { AuthErrorCode } from '../errors';\n\n/**\n * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport function getIdToken(user: User, forceRefresh = false): Promise<string> {\n  return getModularInstance(user).getIdToken(forceRefresh);\n}\n\n/**\n * Returns a deserialized JSON Web Token (JWT) used to identitfy the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getIdTokenResult(\n  user: User,\n  forceRefresh = false\n): Promise<IdTokenResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const token = await userInternal.getIdToken(forceRefresh);\n  const claims = _parseToken(token);\n\n  _assert(\n    claims && claims.exp && claims.auth_time && claims.iat,\n    userInternal.auth,\n    AuthErrorCode.INTERNAL_ERROR\n  );\n  const firebase =\n    typeof claims.firebase === 'object' ? claims.firebase : undefined;\n\n  const signInProvider: string | undefined = firebase?.['sign_in_provider'];\n\n  return {\n    claims,\n    token,\n    authTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.auth_time)\n    )!,\n    issuedAtTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.iat)\n    )!,\n    expirationTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.exp)\n    )!,\n    signInProvider: signInProvider || null,\n    signInSecondFactor: firebase?.['sign_in_second_factor'] || null\n  };\n}\n\nfunction secondsStringToMilliseconds(seconds: string): number {\n  return Number(seconds) * 1000;\n}\n\nexport function _parseToken(token: string): ParsedToken | null {\n  const [algorithm, payload, signature] = token.split('.');\n  if (\n    algorithm === undefined ||\n    payload === undefined ||\n    signature === undefined\n  ) {\n    _logError('JWT malformed, contained fewer than 3 sections');\n    return null;\n  }\n\n  try {\n    const decoded = base64Decode(payload);\n    if (!decoded) {\n      _logError('Failed to decode base64 JWT payload');\n      return null;\n    }\n    return JSON.parse(decoded);\n  } catch (e) {\n    _logError('Caught error parsing JWT payload as JSON', e);\n    return null;\n  }\n}\n\n/**\n * Extract expiresIn TTL from a token by subtracting the expiration from the issuance.\n */\nexport function _tokenExpiresIn(token: string): number {\n  const parsedToken = _parseToken(token);\n  _assert(parsedToken, AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.exp !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.iat !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  return Number(parsedToken.exp) - Number(parsedToken.iat);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\nexport async function _logoutIfInvalidated<T>(\n  user: UserInternal,\n  promise: Promise<T>,\n  bypassAuthState = false\n): Promise<T> {\n  if (bypassAuthState) {\n    return promise;\n  }\n  try {\n    return await promise;\n  } catch (e) {\n    if (e instanceof FirebaseError && isUserInvalidated(e)) {\n      if (user.auth.currentUser === user) {\n        await user.auth.signOut();\n      }\n    }\n\n    throw e;\n  }\n}\n\nfunction isUserInvalidated({ code }: FirebaseError): boolean {\n  return (\n    code === `auth/${AuthErrorCode.USER_DISABLED}` ||\n    code === `auth/${AuthErrorCode.TOKEN_EXPIRED}`\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\n// Refresh the token five minutes before expiration\nexport const enum Duration {\n  OFFSET = 5 * 1000 * 60,\n  RETRY_BACKOFF_MIN = 30 * 1000,\n  RETRY_BACKOFF_MAX = 16 * 60 * 1000\n}\n\nexport class ProactiveRefresh {\n  private isRunning = false;\n\n  // Node timers and browser timers return fundamentally different types.\n  // We don't actually care what the value is but TS won't accept unknown and\n  // we can't cast properly in both environments.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timerId: any | null = null;\n  private errorBackoff = Duration.RETRY_BACKOFF_MIN;\n\n  constructor(private readonly user: UserInternal) {}\n\n  _start(): void {\n    if (this.isRunning) {\n      return;\n    }\n\n    this.isRunning = true;\n    this.schedule();\n  }\n\n  _stop(): void {\n    if (!this.isRunning) {\n      return;\n    }\n\n    this.isRunning = false;\n    if (this.timerId !== null) {\n      clearTimeout(this.timerId);\n    }\n  }\n\n  private getInterval(wasError: boolean): number {\n    if (wasError) {\n      const interval = this.errorBackoff;\n      this.errorBackoff = Math.min(\n        this.errorBackoff * 2,\n        Duration.RETRY_BACKOFF_MAX\n      );\n      return interval;\n    } else {\n      // Reset the error backoff\n      this.errorBackoff = Duration.RETRY_BACKOFF_MIN;\n      const expTime = this.user.stsTokenManager.expirationTime ?? 0;\n      const interval = expTime - Date.now() - Duration.OFFSET;\n\n      return Math.max(0, interval);\n    }\n  }\n\n  private schedule(wasError = false): void {\n    if (!this.isRunning) {\n      // Just in case...\n      return;\n    }\n\n    const interval = this.getInterval(wasError);\n    this.timerId = setTimeout(async () => {\n      await this.iteration();\n    }, interval);\n  }\n\n  private async iteration(): Promise<void> {\n    try {\n      await this.user.getIdToken(true);\n    } catch (e) {\n      // Only retry on network errors\n      if (e.code === `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`) {\n        this.schedule(/* wasError */ true);\n      }\n\n      return;\n    }\n    this.schedule();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserMetadata as UserMetadataType } from '../../model/public_types';\n\nimport { utcTimestampToDateString } from '../util/time';\n\nexport class UserMetadata implements UserMetadataType {\n  creationTime?: string;\n  lastSignInTime?: string;\n\n  constructor(\n    private createdAt?: string | number,\n    private lastLoginAt?: string | number\n  ) {\n    this._initializeTime();\n  }\n\n  private _initializeTime(): void {\n    this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);\n    this.creationTime = utcTimestampToDateString(this.createdAt);\n  }\n\n  _copy(metadata: UserMetadata): void {\n    this.createdAt = metadata.createdAt;\n    this.lastLoginAt = metadata.lastLoginAt;\n    this._initializeTime();\n  }\n\n  toJSON(): object {\n    return {\n      createdAt: this.createdAt,\n      lastLoginAt: this.lastLoginAt\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User, UserInfo } from '../../model/public_types';\n\nimport {\n  getAccountInfo,\n  ProviderUserInfo\n} from '../../api/account_management/account';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserMetadata } from './user_metadata';\nimport { getModularInstance } from '@firebase/util';\n\nexport async function _reloadWithoutSaving(user: UserInternal): Promise<void> {\n  const auth = user.auth;\n  const idToken = await user.getIdToken();\n  const response = await _logoutIfInvalidated(\n    user,\n    getAccountInfo(auth, { idToken })\n  );\n\n  _assert(response?.users.length, auth, AuthErrorCode.INTERNAL_ERROR);\n\n  const coreAccount = response.users[0];\n\n  user._notifyReloadListener(coreAccount);\n\n  const newProviderData = coreAccount.providerUserInfo?.length\n    ? extractProviderData(coreAccount.providerUserInfo)\n    : [];\n\n  const providerData = mergeProviderData(user.providerData, newProviderData);\n\n  // Preserves the non-nonymous status of the stored user, even if no more\n  // credentials (federated or email/password) are linked to the user. If\n  // the user was previously anonymous, then use provider data to update.\n  // On the other hand, if it was not anonymous before, it should never be\n  // considered anonymous now.\n  const oldIsAnonymous = user.isAnonymous;\n  const newIsAnonymous =\n    !(user.email && coreAccount.passwordHash) && !providerData?.length;\n  const isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\n\n  const updates: Partial<UserInternal> = {\n    uid: coreAccount.localId,\n    displayName: coreAccount.displayName || null,\n    photoURL: coreAccount.photoUrl || null,\n    email: coreAccount.email || null,\n    emailVerified: coreAccount.emailVerified || false,\n    phoneNumber: coreAccount.phoneNumber || null,\n    tenantId: coreAccount.tenantId || null,\n    providerData,\n    metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\n    isAnonymous\n  };\n\n  Object.assign(user, updates);\n}\n\n/**\n * Reloads user account data, if signed in.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function reload(user: User): Promise<void> {\n  const userInternal: UserInternal = getModularInstance(user) as UserInternal;\n  await _reloadWithoutSaving(userInternal);\n\n  // Even though the current user hasn't changed, update\n  // current user will trigger a persistence update w/ the\n  // new info.\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  userInternal.auth._notifyListenersIfCurrent(userInternal);\n}\n\nfunction mergeProviderData(\n  original: UserInfo[],\n  newData: UserInfo[]\n): UserInfo[] {\n  const deduped = original.filter(\n    o => !newData.some(n => n.providerId === o.providerId)\n  );\n  return [...deduped, ...newData];\n}\n\nfunction extractProviderData(providers: ProviderUserInfo[]): UserInfo[] {\n  return providers.map(({ providerId, ...provider }) => {\n    return {\n      providerId,\n      uid: provider.rawId || '',\n      displayName: provider.displayName || null,\n      email: provider.email || null,\n      phoneNumber: provider.phoneNumber || null,\n      photoURL: provider.photoUrl || null\n    };\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { MfaEnrollment } from './mfa';\nimport { Auth } from '../../model/public_types';\n\nexport interface DeleteAccountRequest {\n  idToken: string;\n}\n\nexport async function deleteAccount(\n  auth: Auth,\n  request: DeleteAccountRequest\n): Promise<void> {\n  return _performApiRequest<DeleteAccountRequest, void>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.DELETE_ACCOUNT,\n    request\n  );\n}\n\nexport interface ProviderUserInfo {\n  providerId: string;\n  rawId?: string;\n  email?: string;\n  displayName?: string;\n  photoUrl?: string;\n  phoneNumber?: string;\n}\n\nexport interface DeleteLinkedAccountsRequest {\n  idToken: string;\n  deleteProvider: string[];\n}\n\nexport interface DeleteLinkedAccountsResponse {\n  providerUserInfo: ProviderUserInfo[];\n}\n\nexport async function deleteLinkedAccounts(\n  auth: Auth,\n  request: DeleteLinkedAccountsRequest\n): Promise<DeleteLinkedAccountsResponse> {\n  return _performApiRequest<\n    DeleteLinkedAccountsRequest,\n    DeleteLinkedAccountsResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\nexport interface APIUserInfo {\n  localId?: string;\n  displayName?: string;\n  photoUrl?: string;\n  email?: string;\n  emailVerified?: boolean;\n  phoneNumber?: string;\n  lastLoginAt?: number;\n  createdAt?: number;\n  tenantId?: string;\n  passwordHash?: string;\n  providerUserInfo?: ProviderUserInfo[];\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface GetAccountInfoRequest {\n  idToken: string;\n}\n\nexport interface GetAccountInfoResponse {\n  users: APIUserInfo[];\n}\n\nexport async function getAccountInfo(\n  auth: Auth,\n  request: GetAccountInfoRequest\n): Promise<GetAccountInfoResponse> {\n  return _performApiRequest<GetAccountInfoRequest, GetAccountInfoResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.GET_ACCOUNT_INFO,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { requestStsToken } from '../../api/authentication/token';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport { _assert, debugFail } from '../util/assert';\nimport { _tokenExpiresIn } from './id_token_result';\n\n/**\n * The number of milliseconds before the official expiration time of a token\n * to refresh that token, to provide a buffer for RPCs to complete.\n */\nexport const enum Buffer {\n  TOKEN_REFRESH = 30_000\n}\n\n/**\n * We need to mark this class as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport class StsTokenManager {\n  refreshToken: string | null = null;\n  accessToken: string | null = null;\n  expirationTime: number | null = null;\n\n  get isExpired(): boolean {\n    return (\n      !this.expirationTime ||\n      Date.now() > this.expirationTime - Buffer.TOKEN_REFRESH\n    );\n  }\n\n  updateFromServerResponse(\n    response: IdTokenResponse | FinalizeMfaResponse\n  ): void {\n    _assert(response.idToken, AuthErrorCode.INTERNAL_ERROR);\n    _assert(\n      typeof response.idToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof response.refreshToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const expiresIn =\n      'expiresIn' in response && typeof response.expiresIn !== 'undefined'\n        ? Number(response.expiresIn)\n        : _tokenExpiresIn(response.idToken);\n    this.updateTokensAndExpiration(\n      response.idToken,\n      response.refreshToken,\n      expiresIn\n    );\n  }\n\n  async getToken(\n    auth: AuthInternal,\n    forceRefresh = false\n  ): Promise<string | null> {\n    _assert(\n      !this.accessToken || this.refreshToken,\n      auth,\n      AuthErrorCode.TOKEN_EXPIRED\n    );\n\n    if (!forceRefresh && this.accessToken && !this.isExpired) {\n      return this.accessToken;\n    }\n\n    if (this.refreshToken) {\n      await this.refresh(auth, this.refreshToken!);\n      return this.accessToken;\n    }\n\n    return null;\n  }\n\n  clearRefreshToken(): void {\n    this.refreshToken = null;\n  }\n\n  private async refresh(auth: AuthInternal, oldToken: string): Promise<void> {\n    const { accessToken, refreshToken, expiresIn } = await requestStsToken(\n      auth,\n      oldToken\n    );\n    this.updateTokensAndExpiration(\n      accessToken,\n      refreshToken,\n      Number(expiresIn)\n    );\n  }\n\n  private updateTokensAndExpiration(\n    accessToken: string,\n    refreshToken: string,\n    expiresInSec: number\n  ): void {\n    this.refreshToken = refreshToken || null;\n    this.accessToken = accessToken || null;\n    this.expirationTime = Date.now() + expiresInSec * 1000;\n  }\n\n  static fromJSON(appName: string, object: PersistedBlob): StsTokenManager {\n    const { refreshToken, accessToken, expirationTime } = object;\n\n    const manager = new StsTokenManager();\n    if (refreshToken) {\n      _assert(typeof refreshToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.refreshToken = refreshToken;\n    }\n    if (accessToken) {\n      _assert(typeof accessToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.accessToken = accessToken;\n    }\n    if (expirationTime) {\n      _assert(\n        typeof expirationTime === 'number',\n        AuthErrorCode.INTERNAL_ERROR,\n        {\n          appName\n        }\n      );\n      manager.expirationTime = expirationTime;\n    }\n    return manager;\n  }\n\n  toJSON(): object {\n    return {\n      refreshToken: this.refreshToken,\n      accessToken: this.accessToken,\n      expirationTime: this.expirationTime\n    };\n  }\n\n  _assign(stsTokenManager: StsTokenManager): void {\n    this.accessToken = stsTokenManager.accessToken;\n    this.refreshToken = stsTokenManager.refreshToken;\n    this.expirationTime = stsTokenManager.expirationTime;\n  }\n\n  _clone(): StsTokenManager {\n    return Object.assign(new StsTokenManager(), this.toJSON());\n  }\n\n  _performRefresh(): never {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  _getFinalTarget,\n  _performFetchWithErrorHandling,\n  HttpMethod\n} from '../index';\nimport { FetchProvider } from '../../core/util/fetch_provider';\nimport { Auth } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\n\nexport const enum Endpoint {\n  TOKEN = '/v1/token'\n}\n\n/** The server responses with snake_case; we convert to camelCase */\ninterface RequestStsTokenServerResponse {\n  access_token: string;\n  expires_in: string;\n  refresh_token: string;\n}\n\nexport interface RequestStsTokenResponse {\n  accessToken: string;\n  expiresIn: string;\n  refreshToken: string;\n}\n\nexport async function requestStsToken(\n  auth: Auth,\n  refreshToken: string\n): Promise<RequestStsTokenResponse> {\n  const response = await _performFetchWithErrorHandling<RequestStsTokenServerResponse>(\n    auth,\n    {},\n    () => {\n      const body = querystring({\n        'grant_type': 'refresh_token',\n        'refresh_token': refreshToken\n      }).slice(1);\n      const { tokenApiHost, apiKey } = auth.config;\n      const url = _getFinalTarget(\n        auth,\n        tokenApiHost,\n        Endpoint.TOKEN,\n        `key=${apiKey}`\n      );\n\n      return FetchProvider.fetch()(url, {\n        method: HttpMethod.POST,\n        headers: {\n          'X-Client-Version': (auth as AuthInternal)._getSdkClientVersion(),\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body\n      });\n    }\n  );\n\n  // The response comes back in snake_case. Convert to camel:\n  return {\n    accessToken: response.access_token,\n    expiresIn: response.expires_in,\n    refreshToken: response.refresh_token\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult, ProviderId } from '../../model/public_types';\nimport { NextFn } from '@firebase/util';\n\nimport {\n  APIUserInfo,\n  deleteAccount\n} from '../../api/account_management/account';\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport {\n  MutableUserInfo,\n  UserInternal,\n  UserParameters\n} from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport { _assert } from '../util/assert';\nimport { getIdTokenResult } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { ProactiveRefresh } from './proactive_refresh';\nimport { _reloadWithoutSaving, reload } from './reload';\nimport { StsTokenManager } from './token_manager';\nimport { UserMetadata } from './user_metadata';\n\nfunction assertStringOrUndefined(\n  assertion: unknown,\n  appName: string\n): asserts assertion is string | undefined {\n  _assert(\n    typeof assertion === 'string' || typeof assertion === 'undefined',\n    AuthErrorCode.INTERNAL_ERROR,\n    { appName }\n  );\n}\n\nexport class UserImpl implements UserInternal {\n  // For the user object, provider is always Firebase.\n  readonly providerId = ProviderId.FIREBASE;\n  stsTokenManager: StsTokenManager;\n  // Last known accessToken so we know when it changes\n  private accessToken: string | null;\n\n  uid: string;\n  auth: AuthInternal;\n  emailVerified = false;\n  isAnonymous = false;\n  tenantId: string | null = null;\n  readonly metadata: UserMetadata;\n  providerData: MutableUserInfo[] = [];\n\n  // Optional fields from UserInfo\n  displayName: string | null;\n  email: string | null;\n  phoneNumber: string | null;\n  photoURL: string | null;\n\n  _redirectEventId?: string;\n  private readonly proactiveRefresh = new ProactiveRefresh(this);\n\n  constructor({ uid, auth, stsTokenManager, ...opt }: UserParameters) {\n    this.uid = uid;\n    this.auth = auth;\n    this.stsTokenManager = stsTokenManager;\n    this.accessToken = stsTokenManager.accessToken;\n    this.displayName = opt.displayName || null;\n    this.email = opt.email || null;\n    this.phoneNumber = opt.phoneNumber || null;\n    this.photoURL = opt.photoURL || null;\n    this.isAnonymous = opt.isAnonymous || false;\n    this.metadata = new UserMetadata(\n      opt.createdAt || undefined,\n      opt.lastLoginAt || undefined\n    );\n  }\n\n  async getIdToken(forceRefresh?: boolean): Promise<string> {\n    const accessToken = await _logoutIfInvalidated(\n      this,\n      this.stsTokenManager.getToken(this.auth, forceRefresh)\n    );\n    _assert(accessToken, this.auth, AuthErrorCode.INTERNAL_ERROR);\n\n    if (this.accessToken !== accessToken) {\n      this.accessToken = accessToken;\n      await this.auth._persistUserIfCurrent(this);\n      this.auth._notifyListenersIfCurrent(this);\n    }\n\n    return accessToken;\n  }\n\n  getIdTokenResult(forceRefresh?: boolean): Promise<IdTokenResult> {\n    return getIdTokenResult(this, forceRefresh);\n  }\n\n  reload(): Promise<void> {\n    return reload(this);\n  }\n\n  private reloadUserInfo: APIUserInfo | null = null;\n  private reloadListener: NextFn<APIUserInfo> | null = null;\n\n  _assign(user: UserInternal): void {\n    if (this === user) {\n      return;\n    }\n    _assert(this.uid === user.uid, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.displayName = user.displayName;\n    this.photoURL = user.photoURL;\n    this.email = user.email;\n    this.emailVerified = user.emailVerified;\n    this.phoneNumber = user.phoneNumber;\n    this.isAnonymous = user.isAnonymous;\n    this.tenantId = user.tenantId;\n    this.providerData = user.providerData.map(userInfo => ({ ...userInfo }));\n    this.metadata._copy(user.metadata);\n    this.stsTokenManager._assign(user.stsTokenManager);\n  }\n\n  _clone(auth: AuthInternal): UserInternal {\n    return new UserImpl({\n      ...this,\n      auth,\n      stsTokenManager: this.stsTokenManager._clone()\n    });\n  }\n\n  _onReload(callback: NextFn<APIUserInfo>): void {\n    // There should only ever be one listener, and that is a single instance of MultiFactorUser\n    _assert(!this.reloadListener, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.reloadListener = callback;\n    if (this.reloadUserInfo) {\n      this._notifyReloadListener(this.reloadUserInfo);\n      this.reloadUserInfo = null;\n    }\n  }\n\n  _notifyReloadListener(userInfo: APIUserInfo): void {\n    if (this.reloadListener) {\n      this.reloadListener(userInfo);\n    } else {\n      // If no listener is subscribed yet, save the result so it's available when they do subscribe\n      this.reloadUserInfo = userInfo;\n    }\n  }\n\n  _startProactiveRefresh(): void {\n    this.proactiveRefresh._start();\n  }\n\n  _stopProactiveRefresh(): void {\n    this.proactiveRefresh._stop();\n  }\n\n  async _updateTokensIfNecessary(\n    response: IdTokenResponse | FinalizeMfaResponse,\n    reload = false\n  ): Promise<void> {\n    let tokensRefreshed = false;\n    if (\n      response.idToken &&\n      response.idToken !== this.stsTokenManager.accessToken\n    ) {\n      this.stsTokenManager.updateFromServerResponse(response);\n      tokensRefreshed = true;\n    }\n\n    if (reload) {\n      await _reloadWithoutSaving(this);\n    }\n\n    await this.auth._persistUserIfCurrent(this);\n    if (tokensRefreshed) {\n      this.auth._notifyListenersIfCurrent(this);\n    }\n  }\n\n  async delete(): Promise<void> {\n    const idToken = await this.getIdToken();\n    await _logoutIfInvalidated(this, deleteAccount(this.auth, { idToken }));\n    this.stsTokenManager.clearRefreshToken();\n\n    // TODO: Determine if cancellable-promises are necessary to use in this class so that delete()\n    //       cancels pending actions...\n\n    return this.auth.signOut();\n  }\n\n  toJSON(): PersistedBlob {\n    return {\n      uid: this.uid,\n      email: this.email || undefined,\n      emailVerified: this.emailVerified,\n      displayName: this.displayName || undefined,\n      isAnonymous: this.isAnonymous,\n      photoURL: this.photoURL || undefined,\n      phoneNumber: this.phoneNumber || undefined,\n      tenantId: this.tenantId || undefined,\n      providerData: this.providerData.map(userInfo => ({ ...userInfo })),\n      stsTokenManager: this.stsTokenManager.toJSON(),\n      // Redirect event ID must be maintained in case there is a pending\n      // redirect event.\n      _redirectEventId: this._redirectEventId,\n      ...this.metadata.toJSON(),\n\n      // Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):\n      apiKey: this.auth.config.apiKey,\n      appName: this.auth.name\n      // Missing authDomain will be tolerated by the legacy SDK.\n      // stsTokenManager.apiKey isn't actually required (despite the legacy SDK persisting it).\n    };\n  }\n\n  get refreshToken(): string {\n    return this.stsTokenManager.refreshToken || '';\n  }\n\n  static _fromJSON(auth: AuthInternal, object: PersistedBlob): UserInternal {\n    const displayName = object.displayName ?? undefined;\n    const email = object.email ?? undefined;\n    const phoneNumber = object.phoneNumber ?? undefined;\n    const photoURL = object.photoURL ?? undefined;\n    const tenantId = object.tenantId ?? undefined;\n    const _redirectEventId = object._redirectEventId ?? undefined;\n    const createdAt = object.createdAt ?? undefined;\n    const lastLoginAt = object.lastLoginAt ?? undefined;\n    const {\n      uid,\n      emailVerified,\n      isAnonymous,\n      providerData,\n      stsTokenManager: plainObjectTokenManager\n    } = object;\n\n    _assert(uid && plainObjectTokenManager, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const stsTokenManager = StsTokenManager.fromJSON(\n      this.name,\n      plainObjectTokenManager as PersistedBlob\n    );\n\n    _assert(typeof uid === 'string', auth, AuthErrorCode.INTERNAL_ERROR);\n    assertStringOrUndefined(displayName, auth.name);\n    assertStringOrUndefined(email, auth.name);\n    _assert(\n      typeof emailVerified === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof isAnonymous === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    assertStringOrUndefined(phoneNumber, auth.name);\n    assertStringOrUndefined(photoURL, auth.name);\n    assertStringOrUndefined(tenantId, auth.name);\n    assertStringOrUndefined(_redirectEventId, auth.name);\n    assertStringOrUndefined(createdAt, auth.name);\n    assertStringOrUndefined(lastLoginAt, auth.name);\n    const user = new UserImpl({\n      uid,\n      auth,\n      email,\n      emailVerified,\n      displayName,\n      isAnonymous,\n      photoURL,\n      phoneNumber,\n      tenantId,\n      stsTokenManager,\n      createdAt,\n      lastLoginAt\n    });\n\n    if (providerData && Array.isArray(providerData)) {\n      user.providerData = providerData.map(userInfo => ({ ...userInfo }));\n    }\n\n    if (_redirectEventId) {\n      user._redirectEventId = _redirectEventId;\n    }\n\n    return user;\n  }\n\n  /**\n   * Initialize a User from an idToken server response\n   * @param auth\n   * @param idTokenResponse\n   */\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserInternal> {\n    const stsTokenManager = new StsTokenManager();\n    stsTokenManager.updateFromServerResponse(idTokenResponse);\n\n    // Initialize the Firebase Auth user.\n    const user = new UserImpl({\n      uid: idTokenResponse.localId,\n      auth,\n      stsTokenManager,\n      isAnonymous\n    });\n\n    // Updates the user info and data and resolves with a user instance.\n    await _reloadWithoutSaving(user);\n    return user;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../persistence';\n\nexport class InMemoryPersistence implements PersistenceInternal {\n  static type: 'NONE' = 'NONE';\n  readonly type = PersistenceType.NONE;\n  storage: Record<string, PersistenceValue> = {};\n\n  async _isAvailable(): Promise<boolean> {\n    return true;\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage[key] = value;\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = this.storage[key];\n    return value === undefined ? null : (value as T);\n  }\n\n  async _remove(key: string): Promise<void> {\n    delete this.storage[key];\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type 'NONE'.\n *\n * @public\n */\nexport const inMemoryPersistence: Persistence = InMemoryPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { PersistedBlob, PersistenceInternal } from '../persistence';\nimport { UserImpl } from '../user/user_impl';\nimport { _getInstance } from '../util/instantiator';\nimport { inMemoryPersistence } from './in_memory';\n\nexport const enum KeyName {\n  AUTH_USER = 'authUser',\n  AUTH_EVENT = 'authEvent',\n  REDIRECT_USER = 'redirectUser',\n  PERSISTENCE_USER = 'persistence'\n}\nexport const enum Namespace {\n  PERSISTENCE = 'firebase'\n}\n\nexport function _persistenceKeyName(\n  key: string,\n  apiKey: ApiKey,\n  appName: AppName\n): string {\n  return `${Namespace.PERSISTENCE}:${key}:${apiKey}:${appName}`;\n}\n\nexport class PersistenceUserManager {\n  private readonly fullUserKey: string;\n  private readonly fullPersistenceKey: string;\n  private readonly boundEventHandler: () => void;\n\n  private constructor(\n    public persistence: PersistenceInternal,\n    private readonly auth: AuthInternal,\n    private readonly userKey: string\n  ) {\n    const { config, name } = this.auth;\n    this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name);\n    this.fullPersistenceKey = _persistenceKeyName(\n      KeyName.PERSISTENCE_USER,\n      config.apiKey,\n      name\n    );\n    this.boundEventHandler = auth._onStorageEvent.bind(auth);\n    this.persistence._addListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  setCurrentUser(user: UserInternal): Promise<void> {\n    return this.persistence._set(this.fullUserKey, user.toJSON());\n  }\n\n  async getCurrentUser(): Promise<UserInternal | null> {\n    const blob = await this.persistence._get<PersistedBlob>(this.fullUserKey);\n    return blob ? UserImpl._fromJSON(this.auth, blob) : null;\n  }\n\n  removeCurrentUser(): Promise<void> {\n    return this.persistence._remove(this.fullUserKey);\n  }\n\n  savePersistenceForRedirect(): Promise<void> {\n    return this.persistence._set(\n      this.fullPersistenceKey,\n      this.persistence.type\n    );\n  }\n\n  async setPersistence(newPersistence: PersistenceInternal): Promise<void> {\n    if (this.persistence === newPersistence) {\n      return;\n    }\n\n    const currentUser = await this.getCurrentUser();\n    await this.removeCurrentUser();\n\n    this.persistence = newPersistence;\n\n    if (currentUser) {\n      return this.setCurrentUser(currentUser);\n    }\n  }\n\n  delete(): void {\n    this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  static async create(\n    auth: AuthInternal,\n    persistenceHierarchy: PersistenceInternal[],\n    userKey = KeyName.AUTH_USER\n  ): Promise<PersistenceUserManager> {\n    if (!persistenceHierarchy.length) {\n      return new PersistenceUserManager(\n        _getInstance(inMemoryPersistence),\n        auth,\n        userKey\n      );\n    }\n\n    // Use the first persistence that supports a full read-write roundtrip (or fallback to memory).\n    let chosenPersistence = _getInstance<PersistenceInternal>(\n      inMemoryPersistence\n    );\n    for (const persistence of persistenceHierarchy) {\n      if (await persistence._isAvailable()) {\n        chosenPersistence = persistence;\n        break;\n      }\n    }\n\n    // However, attempt to migrate users stored in other persistences (in the hierarchy order).\n    let userToMigrate: UserInternal | null = null;\n    const key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);\n    for (const persistence of persistenceHierarchy) {\n      // We attempt to call _get without checking _isAvailable since here we don't care if the full\n      // round-trip (read+write) is supported. We'll take the first one that we can read or give up.\n      try {\n        const blob = await persistence._get<PersistedBlob>(key); // throws if unsupported\n        if (blob) {\n          const user = UserImpl._fromJSON(auth, blob); // throws for unparsable blob (wrong format)\n          if (persistence !== chosenPersistence) {\n            userToMigrate = user;\n          }\n          break;\n        }\n      } catch {}\n    }\n\n    if (userToMigrate) {\n      // This normally shouldn't throw since chosenPersistence.isAvailable() is true, but if it does\n      // we'll just let it bubble to surface the error.\n      await chosenPersistence._set(key, userToMigrate.toJSON());\n    }\n\n    // Attempt to clear the key in other persistences but ignore errors. This helps prevent issues\n    // such as users getting stuck with a previous account after signing out and refreshing the tab.\n    await Promise.all(\n      persistenceHierarchy.map(async persistence => {\n        if (persistence !== chosenPersistence) {\n          try {\n            await persistence._remove(key);\n          } catch {}\n        }\n      })\n    );\n    return new PersistenceUserManager(chosenPersistence, auth, userKey);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIE, getUA } from '@firebase/util';\n\ninterface NavigatorStandalone extends Navigator {\n  standalone?: unknown;\n}\n\ninterface Document {\n  documentMode?: number;\n}\n\n/**\n * Enums for Browser name.\n */\nexport const enum BrowserName {\n  ANDROID = 'Android',\n  BLACKBERRY = 'Blackberry',\n  EDGE = 'Edge',\n  FIREFOX = 'Firefox',\n  IE = 'IE',\n  IEMOBILE = 'IEMobile',\n  OPERA = 'Opera',\n  OTHER = 'Other',\n  CHROME = 'Chrome',\n  SAFARI = 'Safari',\n  SILK = 'Silk',\n  WEBOS = 'Webos'\n}\n\n/**\n * Determine the browser for the purposes of reporting usage to the API\n */\nexport function _getBrowserName(userAgent: string): BrowserName | string {\n  const ua = userAgent.toLowerCase();\n  if (ua.includes('opera/') || ua.includes('opr/') || ua.includes('opios/')) {\n    return BrowserName.OPERA;\n  } else if (_isIEMobile(ua)) {\n    // Windows phone IEMobile browser.\n    return BrowserName.IEMOBILE;\n  } else if (ua.includes('msie') || ua.includes('trident/')) {\n    return BrowserName.IE;\n  } else if (ua.includes('edge/')) {\n    return BrowserName.EDGE;\n  } else if (_isFirefox(ua)) {\n    return BrowserName.FIREFOX;\n  } else if (ua.includes('silk/')) {\n    return BrowserName.SILK;\n  } else if (_isBlackBerry(ua)) {\n    // Blackberry browser.\n    return BrowserName.BLACKBERRY;\n  } else if (_isWebOS(ua)) {\n    // WebOS default browser.\n    return BrowserName.WEBOS;\n  } else if (_isSafari(ua)) {\n    return BrowserName.SAFARI;\n  } else if (\n    (ua.includes('chrome/') || _isChromeIOS(ua)) &&\n    !ua.includes('edge/')\n  ) {\n    return BrowserName.CHROME;\n  } else if (_isAndroid(ua)) {\n    // Android stock browser.\n    return BrowserName.ANDROID;\n  } else {\n    // Most modern browsers have name/version at end of user agent string.\n    const re = /([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/;\n    const matches = userAgent.match(re);\n    if (matches?.length === 2) {\n      return matches[1];\n    }\n  }\n  return BrowserName.OTHER;\n}\n\nexport function _isFirefox(ua = getUA()): boolean {\n  return /firefox\\//i.test(ua);\n}\n\nexport function _isSafari(userAgent = getUA()): boolean {\n  const ua = userAgent.toLowerCase();\n  return (\n    ua.includes('safari/') &&\n    !ua.includes('chrome/') &&\n    !ua.includes('crios/') &&\n    !ua.includes('android')\n  );\n}\n\nexport function _isChromeIOS(ua = getUA()): boolean {\n  return /crios\\//i.test(ua);\n}\n\nexport function _isIEMobile(ua = getUA()): boolean {\n  return /iemobile/i.test(ua);\n}\n\nexport function _isAndroid(ua = getUA()): boolean {\n  return /android/i.test(ua);\n}\n\nexport function _isBlackBerry(ua = getUA()): boolean {\n  return /blackberry/i.test(ua);\n}\n\nexport function _isWebOS(ua = getUA()): boolean {\n  return /webos/i.test(ua);\n}\n\nexport function _isIOS(ua = getUA()): boolean {\n  return /iphone|ipad|ipod/i.test(ua);\n}\n\nexport function _isIOS7Or8(ua = getUA()): boolean {\n  return (\n    /(iPad|iPhone|iPod).*OS 7_\\d/i.test(ua) ||\n    /(iPad|iPhone|iPod).*OS 8_\\d/i.test(ua)\n  );\n}\n\nexport function _isIOSStandalone(ua = getUA()): boolean {\n  return _isIOS(ua) && !!(window.navigator as NavigatorStandalone)?.standalone;\n}\n\nexport function _isIE10(): boolean {\n  return isIE() && (document as Document).documentMode === 10;\n}\n\nexport function _isMobileBrowser(ua: string = getUA()): boolean {\n  // TODO: implement getBrowserName equivalent for OS.\n  return (\n    _isIOS(ua) ||\n    _isAndroid(ua) ||\n    _isWebOS(ua) ||\n    _isBlackBerry(ua) ||\n    /windows phone/i.test(ua) ||\n    _isIEMobile(ua)\n  );\n}\n\nexport function _isIframe(): boolean {\n  try {\n    // Check that the current window is not the top window.\n    // If so, return true.\n    return !!(window && window !== window.top);\n  } catch (e) {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app-exp';\nimport { _getBrowserName } from './browser';\nimport { getUA } from '@firebase/util';\n\nexport const enum ClientImplementation {\n  CORE = 'JsCore'\n}\n\nexport const enum ClientPlatform {\n  BROWSER = 'Browser',\n  NODE = 'Node',\n  REACT_NATIVE = 'ReactNative',\n  CORDOVA = 'Cordova',\n  WORKER = 'Worker'\n}\n\n/*\n * Determine the SDK version string\n */\nexport function _getClientVersion(\n  clientPlatform: ClientPlatform,\n  frameworks: readonly string[] = []\n): string {\n  let reportedPlatform: string;\n  switch (clientPlatform) {\n    case ClientPlatform.BROWSER:\n      // In a browser environment, report the browser name.\n      reportedPlatform = _getBrowserName(getUA());\n      break;\n    case ClientPlatform.WORKER:\n      // Technically a worker runs from a browser but we need to differentiate a\n      // worker from a browser.\n      // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\n      reportedPlatform = `${_getBrowserName(getUA())}-${clientPlatform}`;\n      break;\n    default:\n      reportedPlatform = clientPlatform;\n  }\n  const reportedFrameworks = frameworks.length\n    ? frameworks.join(',')\n    : 'FirebaseCore-web'; /* default value if no other framework is used */\n  return `${reportedPlatform}/${ClientImplementation.CORE}/${SDK_VERSION}/${reportedFrameworks}`;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _FirebaseService, FirebaseApp } from '@firebase/app-exp';\nimport {\n  Auth,\n  AuthErrorMap,\n  AuthSettings,\n  EmulatorConfig,\n  NextOrObserver,\n  Persistence,\n  PopupRedirectResolver,\n  User,\n  UserCredential,\n  CompleteFn,\n  ErrorFn,\n  NextFn,\n  Unsubscribe\n} from '../../model/public_types';\nimport {\n  createSubscribe,\n  ErrorFactory,\n  getModularInstance,\n  Observer,\n  Subscribe\n} from '@firebase/util';\n\nimport { AuthInternal, ConfigInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport {\n  AuthErrorCode,\n  AuthErrorParams,\n  ErrorMapRetriever,\n  _DEFAULT_AUTH_ERROR_FACTORY\n} from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport {\n  KeyName,\n  PersistenceUserManager\n} from '../persistence/persistence_user_manager';\nimport { _reloadWithoutSaving } from '../user/reload';\nimport { _assert } from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { _getUserLanguage } from '../util/navigator';\nimport { _getClientVersion } from '../util/version';\n\ninterface AsyncAction {\n  (): Promise<void>;\n}\n\nexport const enum DefaultConfig {\n  TOKEN_API_HOST = 'securetoken.googleapis.com',\n  API_HOST = 'identitytoolkit.googleapis.com',\n  API_SCHEME = 'https'\n}\n\nexport class AuthImpl implements AuthInternal, _FirebaseService {\n  currentUser: User | null = null;\n  emulatorConfig: EmulatorConfig | null = null;\n  private operations = Promise.resolve();\n  private persistenceManager?: PersistenceUserManager;\n  private redirectPersistenceManager?: PersistenceUserManager;\n  private authStateSubscription = new Subscription<User>(this);\n  private idTokenSubscription = new Subscription<User>(this);\n  private redirectUser: UserInternal | null = null;\n  private isProactiveRefreshEnabled = false;\n  private redirectInitializerError: Error | null = null;\n\n  // Any network calls will set this to true and prevent subsequent emulator\n  // initialization\n  _canInitEmulator = true;\n  _isInitialized = false;\n  _deleted = false;\n  _initializationPromise: Promise<void> | null = null;\n  _popupRedirectResolver: PopupRedirectResolverInternal | null = null;\n  _errorFactory: ErrorFactory<\n    AuthErrorCode,\n    AuthErrorParams\n  > = _DEFAULT_AUTH_ERROR_FACTORY;\n  readonly name: string;\n\n  // Tracks the last notified UID for state change listeners to prevent\n  // repeated calls to the callbacks. Undefined means it's never been\n  // called, whereas null means it's been called with a signed out user\n  private lastNotifiedUid: string | null | undefined = undefined;\n\n  languageCode: string | null = null;\n  tenantId: string | null = null;\n  settings: AuthSettings = { appVerificationDisabledForTesting: false };\n\n  constructor(\n    public readonly app: FirebaseApp,\n    public readonly config: ConfigInternal\n  ) {\n    this.name = app.name;\n    this.clientVersion = config.sdkClientVersion;\n  }\n\n  _initializeWithPersistence(\n    persistenceHierarchy: PersistenceInternal[],\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    if (popupRedirectResolver) {\n      this._popupRedirectResolver = _getInstance(popupRedirectResolver);\n    }\n\n    // Have to check for app deletion throughout initialization (after each\n    // promise resolution)\n    this._initializationPromise = this.queue(async () => {\n      if (this._deleted) {\n        return;\n      }\n\n      this.persistenceManager = await PersistenceUserManager.create(\n        this,\n        persistenceHierarchy\n      );\n\n      if (this._deleted) {\n        return;\n      }\n\n      // Initialize the resolver early if necessary (only applicable to web:\n      // this will cause the iframe to load immediately in certain cases)\n      if (this._popupRedirectResolver?._shouldInitProactively) {\n        await this._popupRedirectResolver._initialize(this);\n      }\n\n      await this.initializeCurrentUser(popupRedirectResolver);\n\n      if (this._deleted) {\n        return;\n      }\n\n      this._isInitialized = true;\n    });\n\n    // After initialization completes, throw any error caused by redirect flow\n    return this._initializationPromise.then(() => {\n      if (this.redirectInitializerError) {\n        throw this.redirectInitializerError;\n      }\n    });\n  }\n\n  /**\n   * If the persistence is changed in another window, the user manager will let us know\n   */\n  async _onStorageEvent(): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n\n    const user = await this.assertedPersistence.getCurrentUser();\n\n    if (!this.currentUser && !user) {\n      // No change, do nothing (was signed out and remained signed out).\n      return;\n    }\n\n    // If the same user is to be synchronized.\n    if (this.currentUser && user && this.currentUser.uid === user.uid) {\n      // Data update, simply copy data changes.\n      this._currentUser._assign(user);\n      // If tokens changed from previous user tokens, this will trigger\n      // notifyAuthListeners_.\n      await this.currentUser.getIdToken();\n      return;\n    }\n\n    // Update current Auth state. Either a new login or logout.\n    await this._updateCurrentUser(user);\n  }\n\n  private async initializeCurrentUser(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    // First check to see if we have a pending redirect event.\n    let storedUser = (await this.assertedPersistence.getCurrentUser()) as UserInternal | null;\n    if (popupRedirectResolver && this.config.authDomain) {\n      await this.getOrInitRedirectPersistenceManager();\n      const redirectUserEventId = this.redirectUser?._redirectEventId;\n      const storedUserEventId = storedUser?._redirectEventId;\n      const result = await this.tryRedirectSignIn(popupRedirectResolver);\n\n      // If the stored user (i.e. the old \"currentUser\") has a redirectId that\n      // matches the redirect user, then we want to initially sign in with the\n      // new user object from result.\n      // TODO(samgho): More thoroughly test all of this\n      if (\n        (!redirectUserEventId || redirectUserEventId === storedUserEventId) &&\n        result?.user\n      ) {\n        storedUser = result.user as UserInternal;\n      }\n    }\n\n    // If no user in persistence, there is no current user. Set to null.\n    if (!storedUser) {\n      return this.directlySetCurrentUser(null);\n    }\n\n    if (!storedUser._redirectEventId) {\n      // This isn't a redirect user, we can reload and bail\n      // This will also catch the redirected user, if available, as that method\n      // strips the _redirectEventId\n      return this.reloadAndSetCurrentUserOrClear(storedUser);\n    }\n\n    _assert(this._popupRedirectResolver, this, AuthErrorCode.ARGUMENT_ERROR);\n    await this.getOrInitRedirectPersistenceManager();\n\n    // If the redirect user's event ID matches the current user's event ID,\n    // DO NOT reload the current user, otherwise they'll be cleared from storage.\n    // This is important for the reauthenticateWithRedirect() flow.\n    if (\n      this.redirectUser &&\n      this.redirectUser._redirectEventId === storedUser._redirectEventId\n    ) {\n      return this.directlySetCurrentUser(storedUser);\n    }\n\n    return this.reloadAndSetCurrentUserOrClear(storedUser);\n  }\n\n  private async tryRedirectSignIn(\n    redirectResolver: PopupRedirectResolver\n  ): Promise<UserCredential | null> {\n    // The redirect user needs to be checked (and signed in if available)\n    // during auth initialization. All of the normal sign in and link/reauth\n    // flows call back into auth and push things onto the promise queue. We\n    // need to await the result of the redirect sign in *inside the promise\n    // queue*. This presents a problem: we run into deadlock. See:\n    //    ┌> [Initialization] ─────┐\n    //    ┌> [<other queue tasks>] │\n    //    └─ [getRedirectResult] <─┘\n    //    where [] are tasks on the queue and arrows denote awaits\n    // Initialization will never complete because it's waiting on something\n    // that's waiting for initialization to complete!\n    //\n    // Instead, this method calls getRedirectResult() (stored in\n    // _completeRedirectFn) with an optional parameter that instructs all of\n    // the underlying auth operations to skip anything that mutates auth state.\n\n    let result: UserCredential | null = null;\n    try {\n      // We know this._popupRedirectResolver is set since redirectResolver\n      // is passed in. The _completeRedirectFn expects the unwrapped extern.\n      result = await this._popupRedirectResolver!._completeRedirectFn(\n        this,\n        redirectResolver,\n        true\n      );\n    } catch (e) {\n      this.redirectInitializerError = e;\n      await this._setRedirectUser(null);\n    }\n\n    return result;\n  }\n\n  private async reloadAndSetCurrentUserOrClear(\n    user: UserInternal\n  ): Promise<void> {\n    try {\n      await _reloadWithoutSaving(user);\n    } catch (e) {\n      if (e.code !== `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`) {\n        // Something's wrong with the user's token. Log them out and remove\n        // them from storage\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    return this.directlySetCurrentUser(user);\n  }\n\n  useDeviceLanguage(): void {\n    this.languageCode = _getUserLanguage();\n  }\n\n  async _delete(): Promise<void> {\n    this._deleted = true;\n  }\n\n  async updateCurrentUser(userExtern: User | null): Promise<void> {\n    // The public updateCurrentUser method needs to make a copy of the user,\n    // and also check that the project matches\n    const user = userExtern\n      ? (getModularInstance(userExtern) as UserInternal)\n      : null;\n    if (user) {\n      _assert(\n        user.auth.config.apiKey === this.config.apiKey,\n        this,\n        AuthErrorCode.INVALID_AUTH\n      );\n    }\n    return this._updateCurrentUser(user && user._clone(this));\n  }\n\n  async _updateCurrentUser(user: User | null): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n    if (user) {\n      _assert(\n        this.tenantId === user.tenantId,\n        this,\n        AuthErrorCode.TENANT_ID_MISMATCH\n      );\n    }\n\n    return this.queue(async () => {\n      await this.directlySetCurrentUser(user as UserInternal | null);\n      this.notifyAuthListeners();\n    });\n  }\n\n  async signOut(): Promise<void> {\n    // Clear the redirect user when signOut is called\n    if (this.redirectPersistenceManager || this._popupRedirectResolver) {\n      await this._setRedirectUser(null);\n    }\n\n    return this._updateCurrentUser(null);\n  }\n\n  setPersistence(persistence: Persistence): Promise<void> {\n    return this.queue(async () => {\n      await this.assertedPersistence.setPersistence(_getInstance(persistence));\n    });\n  }\n\n  _getPersistence(): string {\n    return this.assertedPersistence.persistence.type;\n  }\n\n  _updateErrorMap(errorMap: AuthErrorMap): void {\n    this._errorFactory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n      'auth',\n      'Firebase',\n      (errorMap as ErrorMapRetriever)()\n    );\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.authStateSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  onIdTokenChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.idTokenSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  toJSON(): object {\n    return {\n      apiKey: this.config.apiKey,\n      authDomain: this.config.authDomain,\n      appName: this.name,\n      currentUser: this._currentUser?.toJSON()\n    };\n  }\n\n  async _setRedirectUser(\n    user: UserInternal | null,\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    const redirectManager = await this.getOrInitRedirectPersistenceManager(\n      popupRedirectResolver\n    );\n    return user === null\n      ? redirectManager.removeCurrentUser()\n      : redirectManager.setCurrentUser(user);\n  }\n\n  private async getOrInitRedirectPersistenceManager(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<PersistenceUserManager> {\n    if (!this.redirectPersistenceManager) {\n      const resolver: PopupRedirectResolverInternal | null =\n        (popupRedirectResolver && _getInstance(popupRedirectResolver)) ||\n        this._popupRedirectResolver;\n      _assert(resolver, this, AuthErrorCode.ARGUMENT_ERROR);\n      this.redirectPersistenceManager = await PersistenceUserManager.create(\n        this,\n        [_getInstance(resolver._redirectPersistence)],\n        KeyName.REDIRECT_USER\n      );\n      this.redirectUser = await this.redirectPersistenceManager.getCurrentUser();\n    }\n\n    return this.redirectPersistenceManager;\n  }\n\n  async _redirectUserForId(id: string): Promise<UserInternal | null> {\n    // Make sure we've cleared any pending persistence actions if we're not in\n    // the initializer\n    if (this._isInitialized) {\n      await this.queue(async () => {});\n    }\n\n    if (this._currentUser?._redirectEventId === id) {\n      return this._currentUser;\n    }\n\n    if (this.redirectUser?._redirectEventId === id) {\n      return this.redirectUser;\n    }\n\n    return null;\n  }\n\n  async _persistUserIfCurrent(user: UserInternal): Promise<void> {\n    if (user === this.currentUser) {\n      return this.queue(async () => this.directlySetCurrentUser(user));\n    }\n  }\n\n  /** Notifies listeners only if the user is current */\n  _notifyListenersIfCurrent(user: UserInternal): void {\n    if (user === this.currentUser) {\n      this.notifyAuthListeners();\n    }\n  }\n\n  _key(): string {\n    return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;\n  }\n\n  _startProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = true;\n    if (this.currentUser) {\n      this._currentUser._startProactiveRefresh();\n    }\n  }\n\n  _stopProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = false;\n    if (this.currentUser) {\n      this._currentUser._stopProactiveRefresh();\n    }\n  }\n\n  /** Returns the current user cast as the internal type */\n  get _currentUser(): UserInternal {\n    return this.currentUser as UserInternal;\n  }\n\n  private notifyAuthListeners(): void {\n    if (!this._isInitialized) {\n      return;\n    }\n\n    this.idTokenSubscription.next(this.currentUser);\n\n    const currentUid = this.currentUser?.uid ?? null;\n    if (this.lastNotifiedUid !== currentUid) {\n      this.lastNotifiedUid = currentUid;\n      this.authStateSubscription.next(this.currentUser);\n    }\n  }\n\n  private registerStateListener(\n    subscription: Subscription<User>,\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    if (this._deleted) {\n      return () => {};\n    }\n\n    const cb =\n      typeof nextOrObserver === 'function'\n        ? nextOrObserver\n        : nextOrObserver.next;\n\n    const promise = this._isInitialized\n      ? Promise.resolve()\n      : this._initializationPromise;\n    _assert(promise, this, AuthErrorCode.INTERNAL_ERROR);\n    // The callback needs to be called asynchronously per the spec.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    promise.then(() => cb(this.currentUser));\n\n    if (typeof nextOrObserver === 'function') {\n      return subscription.addObserver(nextOrObserver, error, completed);\n    } else {\n      return subscription.addObserver(nextOrObserver);\n    }\n  }\n\n  /**\n   * Unprotected (from race conditions) method to set the current user. This\n   * should only be called from within a queued callback. This is necessary\n   * because the queue shouldn't rely on another queued callback.\n   */\n  private async directlySetCurrentUser(\n    user: UserInternal | null\n  ): Promise<void> {\n    if (this.currentUser && this.currentUser !== user) {\n      this._currentUser._stopProactiveRefresh();\n      if (user && this.isProactiveRefreshEnabled) {\n        user._startProactiveRefresh();\n      }\n    }\n\n    this.currentUser = user;\n\n    if (user) {\n      await this.assertedPersistence.setCurrentUser(user);\n    } else {\n      await this.assertedPersistence.removeCurrentUser();\n    }\n  }\n\n  private queue(action: AsyncAction): Promise<void> {\n    // In case something errors, the callback still should be called in order\n    // to keep the promise chain alive\n    this.operations = this.operations.then(action, action);\n    return this.operations;\n  }\n\n  private get assertedPersistence(): PersistenceUserManager {\n    _assert(this.persistenceManager, this, AuthErrorCode.INTERNAL_ERROR);\n    return this.persistenceManager;\n  }\n\n  private frameworks: string[] = [];\n  private clientVersion: string;\n  _logFramework(framework: string): void {\n    if (!framework || this.frameworks.includes(framework)) {\n      return;\n    }\n    this.frameworks.push(framework);\n\n    // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\n    // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\n    this.frameworks.sort();\n    this.clientVersion = _getClientVersion(\n      this.config.clientPlatform,\n      this._getFrameworks()\n    );\n  }\n  _getFrameworks(): readonly string[] {\n    return this.frameworks;\n  }\n  _getSdkClientVersion(): string {\n    return this.clientVersion;\n  }\n}\n\n/**\n * Method to be used to cast down to our private implmentation of Auth.\n * It will also handle unwrapping from the compat type if necessary\n *\n * @param auth Auth object passed in from developer\n */\nexport function _castAuth(auth: Auth): AuthInternal {\n  return getModularInstance(auth) as AuthInternal;\n}\n\n/** Helper class to wrap subscriber logic */\nclass Subscription<T> {\n  private observer: Observer<T | null> | null = null;\n  readonly addObserver: Subscribe<T | null> = createSubscribe(\n    observer => (this.observer = observer)\n  );\n\n  constructor(readonly auth: AuthInternal) {}\n\n  get next(): NextFn<T | null> {\n    _assert(this.observer, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.observer.next.bind(this.observer);\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Auth } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _castAuth } from './auth_impl';\n\n/**\n * Changes the Auth instance to communicate with the Firebase Auth Emulator, instead of production\n * Firebase Auth services.\n *\n * @remarks\n * This must be called synchronously immediately following the first call to\n * {@link @firebase/auth#initializeAuth}.  Do not use with production credentials as emulator\n * traffic is not encrypted.\n *\n *\n * @example\n * ```javascript\n * useAuthEmulator(auth, 'http://127.0.0.1:9099', { disableWarnings: true });\n * ```\n *\n * @param auth - The Auth instance.\n * @param url - The URL at which the emulator is running (eg, 'http://localhost:9099').\n * @param options.disableWarnings - (Optional: default false) Disable the warning banner attached to the DOM\n *\n * @public\n */\nexport function useAuthEmulator(\n  auth: Auth,\n  url: string,\n  options?: { disableWarnings: boolean }\n): void {\n  const authInternal = _castAuth(auth);\n  _assert(\n    authInternal._canInitEmulator,\n    authInternal,\n    AuthErrorCode.EMULATOR_CONFIG_FAILED\n  );\n\n  _assert(\n    /^https?:\\/\\//.test(url),\n    authInternal,\n    AuthErrorCode.INVALID_EMULATOR_SCHEME\n  );\n\n  const disableWarnings = !!options?.disableWarnings;\n\n  const protocol = extractProtocol(url);\n  const { host, port } = extractHostAndPort(url);\n  const portStr = port === null ? '' : `:${port}`;\n\n  // Always replace path with \"/\" (even if input url had no path at all, or had a different one).\n  authInternal.config.emulator = { url: `${protocol}//${host}${portStr}/` };\n  authInternal.settings.appVerificationDisabledForTesting = true;\n  authInternal.emulatorConfig = Object.freeze({\n    host,\n    port,\n    protocol: protocol.replace(':', ''),\n    options: Object.freeze({ disableWarnings })\n  });\n\n  emitEmulatorWarning(disableWarnings);\n}\n\nfunction extractProtocol(url: string): string {\n  const protocolEnd = url.indexOf(':');\n  return protocolEnd < 0 ? '' : url.substr(0, protocolEnd + 1);\n}\n\nfunction extractHostAndPort(\n  url: string\n): { host: string; port: number | null } {\n  const protocol = extractProtocol(url);\n  const authority = /(\\/\\/)?([^?#/]+)/.exec(url.substr(protocol.length)); // Between // and /, ? or #.\n  if (!authority) {\n    return { host: '', port: null };\n  }\n  const hostAndPort = authority[2].split('@').pop() || ''; // Strip out \"username:password@\".\n  const bracketedIPv6 = /^(\\[[^\\]]+\\])(:|$)/.exec(hostAndPort);\n  if (bracketedIPv6) {\n    const host = bracketedIPv6[1];\n    return { host, port: parsePort(hostAndPort.substr(host.length + 1)) };\n  } else {\n    const [host, port] = hostAndPort.split(':');\n    return { host, port: parsePort(port) };\n  }\n}\n\nfunction parsePort(portStr: string): number | null {\n  if (!portStr) {\n    return null;\n  }\n  const port = Number(portStr);\n  if (isNaN(port)) {\n    return null;\n  }\n  return port;\n}\n\nfunction emitEmulatorWarning(disableBanner: boolean): void {\n  function attachBanner(): void {\n    const el = document.createElement('p');\n    const sty = el.style;\n    el.innerText =\n      'Running in emulator mode. Do not use with production credentials.';\n    sty.position = 'fixed';\n    sty.width = '100%';\n    sty.backgroundColor = '#ffffff';\n    sty.border = '.1em solid #000000';\n    sty.color = '#b50000';\n    sty.bottom = '0px';\n    sty.left = '0px';\n    sty.margin = '0px';\n    sty.zIndex = '10000';\n    sty.textAlign = 'center';\n    el.classList.add('firebase-emulator-warning');\n    document.body.appendChild(el);\n  }\n\n  if (typeof console !== 'undefined' && typeof console.info === 'function') {\n    console.info(\n      'WARNING: You are using the Auth Emulator,' +\n        ' which is intended for local testing only.  Do not use with' +\n        ' production credentials.'\n    );\n  }\n  if (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined' &&\n    !disableBanner\n  ) {\n    if (document.readyState === 'loading') {\n      window.addEventListener('DOMContentLoaded', attachBanner);\n    } else {\n      attachBanner();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { debugFail } from '../util/assert';\n\n/**\n * Interface that represents the credentials returned by an {@link AuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class AuthCredential {\n  /** @internal */\n  protected constructor(\n    /**\n     * The authentication provider ID for the credential.\n     *\n     * @remarks\n     * For example, 'facebook.com', or 'google.com'.\n     */\n    readonly providerId: string,\n    /**\n     * The authentication sign in method for the credential.\n     *\n     * @remarks\n     * For example, {@link  SignInMethod.EMAIL_PASSWORD}, or\n     * {@link  SignInMethod.EMAIL_LINK}. This corresponds to the sign-in method\n     * identifier as returned in {@link fetchSignInMethodsForEmail}.\n     */\n    readonly signInMethod: string\n  ) {}\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   *\n   * @returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object {\n    return debugFail('not implemented');\n  }\n\n  /** @internal */\n  _getIdTokenResponse(_auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _linkToIdToken(\n    _auth: AuthInternal,\n    _idToken: string\n  ): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _getReauthenticationResolver(_auth: AuthInternal): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from './mfa';\n\nexport interface ResetPasswordRequest {\n  oobCode: string;\n  newPassword?: string;\n  tenantId?: string;\n}\n\nexport interface ResetPasswordResponse {\n  email: string;\n  newEmail?: string;\n  requestType?: ActionCodeOperation;\n  mfaInfo?: MfaEnrollment;\n}\n\nexport async function resetPassword(\n  auth: Auth,\n  request: ResetPasswordRequest\n): Promise<ResetPasswordResponse> {\n  return _performApiRequest<ResetPasswordRequest, ResetPasswordResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.RESET_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\nexport interface UpdateEmailPasswordRequest {\n  idToken: string;\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n}\n\nexport interface UpdateEmailPasswordResponse extends IdTokenResponse {}\n\nexport async function updateEmailPassword(\n  auth: Auth,\n  request: UpdateEmailPasswordRequest\n): Promise<UpdateEmailPasswordResponse> {\n  return _performApiRequest<\n    UpdateEmailPasswordRequest,\n    UpdateEmailPasswordResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\nexport interface ApplyActionCodeRequest {\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface ApplyActionCodeResponse {}\n\nexport async function applyActionCode(\n  auth: Auth,\n  request: ApplyActionCodeRequest\n): Promise<ApplyActionCodeResponse> {\n  return _performApiRequest<ApplyActionCodeRequest, ApplyActionCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SET_ACCOUNT_INFO,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\n\nexport interface SignInWithPasswordRequest {\n  returnSecureToken?: boolean;\n  email: string;\n  password: string;\n  tenantId?: string;\n}\n\nexport interface SignInWithPasswordResponse extends IdTokenResponse {\n  email: string;\n  displayName: string;\n}\n\nexport async function signInWithPassword(\n  auth: Auth,\n  request: SignInWithPasswordRequest\n): Promise<SignInWithPasswordResponse> {\n  return _performSignInRequest<\n    SignInWithPasswordRequest,\n    SignInWithPasswordResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface GetOobCodeRequest {\n  email?: string; // Everything except VERIFY_AND_CHANGE_EMAIL\n  continueUrl?: string;\n  iosBundleId?: string;\n  iosAppStoreId?: string;\n  androidPackageName?: string;\n  androidInstallApp?: boolean;\n  androidMinimumVersionCode?: string;\n  canHandleCodeInApp?: boolean;\n  dynamicLinkDomain?: string;\n  tenantId?: string;\n  targetProjectid?: string;\n}\n\nexport interface VerifyEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_EMAIL;\n  idToken: IdToken;\n}\n\nexport interface PasswordResetRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.PASSWORD_RESET;\n  email: string;\n  captchaResp?: string;\n}\n\nexport interface EmailSignInRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.EMAIL_SIGNIN;\n  email: string;\n}\n\nexport interface VerifyAndChangeEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n  idToken: IdToken;\n  newEmail: string;\n}\n\ninterface GetOobCodeResponse {\n  email: string;\n}\n\nexport interface VerifyEmailResponse extends GetOobCodeResponse {}\nexport interface PasswordResetResponse extends GetOobCodeResponse {}\nexport interface EmailSignInResponse extends GetOobCodeResponse {}\nexport interface VerifyAndChangeEmailResponse extends GetOobCodeRequest {}\n\nasync function sendOobCode(\n  auth: Auth,\n  request: GetOobCodeRequest\n): Promise<GetOobCodeResponse> {\n  return _performApiRequest<GetOobCodeRequest, GetOobCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_OOB_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function sendEmailVerification(\n  auth: Auth,\n  request: VerifyEmailRequest\n): Promise<VerifyEmailResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  request: PasswordResetRequest\n): Promise<PasswordResetResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendSignInLinkToEmail(\n  auth: Auth,\n  request: EmailSignInRequest\n): Promise<EmailSignInResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function verifyAndChangeEmail(\n  auth: Auth,\n  request: VerifyAndChangeEmailRequest\n): Promise<VerifyAndChangeEmailResponse> {\n  return sendOobCode(auth, request);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/public_types';\n\nimport { updateEmailPassword } from '../../api/account_management/email_and_password';\nimport { signInWithPassword } from '../../api/authentication/email_and_password';\nimport {\n  signInWithEmailLink,\n  signInWithEmailLinkForLinking\n} from '../../api/authentication/email_link';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\n\n/**\n * Interface that represents the credentials returned by {@link EmailAuthProvider} for\n * {@link ProviderId.PASSWORD}\n *\n * @remarks\n * Covers both {@link SignInMethod.EMAIL_PASSWORD} and\n * {@link SignInMethod.EMAIL_LINK}.\n *\n * @public\n */\nexport class EmailAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    /** @internal */\n    readonly _email: string,\n    /** @internal */\n    readonly _password: string,\n    signInMethod: SignInMethod,\n    /** @internal */\n    readonly _tenantId: string | null = null\n  ) {\n    super(ProviderId.PASSWORD, signInMethod);\n  }\n\n  /** @internal */\n  static _fromEmailAndPassword(\n    email: string,\n    password: string\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      password,\n      SignInMethod.EMAIL_PASSWORD\n    );\n  }\n\n  /** @internal */\n  static _fromEmailAndCode(\n    email: string,\n    oobCode: string,\n    tenantId: string | null = null\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      oobCode,\n      SignInMethod.EMAIL_LINK,\n      tenantId\n    );\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    return {\n      email: this._email,\n      password: this._password,\n      signInMethod: this.signInMethod,\n      tenantId: this._tenantId\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an {@link  AuthCredential}.\n   *\n   * @param json - Either `object` or the stringified representation of the object. When string is\n   * provided, `JSON.parse` would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link AuthCredential}, null is returned.\n   */\n  static fromJSON(json: object | string): EmailAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    if (obj?.email && obj?.password) {\n      if (obj.signInMethod === SignInMethod.EMAIL_PASSWORD) {\n        return this._fromEmailAndPassword(obj.email, obj.password);\n      } else if (obj.signInMethod === SignInMethod.EMAIL_LINK) {\n        return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);\n      }\n    }\n    return null;\n  }\n\n  /** @internal */\n  async _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        return signInWithPassword(auth, {\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password\n        });\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLink(auth, {\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  async _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        return updateEmailPassword(auth, {\n          idToken,\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password\n        });\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLinkForLinking(auth, {\n          idToken,\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return this._getIdTokenResponse(auth);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performSignInRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithEmailLinkRequest {\n  email: string;\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface SignInWithEmailLinkResponse extends IdTokenResponse {\n  email: string;\n  isNewUser: boolean;\n}\n\nexport async function signInWithEmailLink(\n  auth: Auth,\n  request: SignInWithEmailLinkRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface SignInWithEmailLinkForLinkingRequest\n  extends SignInWithEmailLinkRequest {\n  idToken: string;\n}\n\nexport async function signInWithEmailLinkForLinking(\n  auth: Auth,\n  request: SignInWithEmailLinkForLinkingRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkForLinkingRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithIdpRequest {\n  requestUri: string;\n  postBody?: string;\n  sessionId?: string;\n  tenantId?: string;\n  returnSecureToken: boolean;\n  returnIdpCredential?: boolean;\n  idToken?: IdToken;\n  autoCreate?: boolean;\n  pendingToken?: string;\n}\n\nexport interface SignInWithIdpResponse extends IdTokenResponse {\n  oauthAccessToken?: string;\n  oauthTokenSecret?: string;\n  nonce?: string;\n  oauthIdToken?: string;\n  pendingToken?: string;\n}\n\nexport async function signInWithIdp(\n  auth: Auth,\n  request: SignInWithIdpRequest\n): Promise<SignInWithIdpResponse> {\n  return _performSignInRequest<SignInWithIdpRequest, SignInWithIdpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_IDP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\nexport interface OAuthCredentialParams {\n  // OAuth 2 uses either id token or access token\n  idToken?: string | null;\n  accessToken?: string | null;\n\n  // These fields are used with OAuth 1\n  oauthToken?: string;\n  secret?: string;\n  oauthTokenSecret?: string;\n\n  // Nonce is only set if pendingToken is not present\n  nonce?: string;\n  pendingToken?: string;\n\n  // Utilities\n  providerId: string;\n  signInMethod: string;\n}\n\n/**\n * Represents the OAuth credentials returned by an {@link OAuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class OAuthCredential extends AuthCredential {\n  /**\n   * The OAuth ID token associated with the credential if it belongs to an OIDC provider,\n   * such as `google.com`.\n   * @readonly\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token associated with the credential if it belongs to an\n   * {@link OAuthProvider}, such as `facebook.com`, `twitter.com`, etc.\n   * @readonly\n   */\n  accessToken?: string;\n  /**\n   * The OAuth access token secret associated with the credential if it belongs to an OAuth 1.0\n   * provider, such as `twitter.com`.\n   * @readonly\n   */\n  secret?: string;\n  /** @internal */\n  nonce?: string;\n  private pendingToken: string | null = null;\n\n  /** @internal */\n  static _fromParams(params: OAuthCredentialParams): OAuthCredential {\n    const cred = new OAuthCredential(params.providerId, params.signInMethod);\n\n    if (params.idToken || params.accessToken) {\n      // OAuth 2 and either ID token or access token.\n      if (params.idToken) {\n        cred.idToken = params.idToken;\n      }\n\n      if (params.accessToken) {\n        cred.accessToken = params.accessToken;\n      }\n\n      // Add nonce if available and no pendingToken is present.\n      if (params.nonce && !params.pendingToken) {\n        cred.nonce = params.nonce;\n      }\n\n      if (params.pendingToken) {\n        cred.pendingToken = params.pendingToken;\n      }\n    } else if (params.oauthToken && params.oauthTokenSecret) {\n      // OAuth 1 and OAuth token with token secret\n      cred.accessToken = params.oauthToken;\n      cred.secret = params.oauthTokenSecret;\n    } else {\n      _fail(AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    return cred;\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      idToken: this.idToken,\n      accessToken: this.accessToken,\n      secret: this.secret,\n      nonce: this.nonce,\n      pendingToken: this.pendingToken,\n      providerId: this.providerId,\n      signInMethod: this.signInMethod\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): OAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, ...rest }: Partial<OAuthCredential> = obj;\n    if (!providerId || !signInMethod) {\n      return null;\n    }\n\n    const cred = new OAuthCredential(providerId, signInMethod);\n    Object.assign(cred, rest);\n    return cred;\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true\n    };\n\n    if (this.pendingToken) {\n      request.pendingToken = this.pendingToken;\n    } else {\n      const postBody: Record<string, string> = {};\n      if (this.idToken) {\n        postBody['id_token'] = this.idToken;\n      }\n      if (this.accessToken) {\n        postBody['access_token'] = this.accessToken;\n      }\n      if (this.secret) {\n        postBody['oauth_token_secret'] = this.secret;\n      }\n\n      postBody['providerId'] = this.providerId;\n      if (this.nonce && !this.pendingToken) {\n        postBody['nonce'] = this.nonce;\n      }\n\n      request.postBody = querystring(postBody);\n    }\n\n    return request;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _makeTaggedError,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { AuthErrorCode } from '../../core/errors';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { ServerError, ServerErrorMap } from '../errors';\nimport { Auth } from '../../model/public_types';\n\nexport interface SendPhoneVerificationCodeRequest {\n  phoneNumber: string;\n  recaptchaToken: string;\n  tenantId?: string;\n}\n\nexport interface SendPhoneVerificationCodeResponse {\n  sessionInfo: string;\n}\n\nexport async function sendPhoneVerificationCode(\n  auth: Auth,\n  request: SendPhoneVerificationCodeRequest\n): Promise<SendPhoneVerificationCodeResponse> {\n  return _performApiRequest<\n    SendPhoneVerificationCodeRequest,\n    SendPhoneVerificationCodeResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_VERIFICATION_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface SignInWithPhoneNumberRequest {\n  temporaryProof?: string;\n  phoneNumber?: string;\n  sessionInfo?: string;\n  code?: string;\n  tenantId?: string;\n}\n\nexport interface LinkWithPhoneNumberRequest\n  extends SignInWithPhoneNumberRequest {\n  idToken: string;\n}\n\nexport interface SignInWithPhoneNumberResponse extends IdTokenResponse {\n  temporaryProof?: string;\n  phoneNumber?: string;\n}\n\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  return _performSignInRequest<\n    SignInWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function linkWithPhoneNumber(\n  auth: Auth,\n  request: LinkWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const response = await _performSignInRequest<\n    LinkWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n  if (response.temporaryProof) {\n    throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, response);\n  }\n  return response;\n}\n\ninterface VerifyPhoneNumberForExistingRequest\n  extends SignInWithPhoneNumberRequest {\n  operation: 'REAUTH';\n}\n\nconst VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_: Partial<\n  ServerErrorMap<ServerError>\n> = {\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.USER_DELETED\n};\n\nexport async function verifyPhoneNumberForExisting(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const apiRequest: VerifyPhoneNumberForExistingRequest = {\n    ...request,\n    operation: 'REAUTH'\n  };\n  return _performSignInRequest<\n    VerifyPhoneNumberForExistingRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, apiRequest),\n    VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/public_types';\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport {\n  linkWithPhoneNumber,\n  signInWithPhoneNumber,\n  SignInWithPhoneNumberRequest,\n  verifyPhoneNumberForExisting\n} from '../../api/authentication/sms';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nexport interface PhoneAuthCredentialParameters {\n  verificationId?: string;\n  verificationCode?: string;\n  phoneNumber?: string;\n  temporaryProof?: string;\n}\n\n/**\n * Represents the credentials returned by {@link PhoneAuthProvider}.\n *\n * @public\n */\nexport class PhoneAuthCredential extends AuthCredential {\n  private constructor(private readonly params: PhoneAuthCredentialParameters) {\n    super(ProviderId.PHONE, SignInMethod.PHONE);\n  }\n\n  /** @internal */\n  static _fromVerification(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ verificationId, verificationCode });\n  }\n\n  /** @internal */\n  static _fromTokenResponse(\n    phoneNumber: string,\n    temporaryProof: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ phoneNumber, temporaryProof });\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithPhoneNumber(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return linkWithPhoneNumber(auth, {\n      idToken,\n      ...this._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _makeVerificationRequest(): SignInWithPhoneNumberRequest {\n    const {\n      temporaryProof,\n      phoneNumber,\n      verificationId,\n      verificationCode\n    } = this.params;\n    if (temporaryProof && phoneNumber) {\n      return { temporaryProof, phoneNumber };\n    }\n\n    return {\n      sessionInfo: verificationId,\n      code: verificationCode\n    };\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    const obj: Record<string, string> = {\n      providerId: this.providerId\n    };\n    if (this.params.phoneNumber) {\n      obj.phoneNumber = this.params.phoneNumber;\n    }\n    if (this.params.temporaryProof) {\n      obj.temporaryProof = this.params.temporaryProof;\n    }\n    if (this.params.verificationCode) {\n      obj.verificationCode = this.params.verificationCode;\n    }\n    if (this.params.verificationId) {\n      obj.verificationId = this.params.verificationId;\n    }\n\n    return obj;\n  }\n\n  /** Generates a phone credential based on a plain object or a JSON string. */\n  static fromJSON(json: object | string): PhoneAuthCredential | null {\n    if (typeof json === 'string') {\n      json = JSON.parse(json);\n    }\n\n    const {\n      verificationId,\n      verificationCode,\n      phoneNumber,\n      temporaryProof\n    } = json as { [key: string]: string };\n    if (\n      !verificationCode &&\n      !verificationId &&\n      !phoneNumber &&\n      !temporaryProof\n    ) {\n      return null;\n    }\n\n    return new PhoneAuthCredential({\n      verificationId,\n      verificationCode,\n      phoneNumber,\n      temporaryProof\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extractQuerystring, querystringDecode } from '@firebase/util';\nimport { ActionCodeOperation } from '../model/public_types';\nimport { AuthErrorCode } from './errors';\nimport { _assert } from './util/assert';\n\n/**\n * Enums for fields in URL query string.\n *\n * @enum {string}\n */\nconst enum QueryField {\n  API_KEY = 'apiKey',\n  CODE = 'oobCode',\n  CONTINUE_URL = 'continueUrl',\n  LANGUAGE_CODE = 'languageCode',\n  MODE = 'mode',\n  TENANT_ID = 'tenantId'\n}\n\n/**\n * Maps the mode string in action code URL to Action Code Info operation.\n *\n * @param mode\n */\nfunction parseMode(mode: string | null): ActionCodeOperation | null {\n  switch (mode) {\n    case 'recoverEmail':\n      return ActionCodeOperation.RECOVER_EMAIL;\n    case 'resetPassword':\n      return ActionCodeOperation.PASSWORD_RESET;\n    case 'signIn':\n      return ActionCodeOperation.EMAIL_SIGNIN;\n    case 'verifyEmail':\n      return ActionCodeOperation.VERIFY_EMAIL;\n    case 'verifyAndChangeEmail':\n      return ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n    case 'revertSecondFactorAddition':\n      return ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION;\n    default:\n      return null;\n  }\n}\n\n/**\n * Helper to parse FDL links\n *\n * @param url\n */\nfunction parseDeepLink(url: string): string {\n  const link = querystringDecode(extractQuerystring(url))['link'];\n\n  // Double link case (automatic redirect).\n  const doubleDeepLink = link\n    ? querystringDecode(extractQuerystring(link))['deep_link_id']\n    : null;\n  // iOS custom scheme links.\n  const iOSDeepLink = querystringDecode(extractQuerystring(url))[\n    'deep_link_id'\n  ];\n  const iOSDoubleDeepLink = iOSDeepLink\n    ? querystringDecode(extractQuerystring(iOSDeepLink))['link']\n    : null;\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n\n/**\n * A utility class to parse email action URLs such as password reset, email verification,\n * email link sign in, etc.\n *\n * @public\n */\nexport class ActionCodeURL {\n  /**\n   * The API key of the email action link.\n   */\n  readonly apiKey: string;\n  /**\n   * The action code of the email action link.\n   */\n  readonly code: string;\n  /**\n   * The continue URL of the email action link. Null if not provided.\n   */\n  readonly continueUrl: string | null;\n  /**\n   * The language code of the email action link. Null if not provided.\n   */\n  readonly languageCode: string | null;\n  /**\n   * The action performed by the email action link. It returns from one of the types from\n   * {@link ActionCodeInfo}\n   */\n  readonly operation: ActionCodeOperation;\n  /**\n   * The tenant ID of the email action link. Null if the email action is from the parent project.\n   */\n  readonly tenantId: string | null;\n\n  /**\n   * @param actionLink - The link from which to extract the URL.\n   * @returns The ActionCodeURL object, or null if the link is invalid.\n   *\n   * @internal\n   */\n  constructor(actionLink: string) {\n    const searchParams = querystringDecode(extractQuerystring(actionLink));\n    const apiKey = searchParams[QueryField.API_KEY] ?? null;\n    const code = searchParams[QueryField.CODE] ?? null;\n    const operation = parseMode(searchParams[QueryField.MODE] ?? null);\n    // Validate API key, code and mode.\n    _assert(apiKey && code && operation, AuthErrorCode.ARGUMENT_ERROR);\n    this.apiKey = apiKey;\n    this.operation = operation;\n    this.code = code;\n    this.continueUrl = searchParams[QueryField.CONTINUE_URL] ?? null;\n    this.languageCode = searchParams[QueryField.LANGUAGE_CODE] ?? null;\n    this.tenantId = searchParams[QueryField.TENANT_ID] ?? null;\n  }\n\n  /**\n   * Parses the email action link string and returns an {@link ActionCodeURL} if the link is valid,\n   * otherwise returns null.\n   *\n   * @param link  - The email action link string.\n   * @returns The ActionCodeURL object, or null if the link is invalid.\n   *\n   * @public\n   */\n  static parseLink(link: string): ActionCodeURL | null {\n    const actionLink = parseDeepLink(link);\n    try {\n      return new ActionCodeURL(actionLink);\n    } catch {\n      return null;\n    }\n  }\n}\n\n/**\n * Parses the email action link string and returns an {@link ActionCodeURL} if\n * the link is valid, otherwise returns null.\n *\n * @public\n */\nexport function parseActionCodeURL(link: string): ActionCodeURL | null {\n  return ActionCodeURL.parseLink(link);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ProviderId,\n  SignInMethod,\n  AuthProvider\n} from '../../model/public_types';\n\nimport { ActionCodeURL } from '../action_code_url';\nimport { EmailAuthCredential } from '../credentials/email';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\n\n/**\n * Provider for generating {@link EmailAuthCredential}.\n *\n * @public\n */\nexport class EmailAuthProvider implements AuthProvider {\n  /**\n   * Always set to {@link ProviderId.PASSWORD}, even for email link.\n   */\n  static readonly PROVIDER_ID = ProviderId.PASSWORD;\n  /**\n   * Always set to {@link SignInMethod.EMAIL_PASSWORD}.\n   */\n  static readonly EMAIL_PASSWORD_SIGN_IN_METHOD = SignInMethod.EMAIL_PASSWORD;\n  /**\n   * Always set to {@link SignInMethod.EMAIL_LINK}.\n   */\n  static readonly EMAIL_LINK_SIGN_IN_METHOD = SignInMethod.EMAIL_LINK;\n  /**\n   * Always set to {@link ProviderId.PASSWORD}, even for email link.\n   */\n  readonly providerId = EmailAuthProvider.PROVIDER_ID;\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and password.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credential(email, password);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * const userCredential = await signInWithEmailAndPassword(auth, email, password);\n   * ```\n   *\n   * @param email - Email address.\n   * @param password - User account password.\n   * @returns The auth provider credential.\n   */\n  static credential(email: string, password: string): EmailAuthCredential {\n    return EmailAuthCredential._fromEmailAndPassword(email, password);\n  }\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and an email link after a sign in with\n   * email link operation.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credentialWithLink(auth, email, emailLink);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * await sendSignInLinkToEmail(auth, email);\n   * // Obtain emailLink from user.\n   * const userCredential = await signInWithEmailLink(auth, email, emailLink);\n   * ```\n   *\n   * @param auth - The Auth instance used to verify the link.\n   * @param email - Email address.\n   * @param emailLink - Sign-in email link.\n   * @returns - The auth provider credential.\n   */\n  static credentialWithLink(\n    email: string,\n    emailLink: string\n  ): EmailAuthCredential {\n    const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n    _assert(actionCodeUrl, AuthErrorCode.ARGUMENT_ERROR);\n\n    return EmailAuthCredential._fromEmailAndCode(\n      email,\n      actionCodeUrl.code,\n      actionCodeUrl.tenantId\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider } from '../../model/public_types';\n\n/**\n * Map of OAuth Custom Parameters.\n *\n * @public\n */\nexport type CustomParameters = Record<string, string>;\n\n/**\n * The base class for all Federated providers (OAuth (including OIDC), SAML).\n *\n * This class is not meant to be instantiated directly.\n *\n * @public\n */\nexport abstract class FederatedAuthProvider implements AuthProvider {\n  /** @internal */\n  defaultLanguageCode: string | null = null;\n  /** @internal */\n  private customParameters: CustomParameters = {};\n\n  /**\n   * Constructor for generic OAuth providers.\n   *\n   * @param providerId - Provider for which credentials should be generated.\n   */\n  constructor(readonly providerId: string) {}\n\n  /**\n   * Set the language gode.\n   *\n   * @param languageCode - language code\n   */\n  setDefaultLanguage(languageCode: string | null): void {\n    this.defaultLanguageCode = languageCode;\n  }\n\n  /**\n   * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\n   * operations.\n   *\n   * @remarks\n   * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\n   * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\n   *\n   * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\n   */\n  setCustomParameters(customOAuthParameters: CustomParameters): AuthProvider {\n    this.customParameters = customOAuthParameters;\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of {@link CustomParameters}.\n   */\n  getCustomParameters(): CustomParameters {\n    return this.customParameters;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, UserCredential } from '../../model/public_types';\n\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\nimport { OAuthCredential, OAuthCredentialParams } from '../credentials/oauth';\nimport { UserCredentialInternal } from '../../model/user';\nimport { FirebaseError } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { SignInWithIdpResponse } from '../../../internal';\nimport { FederatedAuthProvider } from './federated';\n\n/**\n * Defines the options for initializing an {@link OAuthCredential}.\n *\n * @remarks\n * For ID tokens with nonce claim, the raw nonce has to also be provided.\n *\n * @public\n */\nexport interface OAuthCredentialOptions {\n  /**\n   * The OAuth ID token used to initialize the {@link OAuthCredential}.\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token used to initialize the {@link OAuthCredential}.\n   */\n  accessToken?: string;\n  /**\n   * The raw nonce associated with the ID token.\n   *\n   * @remarks\n   * It is required when an ID token with a nonce field is provided. The SHA-256 hash of the\n   * raw nonce must match the nonce field in the ID token.\n   */\n  rawNonce?: string;\n}\n\n/**\n * Common code to all OAuth providers. This is separate from the\n * {@link OAuthProvider} so that child providers (like\n * {@link GoogleAuthProvider}) don't inherit the `credential` instance method.\n * Instead, they rely on a static `credential` method.\n */\nexport abstract class BaseOAuthProvider\n  extends FederatedAuthProvider\n  implements AuthProvider {\n  /** @internal */\n  private scopes: string[] = [];\n\n  /**\n   * Add an OAuth scope to the credential.\n   *\n   * @param scope - Provider OAuth scope to add.\n   */\n  addScope(scope: string): AuthProvider {\n    // If not already added, add scope to list.\n    if (!this.scopes.includes(scope)) {\n      this.scopes.push(scope);\n    }\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of OAuth scopes.\n   */\n  getScopes(): string[] {\n    return [...this.scopes];\n  }\n}\n\n/**\n * Provider for generating generic {@link OAuthCredential}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new OAuthProvider('google.com');\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a OAuth Access Token for the provider.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new OAuthProvider('google.com');\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a OAuth Access Token for the provider.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class OAuthProvider extends BaseOAuthProvider {\n  /**\n   * Creates an {@link OAuthCredential} from a JSON string or a plain object.\n   * @param json A plain object or a JSON string\n   */\n  static credentialFromJSON(json: object | string): OAuthCredential {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    _assert(\n      'providerId' in obj && 'signInMethod' in obj,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    return OAuthCredential._fromParams(obj);\n  }\n\n  /**\n   * Creates a {@link OAuthCredential} from a generic OAuth provider's access token or ID token.\n   *\n   * @remarks\n   * The raw nonce is required when an ID token with a nonce field is provided. The SHA-256 hash of\n   * the raw nonce must match the nonce field in the ID token.\n   *\n   * @example\n   * ```javascript\n   * // `googleUser` from the onsuccess Google Sign In callback.\n   * // Initialize a generate OAuth provider with a `google.com` providerId.\n   * const provider = new OAuthProvider('google.com');\n   * const credential = provider.credential({\n   *   idToken: googleUser.getAuthResponse().id_token,\n   * });\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param params - Either the options object containing the ID token, access token and raw nonce\n   * or the ID token string.\n   */\n  credential(params: OAuthCredentialOptions): OAuthCredential {\n    return this._credential(params);\n  }\n\n  /** An internal credential method that accepts more permissive options */\n  private _credential(\n    params: OAuthCredentialOptions | OAuthCredentialParams\n  ): OAuthCredential {\n    _assert(params.idToken || params.accessToken, AuthErrorCode.ARGUMENT_ERROR);\n    // For OAuthCredential, sign in method is same as providerId.\n    return OAuthCredential._fromParams({\n      ...params,\n      providerId: this.providerId,\n      signInMethod: this.providerId\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static oauthCredentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const {\n      oauthIdToken,\n      oauthAccessToken,\n      oauthTokenSecret,\n      pendingToken,\n      nonce,\n      providerId\n    } = tokenResponse as SignInWithIdpResponse;\n    if (\n      !oauthAccessToken &&\n      !oauthTokenSecret &&\n      !oauthIdToken &&\n      !pendingToken\n    ) {\n      return null;\n    }\n\n    if (!providerId) {\n      return null;\n    }\n\n    try {\n      return new OAuthProvider(providerId)._credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        rawNonce: nonce,\n        pendingToken\n      });\n    } catch (e) {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ProviderId,\n  SignInMethod,\n  UserCredential\n} from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId.FACEBOOK}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('user_birthday');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * provider.addScope('user_birthday');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class FacebookAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod.FACEBOOK}. */\n  static readonly FACEBOOK_SIGN_IN_METHOD = SignInMethod.FACEBOOK;\n  /** Always set to {@link ProviderId.FACEBOOK}. */\n  static readonly PROVIDER_ID = ProviderId.FACEBOOK;\n\n  constructor() {\n    super(ProviderId.FACEBOOK);\n  }\n\n  /**\n   * Creates a credential for Facebook.\n   *\n   * @example\n   * ```javascript\n   * // `event` from the Facebook auth.authResponseChange callback.\n   * const credential = FacebookAuthProvider.credential(event.authResponse.accessToken);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param accessToken - Facebook access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: FacebookAuthProvider.PROVIDER_ID,\n      signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ProviderId,\n  SignInMethod,\n  UserCredential\n} from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\n\n/**\n * Provider for generating an an {@link OAuthCredential} for {@link ProviderId.GOOGLE}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GoogleAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Google Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GoogleAuthProvider();\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Google Access Token.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class GoogleAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod.GOOGLE}. */\n  static readonly GOOGLE_SIGN_IN_METHOD = SignInMethod.GOOGLE;\n  /** Always set to {@link ProviderId.GOOGLE}. */\n  static readonly PROVIDER_ID = ProviderId.GOOGLE;\n\n  constructor() {\n    super(ProviderId.GOOGLE);\n    this.addScope('profile');\n  }\n\n  /**\n   * Creates a credential for Google. At least one of ID token and access token is required.\n   *\n   * @example\n   * ```javascript\n   * // \\`googleUser\\` from the onsuccess Google Sign In callback.\n   * const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param idToken - Google ID token.\n   * @param accessToken - Google access token.\n   */\n  static credential(\n    idToken?: string | null,\n    accessToken?: string | null\n  ): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GoogleAuthProvider.PROVIDER_ID,\n      signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,\n      idToken,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const {\n      oauthIdToken,\n      oauthAccessToken\n    } = tokenResponse as SignInWithIdpResponse;\n    if (!oauthIdToken && !oauthAccessToken) {\n      // This could be an oauth 1 credential or a phone credential\n      return null;\n    }\n\n    try {\n      return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ProviderId,\n  SignInMethod,\n  UserCredential\n} from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId.GITHUB}.\n *\n * @remarks\n * GitHub requires an OAuth 2.0 redirect, so you can either handle the redirect directly, or use\n * the {@link signInWithPopup} handler:\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GithubAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('repo');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Github Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GithubAuthProvider();\n * provider.addScope('repo');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Github Access Token.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class GithubAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod.GITHUB}. */\n  static readonly GITHUB_SIGN_IN_METHOD = SignInMethod.GITHUB;\n  /** Always set to {@link ProviderId.GITHUB}. */\n  static readonly PROVIDER_ID = ProviderId.GITHUB;\n\n  constructor() {\n    super(ProviderId.GITHUB);\n  }\n\n  /**\n   * Creates a credential for Github.\n   *\n   * @param accessToken - Github access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GithubAuthProvider.PROVIDER_ID,\n      signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents the SAML credentials returned by an {@link SAMLAuthProvider}.\n *\n * @public\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\n/**\n * @public\n */\nexport class SAMLAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    providerId: string,\n    private readonly pendingToken: string\n  ) {\n    super(providerId, providerId);\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      signInMethod: this.signInMethod,\n      providerId: this.providerId,\n      pendingToken: this.pendingToken\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): SAMLAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const {\n      providerId,\n      signInMethod,\n      pendingToken\n    }: Record<string, string> = obj;\n    if (\n      !providerId ||\n      !signInMethod ||\n      !pendingToken ||\n      providerId !== signInMethod\n    ) {\n      return null;\n    }\n\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  /**\n   * Helper static method to avoid exposing the constructor to end users.\n   *\n   * @internal\n   */\n  static _create(providerId: string, pendingToken: string): SAMLAuthCredential {\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    return {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true,\n      pendingToken: this.pendingToken\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2020 Twitter LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ProviderId,\n  SignInMethod,\n  UserCredential\n} from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId.TWITTER}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new TwitterAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Twitter Access Token and Secret.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n *   const secret = credential.secret;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new TwitterAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Twitter Access Token and Secret.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * const secret = credential.secret;\n * ```\n *\n * @public\n */\nexport class TwitterAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod.TWITTER}. */\n  static readonly TWITTER_SIGN_IN_METHOD = SignInMethod.TWITTER;\n  /** Always set to {@link ProviderId.TWITTER}. */\n  static readonly PROVIDER_ID = ProviderId.TWITTER;\n\n  constructor() {\n    super(ProviderId.TWITTER);\n  }\n\n  /**\n   * Creates a credential for Twitter.\n   *\n   * @param token - Twitter access token.\n   * @param secret - Twitter secret.\n   */\n  static credential(token: string, secret: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: TwitterAuthProvider.PROVIDER_ID,\n      signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,\n      oauthToken: token,\n      oauthTokenSecret: secret\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const {\n      oauthAccessToken,\n      oauthTokenSecret\n    } = tokenResponse as SignInWithIdpResponse;\n    if (!oauthAccessToken || !oauthTokenSecret) {\n      return null;\n    }\n\n    try {\n      return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignUpRequest {\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n  tenantId?: string;\n}\n\nexport interface SignUpResponse extends IdTokenResponse {\n  displayName?: string;\n  email?: string;\n}\n\nexport async function signUp(\n  auth: Auth,\n  request: SignUpRequest\n): Promise<SignUpResponse> {\n  return _performSignInRequest<SignUpRequest, SignUpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_UP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OperationType, ProviderId } from '../../model/public_types';\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { UserImpl } from './user_impl';\nimport { AuthInternal } from '../../model/auth';\n\ninterface UserCredentialParams {\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse?: PhoneOrOauthTokenResponse;\n  readonly operationType: OperationType;\n}\n\nexport class UserCredentialImpl\n  implements UserCredentialInternal, UserCredentialParams {\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse: PhoneOrOauthTokenResponse | undefined;\n  readonly operationType: OperationType;\n\n  constructor(params: UserCredentialParams) {\n    this.user = params.user;\n    this.providerId = params.providerId;\n    this._tokenResponse = params._tokenResponse;\n    this.operationType = params.operationType;\n  }\n\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    operationType: OperationType,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserCredentialInternal> {\n    const user = await UserImpl._fromIdTokenResponse(\n      auth,\n      idTokenResponse,\n      isAnonymous\n    );\n    const providerId = providerIdForResponse(idTokenResponse);\n    const userCred = new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: idTokenResponse,\n      operationType\n    });\n    return userCred;\n  }\n\n  static async _forOperation(\n    user: UserInternal,\n    operationType: OperationType,\n    response: PhoneOrOauthTokenResponse\n  ): Promise<UserCredentialImpl> {\n    await user._updateTokensIfNecessary(response, /* reload */ true);\n    const providerId = providerIdForResponse(response);\n    return new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: response,\n      operationType\n    });\n  }\n}\n\nfunction providerIdForResponse(\n  response: IdTokenResponse\n): ProviderId | string | null {\n  if (response.providerId) {\n    return response.providerId;\n  }\n\n  if ('phoneNumber' in response) {\n    return ProviderId.PHONE;\n  }\n\n  return null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MultiFactorError as MultiFactorErrorPublic,\n  OperationType\n} from '../model/public_types';\nimport { FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../model/auth';\nimport { IdTokenResponse } from '../model/id_token';\nimport { AuthErrorCode } from '../core/errors';\nimport { UserInternal } from '../model/user';\nimport { AuthCredential } from '../core/credentials';\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\n\nexport class MultiFactorError\n  extends FirebaseError\n  implements MultiFactorErrorPublic {\n  readonly name = 'FirebaseError';\n  readonly code: string;\n  readonly appName: string;\n  readonly serverResponse: IdTokenMfaResponse;\n\n  readonly tenantId?: string;\n\n  private constructor(\n    auth: AuthInternal,\n    error: FirebaseError,\n    readonly operationType: OperationType,\n    readonly user?: UserInternal\n  ) {\n    super(error.code, error.message);\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, MultiFactorError.prototype);\n    this.appName = auth.name;\n    this.code = error.code;\n    this.tenantId = auth.tenantId ?? undefined;\n    this.serverResponse = error.customData!\n      .serverResponse as IdTokenMfaResponse;\n  }\n\n  static _fromErrorAndOperation(\n    auth: AuthInternal,\n    error: FirebaseError,\n    operationType: OperationType,\n    user?: UserInternal\n  ): MultiFactorError {\n    return new MultiFactorError(auth, error, operationType, user);\n  }\n}\n\nexport function _processCredentialSavingMfaContextIfNecessary(\n  auth: AuthInternal,\n  operationType: OperationType,\n  credential: AuthCredential,\n  user?: UserInternal\n): Promise<IdTokenResponse> {\n  const idTokenProvider =\n    operationType === OperationType.REAUTHENTICATE\n      ? credential._getReauthenticationResolver(auth)\n      : credential._getIdTokenResponse(auth);\n\n  return idTokenProvider.catch(error => {\n    if (error.code === `auth/${AuthErrorCode.MFA_REQUIRED}`) {\n      throw MultiFactorError._fromErrorAndOperation(\n        auth,\n        error,\n        operationType,\n        user\n      );\n    }\n\n    throw error;\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ProviderAssociatedObject {\n  providerId?: string;\n}\n\n/**\n * Takes a set of UserInfo provider data and converts it to a set of names\n */\nexport function providerDataAsNames<T extends ProviderAssociatedObject>(\n  providerData: T[]\n): Set<string> {\n  return new Set(\n    providerData\n      .map(({ providerId }) => providerId)\n      .filter(pid => !!pid) as string[]\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OperationType, ProviderId, User } from '../../model/public_types';\n\nimport { deleteLinkedAccounts } from '../../api/account_management/account';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { providerDataAsNames } from '../util/providers';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { _reloadWithoutSaving } from './reload';\nimport { UserCredentialImpl } from './user_credential_impl';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Unlinks a provider from a user account.\n *\n * @param user - The user.\n * @param providerId - The provider to unlink.\n *\n * @public\n */\nexport async function unlink(\n  user: User,\n  providerId: ProviderId\n): Promise<User> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(true, userInternal, providerId);\n  const { providerUserInfo } = await deleteLinkedAccounts(userInternal.auth, {\n    idToken: await userInternal.getIdToken(),\n    deleteProvider: [providerId]\n  });\n\n  const providersLeft = providerDataAsNames(providerUserInfo || []);\n\n  userInternal.providerData = userInternal.providerData.filter(pd =>\n    providersLeft.has(pd.providerId)\n  );\n  if (!providersLeft.has(ProviderId.PHONE)) {\n    userInternal.phoneNumber = null;\n  }\n\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  return userInternal;\n}\n\nexport async function _link(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialInternal> {\n  const response = await _logoutIfInvalidated(\n    user,\n    credential._linkToIdToken(user.auth, await user.getIdToken()),\n    bypassAuthState\n  );\n  return UserCredentialImpl._forOperation(user, OperationType.LINK, response);\n}\n\nexport async function _assertLinkedStatus(\n  expected: boolean,\n  user: UserInternal,\n  provider: string\n): Promise<void> {\n  await _reloadWithoutSaving(user);\n  const providerIds = providerDataAsNames(user.providerData);\n\n  const code =\n    expected === false\n      ? AuthErrorCode.PROVIDER_ALREADY_LINKED\n      : AuthErrorCode.NO_SUCH_PROVIDER;\n  _assert(providerIds.has(provider) === expected, user.auth, code);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OperationType } from '../../model/public_types';\n\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert, _fail } from '../util/assert';\nimport { _parseToken } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserCredentialImpl } from './user_credential_impl';\n\nexport async function _reauthenticate(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialImpl> {\n  const { auth } = user;\n  const operationType = OperationType.REAUTHENTICATE;\n\n  try {\n    const response = await _logoutIfInvalidated(\n      user,\n      _processCredentialSavingMfaContextIfNecessary(\n        auth,\n        operationType,\n        credential,\n        user\n      ),\n      bypassAuthState\n    );\n    _assert(response.idToken, auth, AuthErrorCode.INTERNAL_ERROR);\n    const parsed = _parseToken(response.idToken);\n    _assert(parsed, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const { sub: localId } = parsed;\n    _assert(user.uid === localId, auth, AuthErrorCode.USER_MISMATCH);\n\n    return UserCredentialImpl._forOperation(user, operationType, response);\n  } catch (e) {\n    // Convert user deleted error into user mismatch\n    if (e?.code === `auth/${AuthErrorCode.USER_DELETED}`) {\n      _fail(auth, AuthErrorCode.USER_MISMATCH);\n    }\n    throw e;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  OperationType,\n  UserCredential,\n  Auth,\n  User\n} from '../../model/public_types';\n\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _assertLinkedStatus, _link } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\n\nexport async function _signInWithCredential(\n  auth: AuthInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredential> {\n  const operationType = OperationType.SIGN_IN;\n  const response = await _processCredentialSavingMfaContextIfNecessary(\n    auth,\n    operationType,\n    credential\n  );\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    auth,\n    operationType,\n    response\n  );\n\n  if (!bypassAuthState) {\n    await auth._updateCurrentUser(userCredential.user);\n  }\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * @param auth - The Auth instance.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function signInWithCredential(\n  auth: Auth,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _signInWithCredential(_castAuth(auth), credential);\n}\n\n/**\n * Links the user account with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function linkWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n\n  await _assertLinkedStatus(false, userInternal, credential.providerId);\n\n  return _link(userInternal, credential);\n}\n\n/**\n * Re-authenticates a user using a fresh credential.\n *\n * @remarks\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\n * attempts. This method can be used to recover from a CREDENTIAL_TOO_OLD_LOGIN_AGAIN error.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function reauthenticateWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _reauthenticate(getModularInstance(user) as UserInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, OperationType, UserCredential } from '../../model/public_types';\n\nimport { signInWithCustomToken as getIdTokenResponse } from '../../api/authentication/custom_token';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\n\n/**\n * Asynchronously signs in using a custom token.\n *\n * @remarks\n * Custom tokens are used to integrate Firebase Auth with existing auth systems, and must\n * be generated by an auth backend using the\n * {@link https://firebase.google.com/docs/reference/admin/node/admin.auth.Auth#createcustomtoken | createCustomToken}\n * method in the {@link https://firebase.google.com/docs/auth/admin | Admin SDK} .\n *\n * Fails with an error if the token is invalid, expired, or not accepted by the Firebase Auth service.\n *\n * @param auth - The Auth instance.\n * @param customToken - The custom token to sign in with.\n *\n * @public\n */\nexport async function signInWithCustomToken(\n  auth: Auth,\n  customToken: string\n): Promise<UserCredential> {\n  const authInternal = _castAuth(auth);\n  const response: IdTokenResponse = await getIdTokenResponse(authInternal, {\n    token: customToken,\n    returnSecureToken: true\n  });\n  const cred = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response\n  );\n  await authInternal._updateCurrentUser(cred.user);\n  return cred;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithCustomTokenRequest {\n  token: string;\n  returnSecureToken: boolean;\n  tenantId?: string;\n}\n\nexport interface SignInWithCustomTokenResponse extends IdTokenResponse {}\n\nexport async function signInWithCustomToken(\n  auth: Auth,\n  request: SignInWithCustomTokenRequest\n): Promise<SignInWithCustomTokenResponse> {\n  return _performSignInRequest<\n    SignInWithCustomTokenRequest,\n    SignInWithCustomTokenResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_CUSTOM_TOKEN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FactorId, MultiFactorInfo } from '../model/public_types';\nimport {\n  PhoneMfaEnrollment,\n  MfaEnrollment\n} from '../api/account_management/mfa';\nimport { AuthErrorCode } from '../core/errors';\nimport { _fail } from '../core/util/assert';\nimport { AuthInternal } from '../model/auth';\n\nexport abstract class MultiFactorInfoImpl implements MultiFactorInfo {\n  readonly uid: string;\n  readonly displayName?: string | null;\n  readonly enrollmentTime: string;\n\n  protected constructor(readonly factorId: FactorId, response: MfaEnrollment) {\n    this.uid = response.mfaEnrollmentId;\n    this.enrollmentTime = new Date(response.enrolledAt).toUTCString();\n    this.displayName = response.displayName;\n  }\n\n  static _fromServerResponse(\n    auth: AuthInternal,\n    enrollment: MfaEnrollment\n  ): MultiFactorInfoImpl {\n    if ('phoneInfo' in enrollment) {\n      return PhoneMultiFactorInfo._fromServerResponse(auth, enrollment);\n    }\n    return _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n  }\n}\n\nexport class PhoneMultiFactorInfo extends MultiFactorInfoImpl {\n  readonly phoneNumber: string;\n\n  private constructor(response: PhoneMfaEnrollment) {\n    super(FactorId.PHONE, response);\n    this.phoneNumber = response.phoneInfo;\n  }\n\n  static _fromServerResponse(\n    _auth: AuthInternal,\n    enrollment: MfaEnrollment\n  ): PhoneMultiFactorInfo {\n    return new PhoneMultiFactorInfo(enrollment);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeSettings, Auth } from '../../model/public_types';\n\nimport { GetOobCodeRequest } from '../../api/authentication/email_and_password';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\n\nexport function _setActionCodeSettingsOnRequest(\n  auth: Auth,\n  request: GetOobCodeRequest,\n  actionCodeSettings: ActionCodeSettings\n): void {\n  _assert(\n    actionCodeSettings.url?.length > 0,\n    auth,\n    AuthErrorCode.INVALID_CONTINUE_URI\n  );\n  _assert(\n    typeof actionCodeSettings.dynamicLinkDomain === 'undefined' ||\n      actionCodeSettings.dynamicLinkDomain.length > 0,\n    auth,\n    AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN\n  );\n\n  request.continueUrl = actionCodeSettings.url;\n  request.dynamicLinkDomain = actionCodeSettings.dynamicLinkDomain;\n  request.canHandleCodeInApp = actionCodeSettings.handleCodeInApp;\n\n  if (actionCodeSettings.iOS) {\n    _assert(\n      actionCodeSettings.iOS.bundleId.length > 0,\n      auth,\n      AuthErrorCode.MISSING_IOS_BUNDLE_ID\n    );\n    request.iosBundleId = actionCodeSettings.iOS.bundleId;\n  }\n\n  if (actionCodeSettings.android) {\n    _assert(\n      actionCodeSettings.android.packageName.length > 0,\n      auth,\n      AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME\n    );\n    request.androidInstallApp = actionCodeSettings.android.installApp;\n    request.androidMinimumVersionCode =\n      actionCodeSettings.android.minimumVersion;\n    request.androidPackageName = actionCodeSettings.android.packageName;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeInfo,\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  OperationType,\n  UserCredential\n} from '../../model/public_types';\n\nimport * as account from '../../api/account_management/email_and_password';\nimport * as authentication from '../../api/authentication/email_and_password';\nimport { signUp } from '../../api/authentication/sign_up';\nimport { MultiFactorInfoImpl } from '../../mfa/mfa_info';\nimport { EmailAuthProvider } from '../providers/email';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _assert } from '../util/assert';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { signInWithCredential } from './credential';\nimport { _castAuth } from '../auth/auth_impl';\nimport { AuthErrorCode } from '../errors';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Sends a password reset email to the given email address.\n *\n * @remarks\n * To complete the password reset, call {@link confirmPasswordReset} with the code supplied in\n * the email sent to the user, along with the new password specified by the user.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendPasswordResetEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain code from user.\n * await confirmPasswordReset('user@example.com', code);\n * ```\n *\n * @param auth - The Auth instance.\n * @param email - The user's email address.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  email: string,\n  actionCodeSettings?: ActionCodeSettings\n): Promise<void> {\n  const authModular = getModularInstance(auth);\n  const request: authentication.PasswordResetRequest = {\n    requestType: ActionCodeOperation.PASSWORD_RESET,\n    email\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(authModular, request, actionCodeSettings);\n  }\n\n  await authentication.sendPasswordResetEmail(authModular, request);\n}\n\n/**\n * Completes the password reset process, given a confirmation code and new password.\n *\n * @param auth - The Auth instance.\n * @param oobCode - A confirmation code sent to the user.\n * @param newPassword - The new password.\n *\n * @public\n */\nexport async function confirmPasswordReset(\n  auth: Auth,\n  oobCode: string,\n  newPassword: string\n): Promise<void> {\n  await account.resetPassword(getModularInstance(auth), {\n    oobCode,\n    newPassword\n  });\n  // Do not return the email.\n}\n\n/**\n * Applies a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @param auth - The Auth instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nexport async function applyActionCode(\n  auth: Auth,\n  oobCode: string\n): Promise<void> {\n  await account.applyActionCode(getModularInstance(auth), { oobCode });\n}\n\n/**\n * Checks a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @returns metadata about the code.\n *\n * @param auth - The Auth instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nexport async function checkActionCode(\n  auth: Auth,\n  oobCode: string\n): Promise<ActionCodeInfo> {\n  const authModular = getModularInstance(auth);\n  const response = await account.resetPassword(authModular, { oobCode });\n\n  // Email could be empty only if the request type is EMAIL_SIGNIN or\n  // VERIFY_AND_CHANGE_EMAIL.\n  // New email should not be empty if the request type is\n  // VERIFY_AND_CHANGE_EMAIL.\n  // Multi-factor info could not be empty if the request type is\n  // REVERT_SECOND_FACTOR_ADDITION.\n  const operation = response.requestType;\n  _assert(operation, authModular, AuthErrorCode.INTERNAL_ERROR);\n  switch (operation) {\n    case ActionCodeOperation.EMAIL_SIGNIN:\n      break;\n    case ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL:\n      _assert(response.newEmail, authModular, AuthErrorCode.INTERNAL_ERROR);\n      break;\n    case ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION:\n      _assert(response.mfaInfo, authModular, AuthErrorCode.INTERNAL_ERROR);\n    // fall through\n    default:\n      _assert(response.email, authModular, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  // The multi-factor info for revert second factor addition\n  let multiFactorInfo: MultiFactorInfoImpl | null = null;\n  if (response.mfaInfo) {\n    multiFactorInfo = MultiFactorInfoImpl._fromServerResponse(\n      _castAuth(authModular),\n      response.mfaInfo\n    );\n  }\n\n  return {\n    data: {\n      email:\n        (response.requestType === ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL\n          ? response.newEmail\n          : response.email) || null,\n      previousEmail:\n        (response.requestType === ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL\n          ? response.email\n          : response.newEmail) || null,\n      multiFactorInfo\n    },\n    operation\n  };\n}\n\n/**\n * Checks a password reset code sent to the user by email or other out-of-band mechanism.\n *\n * @returns the user's email address if valid.\n *\n * @param auth - The Auth instance.\n * @param code - A verification code sent to the user.\n *\n * @public\n */\nexport async function verifyPasswordResetCode(\n  auth: Auth,\n  code: string\n): Promise<string> {\n  const { data } = await checkActionCode(getModularInstance(auth), code);\n  // Email should always be present since a code was sent to it\n  return data.email!;\n}\n\n/**\n * Creates a new user account associated with the specified email address and password.\n *\n * @remarks\n * On successful creation of the user account, this user will also be signed in to your application.\n *\n * User account creation can fail if the account already exists or the password is invalid.\n *\n * Note: The email address acts as a unique identifier for the user and enables an email-based\n * password reset. This function will create a new user account and set the initial user password.\n *\n * @param auth - The Auth instance.\n * @param email - The user's email address.\n * @param password - The user's chosen password.\n *\n * @public\n */\nexport async function createUserWithEmailAndPassword(\n  auth: Auth,\n  email: string,\n  password: string\n): Promise<UserCredential> {\n  const authInternal = _castAuth(auth);\n  const response = await signUp(authInternal, {\n    returnSecureToken: true,\n    email,\n    password\n  });\n\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response\n  );\n  await authInternal._updateCurrentUser(userCredential.user);\n\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in using an email and password.\n *\n * @remarks\n * Fails with an error if the email address and password do not match.\n *\n * Note: The user's password is NOT the password used to access the user's email account. The\n * email address serves as a unique identifier for the user, and the password is used to access\n * the user's account in your Firebase project. See also: {@link createUserWithEmailAndPassword}.\n *\n * @param auth - The Auth instance.\n * @param email - The users email address.\n * @param password - The users password.\n *\n * @public\n */\nexport function signInWithEmailAndPassword(\n  auth: Auth,\n  email: string,\n  password: string\n): Promise<UserCredential> {\n  return signInWithCredential(\n    getModularInstance(auth),\n    EmailAuthProvider.credential(email, password)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  UserCredential\n} from '../../model/public_types';\n\nimport * as api from '../../api/authentication/email_and_password';\nimport { ActionCodeURL } from '../action_code_url';\nimport { EmailAuthProvider } from '../providers/email';\nimport { _getCurrentUrl } from '../util/location';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { signInWithCredential } from './credential';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Sends a sign-in email link to the user with the specified email.\n *\n * @remarks\n * The sign-in operation has to always be completed in the app unlike other out of band email\n * actions (password reset and email verifications). This is because, at the end of the flow,\n * the user is expected to be signed in and their Auth state persisted within the app.\n *\n * To complete sign in with the email link, call {@link signInWithEmailLink} with the email\n * address and the email link supplied in the email sent to the user.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain emailLink from the user.\n * if(isSignInWithEmailLink(auth, emailLink)) {\n *   await signInWithEmailLink('user@example.com', 'user@example.com', emailLink);\n * }\n * ```\n *\n * @param authInternal - The Auth instance.\n * @param email - The user's email address.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendSignInLinkToEmail(\n  auth: Auth,\n  email: string,\n  actionCodeSettings: ActionCodeSettings\n): Promise<void> {\n  const authModular = getModularInstance(auth);\n  const request: api.EmailSignInRequest = {\n    requestType: ActionCodeOperation.EMAIL_SIGNIN,\n    email\n  };\n  _assert(\n    actionCodeSettings.handleCodeInApp,\n    authModular,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(authModular, request, actionCodeSettings);\n  }\n\n  await api.sendSignInLinkToEmail(authModular, request);\n}\n\n/**\n * Checks if an incoming link is a sign-in with email link suitable for {@link signInWithEmailLink}.\n *\n * @param auth - The Auth instance.\n * @param emailLink - The link sent to the user's email address.\n *\n * @public\n */\nexport function isSignInWithEmailLink(auth: Auth, emailLink: string): boolean {\n  const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n  return actionCodeUrl?.operation === ActionCodeOperation.EMAIL_SIGNIN;\n}\n\n/**\n * Asynchronously signs in using an email and sign-in email link.\n *\n * @remarks\n * If no link is passed, the link is inferred from the current URL.\n *\n * Fails with an error if the email address is invalid or OTP in email link expires.\n *\n * Note: Confirm the link is a sign-in email link before calling this method firebase.auth.Auth.isSignInWithEmailLink.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain emailLink from the user.\n * if(isSignInWithEmailLink(auth, emailLink)) {\n *   await signInWithEmailLink('user@example.com', 'user@example.com', emailLink);\n * }\n * ```\n *\n * @param auth - The Auth instance.\n * @param email - The user's email address.\n * @param emailLink - The link sent to the user's email address.\n *\n * @public\n */\nexport async function signInWithEmailLink(\n  auth: Auth,\n  email: string,\n  emailLink?: string\n): Promise<UserCredential> {\n  const authModular = getModularInstance(auth);\n  const credential = EmailAuthProvider.credentialWithLink(\n    email,\n    emailLink || _getCurrentUrl()\n  );\n  // Check if the tenant ID in the email link matches the tenant ID on Auth\n  // instance.\n  _assert(\n    credential._tenantId === (authModular.tenantId || null),\n    authModular,\n    AuthErrorCode.TENANT_ID_MISMATCH\n  );\n  return signInWithCredential(authModular, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  User\n} from '../../model/public_types';\n\nimport {\n  createAuthUri,\n  CreateAuthUriRequest\n} from '../../api/authentication/create_auth_uri';\nimport * as api from '../../api/authentication/email_and_password';\nimport { UserInternal } from '../../model/user';\nimport { _getCurrentUrl, _isHttpOrHttps } from '../util/location';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Gets the list of possible sign in methods for the given email address.\n *\n * @remarks\n * This is useful to differentiate methods of sign-in for the same provider, eg.\n * {@link EmailAuthProvider} which has 2 methods of sign-in,\n * {@link SignInMethod.EMAIL_PASSWORD} and\n * {@link SignInMethod.EMAIL_LINK} .\n *\n * @param auth - The Auth instance.\n * @param email - The user's email address.\n *\n * @public\n */\nexport async function fetchSignInMethodsForEmail(\n  auth: Auth,\n  email: string\n): Promise<string[]> {\n  // createAuthUri returns an error if continue URI is not http or https.\n  // For environments like Cordova, Chrome extensions, native frameworks, file\n  // systems, etc, use http://localhost as continue URL.\n  const continueUri = _isHttpOrHttps() ? _getCurrentUrl() : 'http://localhost';\n  const request: CreateAuthUriRequest = {\n    identifier: email,\n    continueUri\n  };\n\n  const { signinMethods } = await createAuthUri(\n    getModularInstance(auth),\n    request\n  );\n\n  return signinMethods || [];\n}\n\n/**\n * Sends a verification email to a user.\n *\n * @remarks\n * The verification process is completed by calling {@link applyActionCode}.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendEmailVerification(user, actionCodeSettings);\n * // Obtain code from the user.\n * await applyActionCode(auth, code);\n * ```\n *\n * @param user - The user.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendEmailVerification(\n  user: User,\n  actionCodeSettings?: ActionCodeSettings | null\n): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const idToken = await user.getIdToken();\n  const request: api.VerifyEmailRequest = {\n    requestType: ActionCodeOperation.VERIFY_EMAIL,\n    idToken\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(\n      userInternal.auth,\n      request,\n      actionCodeSettings\n    );\n  }\n\n  const { email } = await api.sendEmailVerification(userInternal.auth, request);\n\n  if (email !== user.email) {\n    await user.reload();\n  }\n}\n\n/**\n * Sends a verification email to a new email address.\n *\n * @remarks\n * The user's email will be updated to the new one after being verified.\n *\n * If you have a custom email action handler, you can complete the verification process by calling\n * {@link applyActionCode}.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await verifyBeforeUpdateEmail(user, 'newemail@example.com', actionCodeSettings);\n * // Obtain code from the user.\n * await applyActionCode(auth, code);\n * ```\n *\n * @param user - The user.\n * @param newEmail - The new email address to be verified before update.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function verifyBeforeUpdateEmail(\n  user: User,\n  newEmail: string,\n  actionCodeSettings?: ActionCodeSettings | null\n): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const idToken = await user.getIdToken();\n  const request: api.VerifyAndChangeEmailRequest = {\n    requestType: ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n    idToken,\n    newEmail\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(\n      userInternal.auth,\n      request,\n      actionCodeSettings\n    );\n  }\n\n  const { email } = await api.verifyAndChangeEmail(userInternal.auth, request);\n\n  if (email !== user.email) {\n    // If the local copy of the email on user is outdated, reload the\n    // user.\n    await user.reload();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { Auth } from '../../model/public_types';\n\nexport interface CreateAuthUriRequest {\n  identifier: string;\n  continueUri: string;\n  tenantId?: string;\n}\n\nexport interface CreateAuthUriResponse {\n  signinMethods: string[];\n}\n\nexport async function createAuthUri(\n  auth: Auth,\n  request: CreateAuthUriRequest\n): Promise<CreateAuthUriResponse> {\n  return _performApiRequest<CreateAuthUriRequest, CreateAuthUriResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.CREATE_AUTH_URI,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, User } from '../../model/public_types';\n\nimport {\n  updateEmailPassword as apiUpdateEmailPassword,\n  UpdateEmailPasswordRequest\n} from '../../api/account_management/email_and_password';\nimport { updateProfile as apiUpdateProfile } from '../../api/account_management/profile';\nimport { UserInternal } from '../../model/user';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Updates a user's profile data.\n *\n * @param user - The user.\n * @param profile - The profile's `displayName` and `photoURL` to update.\n *\n * @public\n */\nexport async function updateProfile(\n  user: User,\n  {\n    displayName,\n    photoURL: photoUrl\n  }: { displayName?: string | null; photoURL?: string | null }\n): Promise<void> {\n  if (displayName === undefined && photoUrl === undefined) {\n    return;\n  }\n\n  const userInternal = getModularInstance(user) as UserInternal;\n  const idToken = await userInternal.getIdToken();\n  const profileRequest = {\n    idToken,\n    displayName,\n    photoUrl,\n    returnSecureToken: true\n  };\n  const response = await _logoutIfInvalidated(\n    userInternal,\n    apiUpdateProfile(userInternal.auth, profileRequest)\n  );\n\n  userInternal.displayName = response.displayName || null;\n  userInternal.photoURL = response.photoUrl || null;\n\n  // Update the password provider as well\n  const passwordProvider = userInternal.providerData.find(\n    ({ providerId }) => providerId === ProviderId.PASSWORD\n  );\n  if (passwordProvider) {\n    passwordProvider.displayName = userInternal.displayName;\n    passwordProvider.photoURL = userInternal.photoURL;\n  }\n\n  await userInternal._updateTokensIfNecessary(response);\n}\n\n/**\n * Updates the user's email address.\n *\n * @remarks\n * An email will be sent to the original email address (if it was set) that allows to revoke the\n * email address change, in order to protect them from account hijacking.\n *\n * Important: this is a security sensitive operation that requires the user to have recently signed\n * in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n * @param newEmail - The new email address.\n *\n * @public\n */\nexport function updateEmail(user: User, newEmail: string): Promise<void> {\n  return updateEmailOrPassword(\n    getModularInstance(user) as UserInternal,\n    newEmail,\n    null\n  );\n}\n\n/**\n * Updates the user's password.\n *\n * @remarks\n * Important: this is a security sensitive operation that requires the user to have recently signed\n * in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n * @param newPassword - The new password.\n *\n * @public\n */\nexport function updatePassword(user: User, newPassword: string): Promise<void> {\n  return updateEmailOrPassword(\n    getModularInstance(user) as UserInternal,\n    null,\n    newPassword\n  );\n}\n\nasync function updateEmailOrPassword(\n  user: UserInternal,\n  email: string | null,\n  password: string | null\n): Promise<void> {\n  const { auth } = user;\n  const idToken = await user.getIdToken();\n  const request: UpdateEmailPasswordRequest = {\n    idToken,\n    returnSecureToken: true\n  };\n\n  if (email) {\n    request.email = email;\n  }\n\n  if (password) {\n    request.password = password;\n  }\n\n  const response = await _logoutIfInvalidated(\n    user,\n    apiUpdateEmailPassword(auth, request)\n  );\n  await user._updateTokensIfNecessary(response, /* reload */ true);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface UpdateProfileRequest {\n  idToken: string;\n  displayName?: string | null;\n  photoUrl?: string | null;\n  returnSecureToken: boolean;\n}\n\nexport interface UpdateProfileResponse extends IdTokenResponse {\n  displayName?: string | null;\n  photoUrl?: string | null;\n}\n\nexport async function updateProfile(\n  auth: Auth,\n  request: UpdateProfileRequest\n): Promise<UpdateProfileResponse> {\n  return _performApiRequest<UpdateProfileRequest, UpdateProfileResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SET_ACCOUNT_INFO,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AdditionalUserInfo,\n  ProviderId,\n  UserCredential\n} from '../../model/public_types';\nimport { IdTokenResponse, IdTokenResponseKind } from '../../model/id_token';\nimport { _parseToken } from './id_token_result';\nimport { UserCredentialInternal } from '../../model/user';\n\n/**\n * Parse the `AdditionalUserInfo` from the ID token response.\n *\n */\nexport function _fromIdTokenResponse(\n  idTokenResponse?: IdTokenResponse\n): AdditionalUserInfo | null {\n  if (!idTokenResponse) {\n    return null;\n  }\n  const { providerId } = idTokenResponse;\n  const profile = idTokenResponse.rawUserInfo\n    ? JSON.parse(idTokenResponse.rawUserInfo)\n    : {};\n  const isNewUser =\n    idTokenResponse.isNewUser ||\n    idTokenResponse.kind === IdTokenResponseKind.SignupNewUser;\n  if (!providerId && idTokenResponse?.idToken) {\n    const signInProvider = _parseToken(idTokenResponse.idToken)?.firebase?.[\n      'sign_in_provider'\n    ];\n    if (signInProvider) {\n      const filteredProviderId =\n        signInProvider !== ProviderId.ANONYMOUS &&\n        signInProvider !== ProviderId.CUSTOM\n          ? (signInProvider as ProviderId)\n          : null;\n      // Uses generic class in accordance with the legacy SDK.\n      return new GenericAdditionalUserInfo(isNewUser, filteredProviderId);\n    }\n  }\n  if (!providerId) {\n    return null;\n  }\n  switch (providerId) {\n    case ProviderId.FACEBOOK:\n      return new FacebookAdditionalUserInfo(isNewUser, profile);\n    case ProviderId.GITHUB:\n      return new GithubAdditionalUserInfo(isNewUser, profile);\n    case ProviderId.GOOGLE:\n      return new GoogleAdditionalUserInfo(isNewUser, profile);\n    case ProviderId.TWITTER:\n      return new TwitterAdditionalUserInfo(\n        isNewUser,\n        profile,\n        idTokenResponse.screenName || null\n      );\n    case ProviderId.CUSTOM:\n    case ProviderId.ANONYMOUS:\n      return new GenericAdditionalUserInfo(isNewUser, null);\n    default:\n      return new GenericAdditionalUserInfo(isNewUser, providerId, profile);\n  }\n}\n\nclass GenericAdditionalUserInfo implements AdditionalUserInfo {\n  constructor(\n    readonly isNewUser: boolean,\n    readonly providerId: ProviderId | string | null,\n    readonly profile: Record<string, unknown> = {}\n  ) {}\n}\n\nclass FederatedAdditionalUserInfoWithUsername extends GenericAdditionalUserInfo {\n  constructor(\n    isNewUser: boolean,\n    providerId: ProviderId,\n    profile: Record<string, unknown>,\n    readonly username: string | null\n  ) {\n    super(isNewUser, providerId, profile);\n  }\n}\n\nclass FacebookAdditionalUserInfo extends GenericAdditionalUserInfo {\n  constructor(isNewUser: boolean, profile: Record<string, unknown>) {\n    super(isNewUser, ProviderId.FACEBOOK, profile);\n  }\n}\n\nclass GithubAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\n  constructor(isNewUser: boolean, profile: Record<string, unknown>) {\n    super(\n      isNewUser,\n      ProviderId.GITHUB,\n      profile,\n      typeof profile?.login === 'string' ? profile?.login : null\n    );\n  }\n}\n\nclass GoogleAdditionalUserInfo extends GenericAdditionalUserInfo {\n  constructor(isNewUser: boolean, profile: Record<string, unknown>) {\n    super(isNewUser, ProviderId.GOOGLE, profile);\n  }\n}\n\nclass TwitterAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\n  constructor(\n    isNewUser: boolean,\n    profile: Record<string, unknown>,\n    screenName: string | null\n  ) {\n    super(isNewUser, ProviderId.TWITTER, profile, screenName);\n  }\n}\n\n/**\n * Extracts provider specific {@link AdditionalUserInfo} for the given credential.\n *\n * @param userCredential - The user credential.\n *\n * @public\n */\nexport function getAdditionalUserInfo(\n  userCredential: UserCredential\n): AdditionalUserInfo | null {\n  const { user, _tokenResponse } = userCredential as UserCredentialInternal;\n  if (user.isAnonymous && !_tokenResponse) {\n    // Handle the special case where signInAnonymously() gets called twice.\n    // No network call is made so there's nothing to actually fill this in\n    return {\n      providerId: null,\n      isNewUser: false,\n      profile: null\n    };\n  }\n\n  return _fromIdTokenResponse(_tokenResponse);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { MultiFactorSession } from '../model/public_types';\n\nexport const enum MultiFactorSessionType {\n  ENROLL = 'enroll',\n  SIGN_IN = 'signin'\n}\n\ninterface SerializedMultiFactorSession {\n  multiFactorSession: {\n    idToken?: string;\n    pendingCredential?: string;\n  };\n}\n\nexport class MultiFactorSessionImpl implements MultiFactorSession {\n  private constructor(\n    readonly type: MultiFactorSessionType,\n    readonly credential: string\n  ) {}\n\n  static _fromIdtoken(idToken: string): MultiFactorSessionImpl {\n    return new MultiFactorSessionImpl(MultiFactorSessionType.ENROLL, idToken);\n  }\n\n  static _fromMfaPendingCredential(\n    mfaPendingCredential: string\n  ): MultiFactorSessionImpl {\n    return new MultiFactorSessionImpl(\n      MultiFactorSessionType.SIGN_IN,\n      mfaPendingCredential\n    );\n  }\n\n  toJSON(): SerializedMultiFactorSession {\n    const key =\n      this.type === MultiFactorSessionType.ENROLL\n        ? 'idToken'\n        : 'pendingCredential';\n    return {\n      multiFactorSession: {\n        [key]: this.credential\n      }\n    };\n  }\n\n  static fromJSON(\n    obj: Partial<SerializedMultiFactorSession>\n  ): MultiFactorSessionImpl | null {\n    if (obj?.multiFactorSession) {\n      if (obj.multiFactorSession?.pendingCredential) {\n        return MultiFactorSessionImpl._fromMfaPendingCredential(\n          obj.multiFactorSession.pendingCredential\n        );\n      } else if (obj.multiFactorSession?.idToken) {\n        return MultiFactorSessionImpl._fromIdtoken(\n          obj.multiFactorSession.idToken\n        );\n      }\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  MultiFactorResolver,\n  OperationType,\n  UserCredential,\n  MultiFactorError\n} from '../model/public_types';\n\nimport { _castAuth } from '../core/auth/auth_impl';\nimport { AuthErrorCode } from '../core/errors';\nimport { UserCredentialImpl } from '../core/user/user_credential_impl';\nimport { _assert, _fail } from '../core/util/assert';\nimport { UserCredentialInternal } from '../model/user';\nimport { MultiFactorAssertionImpl } from './mfa_assertion';\nimport { MultiFactorError as MultiFactorErrorInternal } from './mfa_error';\nimport { MultiFactorInfoImpl } from './mfa_info';\nimport { MultiFactorSessionImpl } from './mfa_session';\nimport { getModularInstance } from '@firebase/util';\n\nexport class MultiFactorResolverImpl implements MultiFactorResolver {\n  private constructor(\n    readonly session: MultiFactorSessionImpl,\n    readonly hints: MultiFactorInfoImpl[],\n    private readonly signInResolver: (\n      assertion: MultiFactorAssertionImpl\n    ) => Promise<UserCredentialInternal>\n  ) {}\n\n  /** @internal */\n  static _fromError(\n    authExtern: Auth,\n    error: MultiFactorErrorInternal\n  ): MultiFactorResolverImpl {\n    const auth = _castAuth(authExtern);\n    const hints = (error.serverResponse.mfaInfo || []).map(enrollment =>\n      MultiFactorInfoImpl._fromServerResponse(auth, enrollment)\n    );\n\n    _assert(\n      error.serverResponse.mfaPendingCredential,\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const session = MultiFactorSessionImpl._fromMfaPendingCredential(\n      error.serverResponse.mfaPendingCredential\n    );\n\n    return new MultiFactorResolverImpl(\n      session,\n      hints,\n      async (\n        assertion: MultiFactorAssertionImpl\n      ): Promise<UserCredentialInternal> => {\n        const mfaResponse = await assertion._process(auth, session);\n        // Clear out the unneeded fields from the old login response\n        delete error.serverResponse.mfaInfo;\n        delete error.serverResponse.mfaPendingCredential;\n\n        // Use in the new token & refresh token in the old response\n        const idTokenResponse = {\n          ...error.serverResponse,\n          idToken: mfaResponse.idToken,\n          refreshToken: mfaResponse.refreshToken\n        };\n\n        // TODO: we should collapse this switch statement into UserCredentialImpl._forOperation and have it support the SIGN_IN case\n        switch (error.operationType) {\n          case OperationType.SIGN_IN:\n            const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n              auth,\n              error.operationType,\n              idTokenResponse\n            );\n            await auth._updateCurrentUser(userCredential.user);\n            return userCredential;\n          case OperationType.REAUTHENTICATE:\n            _assert(error.user, auth, AuthErrorCode.INTERNAL_ERROR);\n            return UserCredentialImpl._forOperation(\n              error.user,\n              error.operationType,\n              idTokenResponse\n            );\n          default:\n            _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n        }\n      }\n    );\n  }\n\n  async resolveSignIn(\n    assertionExtern: MultiFactorAssertionImpl\n  ): Promise<UserCredential> {\n    const assertion = assertionExtern as MultiFactorAssertionImpl;\n    return this.signInResolver(assertion);\n  }\n}\n\n/**\n * Provides a {@link MultiFactorResolver} suitable for completion of a\n * multi-factor flow.\n *\n * @param auth - The auth instance.\n * @param error - The {@link MultiFactorError} raised during a sign-in, or\n * reauthentication operation.\n *\n * @public\n */\nexport function getMultiFactorResolver(\n  auth: Auth,\n  error: MultiFactorError\n): MultiFactorResolver {\n  const authModular = getModularInstance(auth);\n  const errorInternal = error as MultiFactorErrorInternal;\n  _assert(error.operationType, authModular, AuthErrorCode.ARGUMENT_ERROR);\n  _assert(\n    errorInternal.serverResponse?.mfaPendingCredential,\n    authModular,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n\n  return MultiFactorResolverImpl._fromError(authModular, errorInternal);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  MultiFactorAssertion,\n  MultiFactorInfo,\n  MultiFactorSession,\n  MultiFactorUser,\n  User\n} from '../model/public_types';\n\nimport { withdrawMfa } from '../api/account_management/mfa';\nimport { AuthErrorCode } from '../core/errors';\nimport { _logoutIfInvalidated } from '../core/user/invalidation';\nimport { UserInternal } from '../model/user';\nimport { MultiFactorAssertionImpl } from './mfa_assertion';\nimport { MultiFactorInfoImpl } from './mfa_info';\nimport { MultiFactorSessionImpl } from './mfa_session';\nimport { getModularInstance } from '@firebase/util';\n\nexport class MultiFactorUserImpl implements MultiFactorUser {\n  enrolledFactors: MultiFactorInfo[] = [];\n\n  private constructor(readonly user: UserInternal) {\n    user._onReload(userInfo => {\n      if (userInfo.mfaInfo) {\n        this.enrolledFactors = userInfo.mfaInfo.map(enrollment =>\n          MultiFactorInfoImpl._fromServerResponse(user.auth, enrollment)\n        );\n      }\n    });\n  }\n\n  static _fromUser(user: UserInternal): MultiFactorUserImpl {\n    return new MultiFactorUserImpl(user);\n  }\n\n  async getSession(): Promise<MultiFactorSession> {\n    return MultiFactorSessionImpl._fromIdtoken(await this.user.getIdToken());\n  }\n\n  async enroll(\n    assertionExtern: MultiFactorAssertion,\n    displayName?: string | null\n  ): Promise<void> {\n    const assertion = assertionExtern as MultiFactorAssertionImpl;\n    const session = (await this.getSession()) as MultiFactorSessionImpl;\n    const finalizeMfaResponse = await _logoutIfInvalidated(\n      this.user,\n      assertion._process(this.user.auth, session, displayName)\n    );\n    // New tokens will be issued after enrollment of the new second factors.\n    // They need to be updated on the user.\n    await this.user._updateTokensIfNecessary(finalizeMfaResponse);\n    // The user needs to be reloaded to get the new multi-factor information\n    // from server. USER_RELOADED event will be triggered and `enrolledFactors`\n    // will be updated.\n    return this.user.reload();\n  }\n\n  async unenroll(infoOrUid: MultiFactorInfo | string): Promise<void> {\n    const mfaEnrollmentId =\n      typeof infoOrUid === 'string' ? infoOrUid : infoOrUid.uid;\n    const idToken = await this.user.getIdToken();\n    const idTokenResponse = await _logoutIfInvalidated(\n      this.user,\n      withdrawMfa(this.user.auth, {\n        idToken,\n        mfaEnrollmentId\n      })\n    );\n    // Remove the second factor from the user's list.\n    this.enrolledFactors = this.enrolledFactors.filter(\n      ({ uid }) => uid !== mfaEnrollmentId\n    );\n    // Depending on whether the backend decided to revoke the user's session,\n    // the tokenResponse may be empty. If the tokens were not updated (and they\n    // are now invalid), reloading the user will discover this and invalidate\n    // the user's state accordingly.\n    await this.user._updateTokensIfNecessary(idTokenResponse);\n    try {\n      await this.user.reload();\n    } catch (e) {\n      if (e.code !== `auth/${AuthErrorCode.TOKEN_EXPIRED}`) {\n        throw e;\n      }\n    }\n  }\n}\n\nconst multiFactorUserCache = new WeakMap<User, MultiFactorUser>();\n\n/**\n * The {@link MultiFactorUser} corresponding to the user.\n *\n * @remarks\n * This is used to access all multi-factor properties and operations related to the user.\n *\n * @param user - The user.\n *\n * @public\n */\nexport function multiFactor(user: User): MultiFactorUser {\n  const userModular = getModularInstance(user);\n  if (!multiFactorUserCache.has(userModular)) {\n    multiFactorUserCache.set(\n      userModular,\n      MultiFactorUserImpl._fromUser(userModular as UserInternal)\n    );\n  }\n  return multiFactorUserCache.get(userModular)!;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { SignInWithPhoneNumberRequest } from '../authentication/sms';\nimport { FinalizeMfaResponse } from '../authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\n\n/**\n * MFA Info as returned by the API\n */\ninterface BaseMfaEnrollment {\n  mfaEnrollmentId: string;\n  enrolledAt: number;\n  displayName?: string;\n}\n\n/**\n * An MFA provided by SMS verification\n */\nexport interface PhoneMfaEnrollment extends BaseMfaEnrollment {\n  phoneInfo: string;\n}\n\n/**\n * MfaEnrollment can be any subtype of BaseMfaEnrollment, currently only PhoneMfaEnrollment is supported\n */\nexport type MfaEnrollment = PhoneMfaEnrollment;\n\nexport interface StartPhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneEnrollmentInfo: {\n    phoneNumber: string;\n    recaptchaToken: string;\n  };\n  tenantId: string | null;\n}\n\nexport interface StartPhoneMfaEnrollmentResponse {\n  phoneSessionInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: Omit<StartPhoneMfaEnrollmentRequest, 'tenantId'>\n): Promise<StartPhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    StartPhoneMfaEnrollmentRequest,\n    StartPhoneMfaEnrollmentResponse\n  >(auth, HttpMethod.POST, Endpoint.START_PHONE_MFA_ENROLLMENT, {\n    tenantId: auth.tenantId,\n    ...request\n  });\n}\n\nexport interface FinalizePhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  displayName?: string | null;\n  tenantId: string | null;\n}\n\nexport interface FinalizePhoneMfaEnrollmentResponse\n  extends FinalizeMfaResponse {}\n\nexport function finalizeEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: Omit<FinalizePhoneMfaEnrollmentRequest, 'tenantId'>\n): Promise<FinalizePhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaEnrollmentRequest,\n    FinalizePhoneMfaEnrollmentResponse\n  >(auth, HttpMethod.POST, Endpoint.FINALIZE_PHONE_MFA_ENROLLMENT, {\n    tenantId: auth.tenantId,\n    ...request\n  });\n}\n\nexport interface WithdrawMfaRequest {\n  idToken: string;\n  mfaEnrollmentId: string;\n  tenantId: string | null;\n}\n\nexport interface WithdrawMfaResponse extends FinalizeMfaResponse {}\n\nexport function withdrawMfa(\n  auth: AuthInternal,\n  request: Omit<WithdrawMfaRequest, 'tenantId'>\n): Promise<WithdrawMfaResponse> {\n  return _performApiRequest<WithdrawMfaRequest, WithdrawMfaResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.WITHDRAW_MFA,\n    {\n      tenantId: auth.tenantId,\n      ...request\n    }\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Unsubscribe } from '@firebase/util';\nimport { FirebaseAuthInternal } from '@firebase/auth-interop-types';\n\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\ninterface TokenListener {\n  (tok: string | null): unknown;\n}\n\nexport class AuthInterop implements FirebaseAuthInternal {\n  private readonly internalListeners: Map<\n    TokenListener,\n    Unsubscribe\n  > = new Map();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  getUid(): string | null {\n    this.assertAuthConfigured();\n    return this.auth.currentUser?.uid || null;\n  }\n\n  async getToken(\n    forceRefresh?: boolean\n  ): Promise<{ accessToken: string } | null> {\n    this.assertAuthConfigured();\n    await this.auth._initializationPromise;\n    if (!this.auth.currentUser) {\n      return null;\n    }\n\n    const accessToken = await this.auth.currentUser.getIdToken(forceRefresh);\n    return { accessToken };\n  }\n\n  addAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    if (this.internalListeners.has(listener)) {\n      return;\n    }\n\n    const unsubscribe = this.auth.onIdTokenChanged(user => {\n      listener(\n        (user as UserInternal | null)?.stsTokenManager.accessToken || null\n      );\n    });\n    this.internalListeners.set(listener, unsubscribe);\n    this.updateProactiveRefresh();\n  }\n\n  removeAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    const unsubscribe = this.internalListeners.get(listener);\n    if (!unsubscribe) {\n      return;\n    }\n\n    this.internalListeners.delete(listener);\n    unsubscribe();\n    this.updateProactiveRefresh();\n  }\n\n  private assertAuthConfigured(): void {\n    _assert(\n      this.auth._initializationPromise,\n      AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    );\n  }\n\n  private updateProactiveRefresh(): void {\n    if (this.internalListeners.size > 0) {\n      this.auth._startProactiveRefresh();\n    } else {\n      this.auth._stopProactiveRefresh();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Persistence } from '../../model/public_types';\n\nexport const enum PersistenceType {\n  SESSION = 'SESSION',\n  LOCAL = 'LOCAL',\n  NONE = 'NONE'\n}\n\nexport type PersistedBlob = Record<string, unknown>;\n\nexport interface Instantiator<T> {\n  (blob: PersistedBlob): T;\n}\n\nexport type PersistenceValue = PersistedBlob | string;\n\nexport const STORAGE_AVAILABLE_KEY = '__sak';\n\nexport interface StorageEventListener {\n  (value: PersistenceValue | null): void;\n}\n\nexport interface PersistenceInternal extends Persistence {\n  type: PersistenceType;\n  _isAvailable(): Promise<boolean>;\n  _set(key: string, value: PersistenceValue): Promise<void>;\n  _get<T extends PersistenceValue>(key: string): Promise<T | null>;\n  _remove(key: string): Promise<void>;\n  _addListener(key: string, listener: StorageEventListener): void;\n  _removeListener(key: string, listener: StorageEventListener): void;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PersistenceValue,\n  STORAGE_AVAILABLE_KEY,\n  PersistenceType\n} from '../../core/persistence';\n\n// There are two different browser persistence types: local and session.\n// Both have the same implementation but use a different underlying storage\n// object.\n\nexport abstract class BrowserPersistenceClass {\n  protected constructor(\n    protected readonly storage: Storage,\n    readonly type: PersistenceType\n  ) {}\n\n  _isAvailable(this: BrowserPersistenceClass): Promise<boolean> {\n    try {\n      if (!this.storage) {\n        return Promise.resolve(false);\n      }\n      this.storage.setItem(STORAGE_AVAILABLE_KEY, '1');\n      this.storage.removeItem(STORAGE_AVAILABLE_KEY);\n      return Promise.resolve(true);\n    } catch {\n      return Promise.resolve(false);\n    }\n  }\n\n  _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage.setItem(key, JSON.stringify(value));\n    return Promise.resolve();\n  }\n\n  _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const json = this.storage.getItem(key);\n    return Promise.resolve(json ? JSON.parse(json) : null);\n  }\n\n  _remove(key: string): Promise<void> {\n    this.storage.removeItem(key);\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport { getUA } from '@firebase/util';\nimport {\n  _isSafari,\n  _isIOS,\n  _isIframe,\n  _isMobileBrowser,\n  _isIE10\n} from '../../core/util/browser';\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nfunction _iframeCannotSyncWebStorage(): boolean {\n  const ua = getUA();\n  return _isSafari(ua) || _isIOS(ua);\n}\n\n// The polling period in case events are not supported\nexport const _POLLING_INTERVAL_MS = 1000;\n\n// The IE 10 localStorage cross tab synchronization delay in milliseconds\nconst IE10_LOCAL_STORAGE_SYNC_DELAY = 10;\n\nclass BrowserLocalPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence {\n  static type: 'LOCAL' = 'LOCAL';\n\n  constructor() {\n    super(window.localStorage, PersistenceType.LOCAL);\n    this.boundEventHandler = this.onStorageEvent.bind(this);\n  }\n\n  private readonly boundEventHandler: (\n    event: StorageEvent,\n    poll?: boolean\n  ) => void;\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, string | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n\n  // Safari or iOS browser and embedded in an iframe.\n  private readonly safariLocalStorageNotSynced =\n    _iframeCannotSyncWebStorage() && _isIframe();\n  // Whether to use polling instead of depending on window events\n  private readonly fallbackToPolling = _isMobileBrowser();\n\n  private forAllChangedKeys(\n    cb: (key: string, oldValue: string | null, newValue: string | null) => void\n  ): void {\n    // Check all keys with listeners on them.\n    for (const key of Object.keys(this.listeners)) {\n      // Get value from localStorage.\n      const newValue = this.storage.getItem(key);\n      const oldValue = this.localCache[key];\n      // If local map value does not match, trigger listener with storage event.\n      // Differentiate this simulated event from the real storage event.\n      if (newValue !== oldValue) {\n        cb(key, oldValue, newValue);\n      }\n    }\n  }\n\n  private onStorageEvent(event: StorageEvent, poll: boolean = false): void {\n    // Key would be null in some situations, like when localStorage is cleared\n    if (!event.key) {\n      this.forAllChangedKeys(\n        (key: string, _oldValue: string | null, newValue: string | null) => {\n          this.notifyListeners(key, newValue);\n        }\n      );\n      return;\n    }\n\n    const key = event.key;\n\n    // Check the mechanism how this event was detected.\n    // The first event will dictate the mechanism to be used.\n    if (poll) {\n      // Environment detects storage changes via polling.\n      // Remove storage event listener to prevent possible event duplication.\n      this.detachListener();\n    } else {\n      // Environment detects storage changes via storage event listener.\n      // Remove polling listener to prevent possible event duplication.\n      this.stopPolling();\n    }\n\n    // Safari embedded iframe. Storage event will trigger with the delta\n    // changes but no changes will be applied to the iframe localStorage.\n    if (this.safariLocalStorageNotSynced) {\n      // Get current iframe page value.\n      const storedValue = this.storage.getItem(key);\n      // Value not synchronized, synchronize manually.\n      if (event.newValue !== storedValue) {\n        if (event.newValue !== null) {\n          // Value changed from current value.\n          this.storage.setItem(key, event.newValue);\n        } else {\n          // Current value deleted.\n          this.storage.removeItem(key);\n        }\n      } else if (this.localCache[key] === event.newValue && !poll) {\n        // Already detected and processed, do not trigger listeners again.\n        return;\n      }\n    }\n\n    const triggerListeners = (): void => {\n      // Keep local map up to date in case storage event is triggered before\n      // poll.\n      const storedValue = this.storage.getItem(key);\n      if (!poll && this.localCache[key] === storedValue) {\n        // Real storage event which has already been detected, do nothing.\n        // This seems to trigger in some IE browsers for some reason.\n        return;\n      }\n      this.notifyListeners(key, storedValue);\n    };\n\n    const storedValue = this.storage.getItem(key);\n    if (\n      _isIE10() &&\n      storedValue !== event.newValue &&\n      event.newValue !== event.oldValue\n    ) {\n      // IE 10 has this weird bug where a storage event would trigger with the\n      // correct key, oldValue and newValue but localStorage.getItem(key) does\n      // not yield the updated value until a few milliseconds. This ensures\n      // this recovers from that situation.\n      setTimeout(triggerListeners, IE10_LOCAL_STORAGE_SYNC_DELAY);\n    } else {\n      triggerListeners();\n    }\n  }\n\n  private notifyListeners(key: string, value: string | null): void {\n    this.localCache[key] = value;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(value ? JSON.parse(value) : value);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(() => {\n      this.forAllChangedKeys(\n        (key: string, oldValue: string | null, newValue: string | null) => {\n          this.onStorageEvent(\n            new StorageEvent('storage', {\n              key,\n              oldValue,\n              newValue\n            }),\n            /* poll */ true\n          );\n        }\n      );\n    }, _POLLING_INTERVAL_MS);\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  private attachListener(): void {\n    window.addEventListener('storage', this.boundEventHandler);\n  }\n\n  private detachListener(): void {\n    window.removeEventListener('storage', this.boundEventHandler);\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      // Whether browser can detect storage event when it had already been pushed to the background.\n      // This may happen in some mobile browsers. A localStorage change in the foreground window\n      // will not be detected in the background window via the storage event.\n      // This was detected in iOS 7.x mobile browsers\n      if (this.fallbackToPolling) {\n        this.startPolling();\n      } else {\n        this.attachListener();\n      }\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      this.localCache[key] = this.storage.getItem(key);\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.detachListener();\n      this.stopPolling();\n    }\n  }\n\n  // Update local cache on base operations:\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    await super._set(key, value);\n    this.localCache[key] = JSON.stringify(value);\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = await super._get<T>(key);\n    this.localCache[key] = JSON.stringify(value);\n    return value;\n  }\n\n  async _remove(key: string): Promise<void> {\n    await super._remove(key);\n    delete this.localCache[key];\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type 'LOCAL' using `localStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserLocalPersistence: Persistence = BrowserLocalPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ReceiverHandler,\n  _EventType,\n  _ReceiverResponse,\n  SenderMessageEvent,\n  _Status,\n  _SenderRequest\n} from './index';\nimport { _allSettled } from './promise';\n\n/**\n * Interface class for receiving messages.\n *\n */\nexport class Receiver {\n  private static readonly receivers: Receiver[] = [];\n  private readonly boundEventHandler: EventListener;\n\n  private readonly handlersMap: {\n    // Typescript doesn't have existential types :(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [eventType: string]: Set<ReceiverHandler<any, any>>;\n  } = {};\n\n  constructor(private readonly eventTarget: EventTarget) {\n    this.boundEventHandler = this.handleEvent.bind(this);\n  }\n\n  /**\n   * Obtain an instance of a Receiver for a given event target, if none exists it will be created.\n   *\n   * @param eventTarget - An event target (such as window or self) through which the underlying\n   * messages will be received.\n   */\n  static _getInstance(eventTarget: EventTarget): Receiver {\n    // The results are stored in an array since objects can't be keys for other\n    // objects. In addition, setting a unique property on an event target as a\n    // hash map key may not be allowed due to CORS restrictions.\n    const existingInstance = this.receivers.find(receiver =>\n      receiver.isListeningto(eventTarget)\n    );\n    if (existingInstance) {\n      return existingInstance;\n    }\n    const newInstance = new Receiver(eventTarget);\n    this.receivers.push(newInstance);\n    return newInstance;\n  }\n\n  private isListeningto(eventTarget: EventTarget): boolean {\n    return this.eventTarget === eventTarget;\n  }\n\n  /**\n   * Fans out a MessageEvent to the appropriate listeners.\n   *\n   * @remarks\n   * Sends an {@link Status.ACK} upon receipt and a {@link Status.DONE} once all handlers have\n   * finished processing.\n   *\n   * @param event - The MessageEvent.\n   *\n   */\n  private async handleEvent<\n    T extends _ReceiverResponse,\n    S extends _SenderRequest\n  >(event: Event): Promise<void> {\n    const messageEvent = event as MessageEvent<SenderMessageEvent<S>>;\n    const { eventId, eventType, data } = messageEvent.data;\n\n    const handlers: Set<ReceiverHandler<T, S>> | undefined = this.handlersMap[\n      eventType\n    ];\n    if (!handlers?.size) {\n      return;\n    }\n\n    messageEvent.ports[0].postMessage({\n      status: _Status.ACK,\n      eventId,\n      eventType\n    });\n\n    const promises = Array.from(handlers).map(async handler =>\n      handler(messageEvent.origin, data)\n    );\n    const response = await _allSettled(promises);\n    messageEvent.ports[0].postMessage({\n      status: _Status.DONE,\n      eventId,\n      eventType,\n      response\n    });\n  }\n\n  /**\n   * Subscribe an event handler for a particular event.\n   *\n   * @param eventType - Event name to subscribe to.\n   * @param eventHandler - The event handler which should receive the events.\n   *\n   */\n  _subscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler: ReceiverHandler<T, S>\n  ): void {\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.addEventListener('message', this.boundEventHandler);\n    }\n\n    if (!this.handlersMap[eventType]) {\n      this.handlersMap[eventType] = new Set();\n    }\n\n    this.handlersMap[eventType].add(eventHandler);\n  }\n\n  /**\n   * Unsubscribe an event handler from a particular event.\n   *\n   * @param eventType - Event name to unsubscribe from.\n   * @param eventHandler - Optinoal event handler, if none provided, unsubscribe all handlers on this event.\n   *\n   */\n  _unsubscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler?: ReceiverHandler<T, S>\n  ): void {\n    if (this.handlersMap[eventType] && eventHandler) {\n      this.handlersMap[eventType].delete(eventHandler);\n    }\n    if (!eventHandler || this.handlersMap[eventType].size === 0) {\n      delete this.handlersMap[eventType];\n    }\n\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.removeEventListener('message', this.boundEventHandler);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** TODO: remove this once tslib has a polyfill for Promise.allSettled */\ninterface PromiseFulfilledResult<T> {\n  fulfilled: true;\n  value: T;\n}\n\ninterface PromiseRejectedResult {\n  fulfilled: false;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  reason: any;\n}\n\nexport type PromiseSettledResult<T> =\n  | PromiseFulfilledResult<T>\n  | PromiseRejectedResult;\n\n/**\n * Shim for Promise.allSettled, note the slightly different format of `fulfilled` vs `status`.\n *\n * @param promises - Array of promises to wait on.\n */\nexport function _allSettled<T>(\n  promises: Array<Promise<T>>\n): Promise<Array<PromiseSettledResult<T>>> {\n  return Promise.all(\n    promises.map(async promise => {\n      try {\n        const value = await promise;\n        return {\n          fulfilled: true,\n          value\n        } as PromiseFulfilledResult<T>;\n      } catch (reason) {\n        return {\n          fulfilled: false,\n          reason\n        } as PromiseRejectedResult;\n      }\n    })\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _SenderRequest,\n  _EventType,\n  ReceiverMessageEvent,\n  _MessageError,\n  SenderMessageEvent,\n  _Status,\n  _ReceiverMessageResponse,\n  _ReceiverResponse,\n  _TimeoutDuration\n} from './index';\n\ninterface MessageHandler {\n  messageChannel: MessageChannel;\n  onMessage: EventListenerOrEventListenerObject;\n}\n\nfunction generateEventId(prefix = '', digits = 20): string {\n  return `${prefix}${Math.floor(Math.random() * Math.pow(10, digits))}`;\n}\n\n/**\n * Interface for sending messages and waiting for a completion response.\n *\n */\nexport class Sender {\n  private readonly handlers = new Set<MessageHandler>();\n\n  constructor(private readonly target: ServiceWorker) {}\n\n  /**\n   * Unsubscribe the handler and remove it from our tracking Set.\n   *\n   * @param handler - The handler to unsubscribe.\n   */\n  private removeMessageHandler(handler: MessageHandler): void {\n    if (handler.messageChannel) {\n      handler.messageChannel.port1.removeEventListener(\n        'message',\n        handler.onMessage\n      );\n      handler.messageChannel.port1.close();\n    }\n    this.handlers.delete(handler);\n  }\n\n  /**\n   * Send a message to the Receiver located at {@link target}.\n   *\n   * @remarks\n   * We'll first wait a bit for an ACK , if we get one we will wait significantly longer until the\n   * receiver has had a chance to fully process the event.\n   *\n   * @param eventType - Type of event to send.\n   * @param data - The payload of the event.\n   * @param timeout - Timeout for waiting on an ACK from the receiver.\n   *\n   * @returns An array of settled promises from all the handlers that were listening on the receiver.\n   */\n  async _send<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    data: S,\n    timeout = _TimeoutDuration.ACK\n  ): Promise<_ReceiverMessageResponse<T>> {\n    const messageChannel =\n      typeof MessageChannel !== 'undefined' ? new MessageChannel() : null;\n    if (!messageChannel) {\n      throw new Error(_MessageError.CONNECTION_UNAVAILABLE);\n    }\n    // Node timers and browser timers return fundamentally different types.\n    // We don't actually care what the value is but TS won't accept unknown and\n    // we can't cast properly in both environments.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let completionTimer: any;\n    let handler: MessageHandler;\n    return new Promise<_ReceiverMessageResponse<T>>((resolve, reject) => {\n      const eventId = generateEventId();\n      messageChannel.port1.start();\n      const ackTimer = setTimeout(() => {\n        reject(new Error(_MessageError.UNSUPPORTED_EVENT));\n      }, timeout);\n      handler = {\n        messageChannel,\n        onMessage(event: Event): void {\n          const messageEvent = event as MessageEvent<ReceiverMessageEvent<T>>;\n          if (messageEvent.data.eventId !== eventId) {\n            return;\n          }\n          switch (messageEvent.data.status) {\n            case _Status.ACK:\n              // The receiver should ACK first.\n              clearTimeout(ackTimer);\n              completionTimer = setTimeout(() => {\n                reject(new Error(_MessageError.TIMEOUT));\n              }, _TimeoutDuration.COMPLETION);\n              break;\n            case _Status.DONE:\n              // Once the receiver's handlers are finished we will get the results.\n              clearTimeout(completionTimer);\n              resolve(messageEvent.data.response);\n              break;\n            default:\n              clearTimeout(ackTimer);\n              clearTimeout(completionTimer);\n              reject(new Error(_MessageError.INVALID_RESPONSE));\n              break;\n          }\n        }\n      };\n      this.handlers.add(handler);\n      messageChannel.port1.addEventListener('message', handler.onMessage);\n      this.target.postMessage(\n        {\n          eventType,\n          eventId,\n          data\n        } as SenderMessageEvent<S>,\n        [messageChannel.port2]\n      );\n    }).finally(() => {\n      if (handler) {\n        this.removeMessageHandler(handler);\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Recaptcha } from './recaptcha/recaptcha';\n\n/**\n * A specialized window type that melds the normal window type plus the\n * various bits we need. The three different blocks that are &'d together\n * cant be defined in the same block together.\n */\nexport type AuthWindow = {\n  // Standard window types\n  [T in keyof Window]: Window[T];\n} & {\n  // Any known / named properties we want to add\n  grecaptcha?: Recaptcha;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  ___jsl?: Record<string, any>;\n  gapi?: typeof gapi;\n} & {\n  // A final catch-all for callbacks (which will have random names) that\n  // we will stick on the window.\n  [callback: string]: (...args: unknown[]) => void;\n};\n\n/**\n * Lazy accessor for window, since the compat layer won't tree shake this out,\n * we need to make sure not to mess with window unless we have to\n */\nexport function _window(): AuthWindow {\n  return (window as unknown) as AuthWindow;\n}\n\nexport function _setWindowLocation(url: string): void {\n  _window().location.href = url;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _window } from '../auth_window';\n\nexport function _isWorker(): boolean {\n  return (\n    typeof _window()['WorkerGlobalScope'] !== 'undefined' &&\n    typeof _window()['importScripts'] === 'function'\n  );\n}\n\nexport async function _getActiveServiceWorker(): Promise<ServiceWorker | null> {\n  if (!navigator?.serviceWorker) {\n    return null;\n  }\n  try {\n    const registration = await navigator.serviceWorker.ready;\n    return registration.active;\n  } catch {\n    return null;\n  }\n}\n\nexport function _getServiceWorkerController(): ServiceWorker | null {\n  return navigator?.serviceWorker?.controller || null;\n}\n\nexport function _getWorkerGlobalScope(): ServiceWorker | null {\n  return _isWorker() ? ((self as unknown) as ServiceWorker) : null;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\nimport {\n  PersistedBlob,\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener,\n  STORAGE_AVAILABLE_KEY\n} from '../../core/persistence/';\nimport {\n  _EventType,\n  _PingResponse,\n  KeyChangedResponse,\n  KeyChangedRequest,\n  PingRequest,\n  _TimeoutDuration\n} from '../messagechannel/index';\nimport { Receiver } from '../messagechannel/receiver';\nimport { Sender } from '../messagechannel/sender';\nimport {\n  _isWorker,\n  _getActiveServiceWorker,\n  _getServiceWorkerController,\n  _getWorkerGlobalScope\n} from '../util/worker';\n\nexport const DB_NAME = 'firebaseLocalStorageDb';\nconst DB_VERSION = 1;\nconst DB_OBJECTSTORE_NAME = 'firebaseLocalStorage';\nconst DB_DATA_KEYPATH = 'fbase_key';\n\ninterface DBObject {\n  [DB_DATA_KEYPATH]: string;\n  value: PersistedBlob;\n}\n\n/**\n * Promise wrapper for IDBRequest\n *\n * Unfortunately we can't cleanly extend Promise<T> since promises are not callable in ES6\n *\n */\nclass DBPromise<T> {\n  constructor(private readonly request: IDBRequest) {}\n\n  toPromise(): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      this.request.addEventListener('success', () => {\n        resolve(this.request.result);\n      });\n      this.request.addEventListener('error', () => {\n        reject(this.request.error);\n      });\n    });\n  }\n}\n\nfunction getObjectStore(db: IDBDatabase, isReadWrite: boolean): IDBObjectStore {\n  return db\n    .transaction([DB_OBJECTSTORE_NAME], isReadWrite ? 'readwrite' : 'readonly')\n    .objectStore(DB_OBJECTSTORE_NAME);\n}\n\nexport async function _clearDatabase(db: IDBDatabase): Promise<void> {\n  const objectStore = getObjectStore(db, true);\n  return new DBPromise<void>(objectStore.clear()).toPromise();\n}\n\nexport function _deleteDatabase(): Promise<void> {\n  const request = indexedDB.deleteDatabase(DB_NAME);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport function _openDatabase(): Promise<IDBDatabase> {\n  const request = indexedDB.open(DB_NAME, DB_VERSION);\n  return new Promise((resolve, reject) => {\n    request.addEventListener('error', () => {\n      reject(request.error);\n    });\n\n    request.addEventListener('upgradeneeded', () => {\n      const db = request.result;\n\n      try {\n        db.createObjectStore(DB_OBJECTSTORE_NAME, { keyPath: DB_DATA_KEYPATH });\n      } catch (e) {\n        reject(e);\n      }\n    });\n\n    request.addEventListener('success', async () => {\n      const db: IDBDatabase = request.result;\n      // Strange bug that occurs in Firefox when multiple tabs are opened at the\n      // same time. The only way to recover seems to be deleting the database\n      // and re-initializing it.\n      // https://github.com/firebase/firebase-js-sdk/issues/634\n\n      if (!db.objectStoreNames.contains(DB_OBJECTSTORE_NAME)) {\n        await _deleteDatabase();\n        return _openDatabase();\n      } else {\n        resolve(db);\n      }\n    });\n  });\n}\n\nexport async function _putObject(\n  db: IDBDatabase,\n  key: string,\n  value: PersistenceValue | string\n): Promise<void> {\n  const request = getObjectStore(db, true).put({\n    [DB_DATA_KEYPATH]: key,\n    value\n  });\n  return new DBPromise<void>(request).toPromise();\n}\n\nasync function getObject(\n  db: IDBDatabase,\n  key: string\n): Promise<PersistedBlob | null> {\n  const request = getObjectStore(db, false).get(key);\n  const data = await new DBPromise<DBObject | undefined>(request).toPromise();\n  return data === undefined ? null : data.value;\n}\n\nexport function _deleteObject(db: IDBDatabase, key: string): Promise<void> {\n  const request = getObjectStore(db, true).delete(key);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport const _POLLING_INTERVAL_MS = 800;\nexport const _TRANSACTION_RETRY_COUNT = 3;\n\nclass IndexedDBLocalPersistence implements InternalPersistence {\n  static type: 'LOCAL' = 'LOCAL';\n\n  type = PersistenceType.LOCAL;\n  db?: IDBDatabase;\n\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, PersistenceValue | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n  private pendingWrites = 0;\n\n  private receiver: Receiver | null = null;\n  private sender: Sender | null = null;\n  private serviceWorkerReceiverAvailable = false;\n  private activeServiceWorker: ServiceWorker | null = null;\n  // Visible for testing only\n  readonly _workerInitializationPromise: Promise<void>;\n\n  constructor() {\n    // Fire & forget the service worker registration as it may never resolve\n    this._workerInitializationPromise = this.initializeServiceWorkerMessaging().then(\n      () => {},\n      () => {}\n    );\n  }\n\n  async _openDb(): Promise<IDBDatabase> {\n    if (this.db) {\n      return this.db;\n    }\n    this.db = await _openDatabase();\n    return this.db;\n  }\n\n  async _withRetries<T>(op: (db: IDBDatabase) => Promise<T>): Promise<T> {\n    let numAttempts = 0;\n\n    while (true) {\n      try {\n        const db = await this._openDb();\n        return await op(db);\n      } catch (e) {\n        if (numAttempts++ > _TRANSACTION_RETRY_COUNT) {\n          throw e;\n        }\n        if (this.db) {\n          this.db.close();\n          this.db = undefined;\n        }\n        // TODO: consider adding exponential backoff\n      }\n    }\n  }\n\n  /**\n   * IndexedDB events do not propagate from the main window to the worker context.  We rely on a\n   * postMessage interface to send these events to the worker ourselves.\n   */\n  private async initializeServiceWorkerMessaging(): Promise<void> {\n    return _isWorker() ? this.initializeReceiver() : this.initializeSender();\n  }\n\n  /**\n   * As the worker we should listen to events from the main window.\n   */\n  private async initializeReceiver(): Promise<void> {\n    this.receiver = Receiver._getInstance(_getWorkerGlobalScope()!);\n    // Refresh from persistence if we receive a KeyChanged message.\n    this.receiver._subscribe(\n      _EventType.KEY_CHANGED,\n      async (_origin: string, data: KeyChangedRequest) => {\n        const keys = await this._poll();\n        return {\n          keyProcessed: keys.includes(data.key)\n        };\n      }\n    );\n    // Let the sender know that we are listening so they give us more timeout.\n    this.receiver._subscribe(\n      _EventType.PING,\n      async (_origin: string, _data: PingRequest) => {\n        return [_EventType.KEY_CHANGED];\n      }\n    );\n  }\n\n  /**\n   * As the main window, we should let the worker know when keys change (set and remove).\n   *\n   * @remarks\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/ready | ServiceWorkerContainer.ready}\n   * may not resolve.\n   */\n  private async initializeSender(): Promise<void> {\n    // Check to see if there's an active service worker.\n    this.activeServiceWorker = await _getActiveServiceWorker();\n    if (!this.activeServiceWorker) {\n      return;\n    }\n    this.sender = new Sender(this.activeServiceWorker);\n    // Ping the service worker to check what events they can handle.\n    const results = await this.sender._send<_PingResponse, PingRequest>(\n      _EventType.PING,\n      {},\n      _TimeoutDuration.LONG_ACK\n    );\n    if (!results) {\n      return;\n    }\n    if (\n      results[0]?.fulfilled &&\n      results[0]?.value.includes(_EventType.KEY_CHANGED)\n    ) {\n      this.serviceWorkerReceiverAvailable = true;\n    }\n  }\n\n  /**\n   * Let the worker know about a changed key, the exact key doesn't technically matter since the\n   * worker will just trigger a full sync anyway.\n   *\n   * @remarks\n   * For now, we only support one service worker per page.\n   *\n   * @param key - Storage key which changed.\n   */\n  private async notifyServiceWorker(key: string): Promise<void> {\n    if (\n      !this.sender ||\n      !this.activeServiceWorker ||\n      _getServiceWorkerController() !== this.activeServiceWorker\n    ) {\n      return;\n    }\n    try {\n      await this.sender._send<KeyChangedResponse, KeyChangedRequest>(\n        _EventType.KEY_CHANGED,\n        { key },\n        // Use long timeout if receiver has previously responded to a ping from us.\n        this.serviceWorkerReceiverAvailable\n          ? _TimeoutDuration.LONG_ACK\n          : _TimeoutDuration.ACK\n      );\n    } catch {\n      // This is a best effort approach. Ignore errors.\n    }\n  }\n\n  async _isAvailable(): Promise<boolean> {\n    try {\n      if (!indexedDB) {\n        return false;\n      }\n      const db = await _openDatabase();\n      await _putObject(db, STORAGE_AVAILABLE_KEY, '1');\n      await _deleteObject(db, STORAGE_AVAILABLE_KEY);\n      return true;\n    } catch {}\n    return false;\n  }\n\n  private async _withPendingWrite(write: () => Promise<void>): Promise<void> {\n    this.pendingWrites++;\n    try {\n      await write();\n    } finally {\n      this.pendingWrites--;\n    }\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _putObject(db, key, value));\n      this.localCache[key] = value;\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const obj = (await this._withRetries((db: IDBDatabase) =>\n      getObject(db, key)\n    )) as T;\n    this.localCache[key] = obj;\n    return obj;\n  }\n\n  async _remove(key: string): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _deleteObject(db, key));\n      delete this.localCache[key];\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  private async _poll(): Promise<string[]> {\n    // TODO: check if we need to fallback if getAll is not supported\n    const result = await this._withRetries((db: IDBDatabase) => {\n      const getAllRequest = getObjectStore(db, false).getAll();\n      return new DBPromise<DBObject[] | null>(getAllRequest).toPromise();\n    });\n\n    if (!result) {\n      return [];\n    }\n\n    // If we have pending writes in progress abort, we'll get picked up on the next poll\n    if (this.pendingWrites !== 0) {\n      return [];\n    }\n\n    const keys = [];\n    const keysInResult = new Set();\n    for (const { fbase_key: key, value } of result) {\n      keysInResult.add(key);\n      if (JSON.stringify(this.localCache[key]) !== JSON.stringify(value)) {\n        this.notifyListeners(key, value as PersistenceValue);\n        keys.push(key);\n      }\n    }\n    for (const localKey of Object.keys(this.localCache)) {\n      if (this.localCache[localKey] && !keysInResult.has(localKey)) {\n        // Deleted\n        this.notifyListeners(localKey, null);\n        keys.push(localKey);\n      }\n    }\n    return keys;\n  }\n\n  private notifyListeners(\n    key: string,\n    newValue: PersistenceValue | null\n  ): void {\n    this.localCache[key] = newValue;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(newValue);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(\n      async () => this._poll(),\n      _POLLING_INTERVAL_MS\n    );\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      this.startPolling();\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      void this._get(key); // This can happen in the background async and we can return immediately.\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.stopPolling();\n    }\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type 'LOCAL' using `indexedDB`\n * for the underlying storage.\n *\n * @public\n */\nexport const indexedDBLocalPersistence: Persistence = IndexedDBLocalPersistence;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager\n} from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { AuthInternal } from '../../model/auth';\nimport { _createError } from '../util/assert';\n\n// The amount of time to store the UIDs of seen events; this is\n// set to 10 min by default\nconst EVENT_DUPLICATION_CACHE_DURATION_MS = 10 * 60 * 1000;\n\nexport class AuthEventManager implements EventManager {\n  private readonly cachedEventUids: Set<string> = new Set();\n  private readonly consumers: Set<AuthEventConsumer> = new Set();\n  protected queuedRedirectEvent: AuthEvent | null = null;\n  protected hasHandledPotentialRedirect = false;\n  private lastProcessedEventTime = Date.now();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  registerConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.add(authEventConsumer);\n\n    if (\n      this.queuedRedirectEvent &&\n      this.isEventForConsumer(this.queuedRedirectEvent, authEventConsumer)\n    ) {\n      this.sendToConsumer(this.queuedRedirectEvent, authEventConsumer);\n      this.saveEventToCache(this.queuedRedirectEvent);\n      this.queuedRedirectEvent = null;\n    }\n  }\n\n  unregisterConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.delete(authEventConsumer);\n  }\n\n  onEvent(event: AuthEvent): boolean {\n    // Check if the event has already been handled\n    if (this.hasEventBeenHandled(event)) {\n      return false;\n    }\n\n    let handled = false;\n    this.consumers.forEach(consumer => {\n      if (this.isEventForConsumer(event, consumer)) {\n        handled = true;\n        this.sendToConsumer(event, consumer);\n        this.saveEventToCache(event);\n      }\n    });\n\n    if (this.hasHandledPotentialRedirect || !isRedirectEvent(event)) {\n      // If we've already seen a redirect before, or this is a popup event,\n      // bail now\n      return handled;\n    }\n\n    this.hasHandledPotentialRedirect = true;\n\n    // If the redirect wasn't handled, hang on to it\n    if (!handled) {\n      this.queuedRedirectEvent = event;\n      handled = true;\n    }\n\n    return handled;\n  }\n\n  private sendToConsumer(event: AuthEvent, consumer: AuthEventConsumer): void {\n    if (event.error && !isNullRedirectEvent(event)) {\n      const code =\n        (event.error.code?.split('auth/')[1] as AuthErrorCode) ||\n        AuthErrorCode.INTERNAL_ERROR;\n      consumer.onError(_createError(this.auth, code));\n    } else {\n      consumer.onAuthEvent(event);\n    }\n  }\n\n  private isEventForConsumer(\n    event: AuthEvent,\n    consumer: AuthEventConsumer\n  ): boolean {\n    const eventIdMatches =\n      consumer.eventId === null ||\n      (!!event.eventId && event.eventId === consumer.eventId);\n    return consumer.filter.includes(event.type) && eventIdMatches;\n  }\n\n  private hasEventBeenHandled(event: AuthEvent): boolean {\n    if (\n      Date.now() - this.lastProcessedEventTime >=\n      EVENT_DUPLICATION_CACHE_DURATION_MS\n    ) {\n      this.cachedEventUids.clear();\n    }\n\n    return this.cachedEventUids.has(eventUid(event));\n  }\n\n  private saveEventToCache(event: AuthEvent): void {\n    this.cachedEventUids.add(eventUid(event));\n    this.lastProcessedEventTime = Date.now();\n  }\n}\n\nfunction eventUid(e: AuthEvent): string {\n  return [e.type, e.eventId, e.sessionId, e.tenantId].filter(v => v).join('-');\n}\n\nfunction isNullRedirectEvent({ type, error }: AuthEvent): boolean {\n  return (\n    type === AuthEventType.UNKNOWN &&\n    error?.code === `auth/${AuthErrorCode.NO_AUTH_EVENT}`\n  );\n}\n\nfunction isRedirectEvent(event: AuthEvent): boolean {\n  switch (event.type) {\n    case AuthEventType.SIGN_IN_VIA_REDIRECT:\n    case AuthEventType.LINK_VIA_REDIRECT:\n    case AuthEventType.REAUTH_VIA_REDIRECT:\n      return true;\n    case AuthEventType.UNKNOWN:\n      return isNullRedirectEvent(event);\n    default:\n      return false;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _generateEventId(prefix?: string): string {\n  return `${prefix ? prefix : ''}${Math.floor(Math.random() * 1000000000)}`;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProjectConfig } from '../../api/project_config/get_project_config';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from './assert';\nimport { _getCurrentUrl } from './location';\n\nconst IP_ADDRESS_REGEX = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\nconst HTTP_REGEX = /^https?/;\n\nexport async function _validateOrigin(auth: AuthInternal): Promise<void> {\n  // Skip origin validation if we are in an emulated environment\n  if (auth.config.emulator) {\n    return;\n  }\n\n  const { authorizedDomains } = await _getProjectConfig(auth);\n\n  for (const domain of authorizedDomains) {\n    try {\n      if (matchDomain(domain)) {\n        return;\n      }\n    } catch {\n      // Do nothing if there's a URL error; just continue searching\n    }\n  }\n\n  // In the old SDK, this error also provides helpful messages.\n  _fail(auth, AuthErrorCode.INVALID_ORIGIN);\n}\n\nfunction matchDomain(expected: string): boolean {\n  const currentUrl = _getCurrentUrl();\n  const { protocol, hostname } = new URL(currentUrl);\n  if (expected.startsWith('chrome-extension://')) {\n    const ceUrl = new URL(expected);\n\n    if (ceUrl.hostname === '' && hostname === '') {\n      // For some reason we're not parsing chrome URLs properly\n      return (\n        protocol === 'chrome-extension:' &&\n        expected.replace('chrome-extension://', '') ===\n          currentUrl.replace('chrome-extension://', '')\n      );\n    }\n\n    return protocol === 'chrome-extension:' && ceUrl.hostname === hostname;\n  }\n\n  if (!HTTP_REGEX.test(protocol)) {\n    return false;\n  }\n\n  if (IP_ADDRESS_REGEX.test(expected)) {\n    // The domain has to be exactly equal to the pattern, as an IP domain will\n    // only contain the IP, no extra character.\n    return hostname === expected;\n  }\n\n  // Dots in pattern should be escaped.\n  const escapedDomainPattern = expected.replace(/\\./g, '\\\\.');\n  // Non ip address domains.\n  // domain.com = *.domain.com OR domain.com\n  const re = new RegExp(\n    '^(.+\\\\.' + escapedDomainPattern + '|' + escapedDomainPattern + ')$',\n    'i'\n  );\n  return re.test(hostname);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _performApiRequest, Endpoint, HttpMethod } from '../index';\nimport { Auth } from '../../model/public_types';\n\nexport interface GetProjectConfigRequest {}\n\nexport interface GetProjectConfigResponse {\n  authorizedDomains: string[];\n}\n\nexport async function _getProjectConfig(\n  auth: Auth\n): Promise<GetProjectConfigResponse> {\n  return _performApiRequest<GetProjectConfigRequest, GetProjectConfigResponse>(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_PROJECT_CONFIG,\n    {}\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction getScriptParentElement(): HTMLDocument | HTMLHeadElement {\n  return document.getElementsByTagName('head')?.[0] ?? document;\n}\n\nexport function _loadJS(url: string): Promise<Event> {\n  // TODO: consider adding timeout support & cancellation\n  return new Promise((resolve, reject) => {\n    const el = document.createElement('script');\n    el.setAttribute('src', url);\n    el.onload = resolve;\n    el.onerror = reject;\n    el.type = 'text/javascript';\n    el.charset = 'UTF-8';\n    getScriptParentElement().appendChild(el);\n  });\n}\n\nexport function _generateCallbackName(prefix: string): string {\n  return `__${prefix}${Math.floor(Math.random() * 1000000)}`;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as js from '../load_js';\n\nconst NETWORK_TIMEOUT = new Delay(30000, 60000);\n\n/**\n * Reset unlaoded GApi modules. If gapi.load fails due to a network error,\n * it will stop working after a retrial. This is a hack to fix this issue.\n */\nfunction resetUnloadedGapiModules(): void {\n  // Clear last failed gapi.load state to force next gapi.load to first\n  // load the failed gapi.iframes module.\n  // Get gapix.beacon context.\n  const beacon = _window().___jsl;\n  // Get current hint.\n  if (beacon?.H) {\n    // Get gapi hint.\n    for (const hint of Object.keys(beacon.H)) {\n      // Requested modules.\n      beacon.H[hint].r = beacon.H[hint].r || [];\n      // Loaded modules.\n      beacon.H[hint].L = beacon.H[hint].L || [];\n      // Set requested modules to a copy of the loaded modules.\n      beacon.H[hint].r = [...beacon.H[hint].L];\n      // Clear pending callbacks.\n      if (beacon.CP) {\n        for (let i = 0; i < beacon.CP.length; i++) {\n          // Remove all failed pending callbacks.\n          beacon.CP[i] = null;\n        }\n      }\n    }\n  }\n}\n\nfunction loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  return new Promise<gapi.iframes.Context>((resolve, reject) => {\n    // Function to run when gapi.load is ready.\n    function loadGapiIframe(): void {\n      // The developer may have tried to previously run gapi.load and failed.\n      // Run this to fix that.\n      resetUnloadedGapiModules();\n      gapi.load('gapi.iframes', {\n        callback: () => {\n          resolve(gapi.iframes.getContext());\n        },\n        ontimeout: () => {\n          // The above reset may be sufficient, but having this reset after\n          // failure ensures that if the developer calls gapi.load after the\n          // connection is re-established and before another attempt to embed\n          // the iframe, it would work and would not be broken because of our\n          // failed attempt.\n          // Timeout when gapi.iframes.Iframe not loaded.\n          resetUnloadedGapiModules();\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        },\n        timeout: NETWORK_TIMEOUT.get()\n      });\n    }\n\n    if (_window().gapi?.iframes?.Iframe) {\n      // If gapi.iframes.Iframe available, resolve.\n      resolve(gapi.iframes.getContext());\n    } else if (!!_window().gapi?.load) {\n      // Gapi loader ready, load gapi.iframes.\n      loadGapiIframe();\n    } else {\n      // Create a new iframe callback when this is called so as not to overwrite\n      // any previous defined callback. This happens if this method is called\n      // multiple times in parallel and could result in the later callback\n      // overwriting the previous one. This would end up with a iframe\n      // timeout.\n      const cbName = js._generateCallbackName('iframefcb');\n      // GApi loader not available, dynamically load platform.js.\n      _window()[cbName] = () => {\n        // GApi loader should be ready.\n        if (!!gapi.load) {\n          loadGapiIframe();\n        } else {\n          // Gapi loader failed, throw error.\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        }\n      };\n      // Load GApi loader.\n      return js._loadJS(`https://apis.google.com/js/api.js?onload=${cbName}`);\n    }\n  }).catch(error => {\n    // Reset cached promise to allow for retrial.\n    cachedGApiLoader = null;\n    throw error;\n  });\n}\n\nlet cachedGApiLoader: Promise<gapi.iframes.Context> | null = null;\nexport function _loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  cachedGApiLoader = cachedGApiLoader || loadGapi(auth);\n  return cachedGApiLoader;\n}\n\nexport function _resetLoader(): void {\n  cachedGApiLoader = null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app-exp';\nimport { querystring } from '@firebase/util';\nimport { DefaultConfig } from '../../../internal';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _emulatorUrl } from '../../core/util/emulator';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as gapiLoader from './gapi';\n\nconst PING_TIMEOUT = new Delay(5000, 15000);\nconst IFRAME_PATH = '__/auth/iframe';\nconst EMULATED_IFRAME_PATH = 'emulator/auth/iframe';\n\nconst IFRAME_ATTRIBUTES = {\n  style: {\n    position: 'absolute',\n    top: '-100px',\n    width: '1px',\n    height: '1px'\n  }\n};\n\n// Map from apiHost to endpoint ID for passing into iframe. In current SDK, apiHost can be set to\n// anything (not from a list of endpoints with IDs as in legacy), so this is the closest we can get.\nconst EID_FROM_APIHOST = new Map([\n  [DefaultConfig.API_HOST, 'p'], // production\n  ['staging-identitytoolkit.sandbox.googleapis.com', 's'], // staging\n  ['test-identitytoolkit.sandbox.googleapis.com', 't'] // test\n]);\n\nfunction getIframeUrl(auth: AuthInternal): string {\n  const config = auth.config;\n  _assert(config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  const url = config.emulator\n    ? _emulatorUrl(config, EMULATED_IFRAME_PATH)\n    : `https://${auth.config.authDomain}/${IFRAME_PATH}`;\n\n  const params: Record<string, string> = {\n    apiKey: config.apiKey,\n    appName: auth.name,\n    v: SDK_VERSION\n  };\n  const eid = EID_FROM_APIHOST.get(auth.config.apiHost);\n  if (eid) {\n    params.eid = eid;\n  }\n  const frameworks = auth._getFrameworks();\n  if (frameworks.length) {\n    params.fw = frameworks.join(',');\n  }\n  return `${url}?${querystring(params).slice(1)}`;\n}\n\nexport async function _openIframe(\n  auth: AuthInternal\n): Promise<gapi.iframes.Iframe> {\n  const context = await gapiLoader._loadGapi(auth);\n  const gapi = _window().gapi;\n  _assert(gapi, auth, AuthErrorCode.INTERNAL_ERROR);\n  return context.open(\n    {\n      where: document.body,\n      url: getIframeUrl(auth),\n      messageHandlersFilter: gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER,\n      attributes: IFRAME_ATTRIBUTES,\n      dontclear: true\n    },\n    (iframe: gapi.iframes.Iframe) =>\n      new Promise(async (resolve, reject) => {\n        await iframe.restyle({\n          // Prevent iframe from closing on mouse out.\n          setHideOnLeave: false\n        });\n\n        const networkError = _createError(\n          auth,\n          AuthErrorCode.NETWORK_REQUEST_FAILED\n        );\n        // Confirm iframe is correctly loaded.\n        // To fallback on failure, set a timeout.\n        const networkErrorTimer = _window().setTimeout(() => {\n          reject(networkError);\n        }, PING_TIMEOUT.get());\n        // Clear timer and resolve pending iframe ready promise.\n        function clearTimerAndResolve(): void {\n          _window().clearTimeout(networkErrorTimer);\n          resolve(iframe);\n        }\n        // This returns an IThenable. However the reject part does not call\n        // when the iframe is not loaded.\n        iframe.ping(clearTimerAndResolve).then(clearTimerAndResolve, () => {\n          reject(networkError);\n        });\n      })\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nclass BrowserSessionPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence {\n  static type: 'SESSION' = 'SESSION';\n\n  constructor() {\n    super(window.sessionStorage, PersistenceType.SESSION);\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of 'SESSION' using `sessionStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserSessionPersistence: Persistence = BrowserSessionPersistence;\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getUA } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport {\n  _isChromeIOS,\n  _isFirefox,\n  _isIOSStandalone\n} from '../../core/util/browser';\nimport { AuthInternal } from '../../model/auth';\n\nconst BASE_POPUP_OPTIONS = {\n  location: 'yes',\n  resizable: 'yes',\n  statusbar: 'yes',\n  toolbar: 'no'\n};\n\nconst DEFAULT_WIDTH = 500;\nconst DEFAULT_HEIGHT = 600;\nconst TARGET_BLANK = '_blank';\n\nconst FIREFOX_EMPTY_URL = 'http://localhost';\n\nexport class AuthPopup {\n  associatedEvent: string | null = null;\n\n  constructor(readonly window: Window | null) {}\n\n  close(): void {\n    if (this.window) {\n      try {\n        this.window.close();\n      } catch (e) {}\n    }\n  }\n}\n\nexport function _open(\n  auth: AuthInternal,\n  url?: string,\n  name?: string,\n  width = DEFAULT_WIDTH,\n  height = DEFAULT_HEIGHT\n): AuthPopup {\n  const top = Math.min((window.screen.availHeight - height) / 2, 0).toString();\n  const left = Math.min((window.screen.availWidth - width) / 2, 0).toString();\n  let target = '';\n\n  const options: { [key: string]: string } = {\n    ...BASE_POPUP_OPTIONS,\n    width: width.toString(),\n    height: height.toString(),\n    top,\n    left\n  };\n\n  // Chrome iOS 7 and 8 is returning an undefined popup win when target is\n  // specified, even though the popup is not necessarily blocked.\n  const ua = getUA().toLowerCase();\n\n  if (name) {\n    target = _isChromeIOS(ua) ? TARGET_BLANK : name;\n  }\n\n  if (_isFirefox(ua)) {\n    // Firefox complains when invalid URLs are popped out. Hacky way to bypass.\n    url = url || FIREFOX_EMPTY_URL;\n    // Firefox disables by default scrolling on popup windows, which can create\n    // issues when the user has many Google accounts, for instance.\n    options.scrollbars = 'yes';\n  }\n\n  const optionsString = Object.entries(options).reduce(\n    (accum, [key, value]) => `${accum}${key}=${value},`,\n    ''\n  );\n\n  if (_isIOSStandalone(ua) && target !== '_self') {\n    openAsNewWindowIOS(url || '', target);\n    return new AuthPopup(null);\n  }\n\n  // about:blank getting sanitized causing browsers like IE/Edge to display\n  // brief error message before redirecting to handler.\n  const newWin = window.open(url || '', target, optionsString);\n  _assert(newWin, auth, AuthErrorCode.POPUP_BLOCKED);\n\n  // Flaky on IE edge, encapsulate with a try and catch.\n  try {\n    newWin.focus();\n  } catch (e) {}\n\n  return new AuthPopup(newWin);\n}\n\nfunction openAsNewWindowIOS(url: string, target: string): void {\n  const el = document.createElement('a');\n  el.href = url;\n  el.target = target;\n  const click = document.createEvent('MouseEvent');\n  click.initMouseEvent(\n    'click',\n    true,\n    true,\n    window,\n    1,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    1,\n    null\n  );\n  el.dispatchEvent(click);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PopupRedirectResolver } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { _getInstance } from './instantiator';\n\n/**\n * Chooses a popup/redirect resolver to use. This prefers the override (which\n * is directly passed in), and falls back to the property set on the auth\n * object. If neither are available, this function errors w/ an argument error.\n */\nexport function _withDefaultResolver(\n  auth: AuthInternal,\n  resolverOverride: PopupRedirectResolver | undefined\n): PopupRedirectResolverInternal {\n  if (resolverOverride) {\n    return _getInstance(resolverOverride);\n  }\n\n  _assert(auth._popupRedirectResolver, auth, AuthErrorCode.ARGUMENT_ERROR);\n\n  return auth._popupRedirectResolver;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId } from '../../model/public_types';\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _link as _linkUser } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { _assert } from '../util/assert';\nimport { _signInWithCredential } from './credential';\nimport { AuthErrorCode } from '../errors';\n\nexport interface IdpTaskParams {\n  auth: AuthInternal;\n  requestUri: string;\n  sessionId?: string;\n  tenantId?: string;\n  postBody?: string;\n  pendingToken?: string;\n  user?: UserInternal;\n  bypassAuthState?: boolean;\n}\n\nexport type IdpTask = (\n  params: IdpTaskParams\n) => Promise<UserCredentialInternal>;\n\nclass IdpCredential extends AuthCredential {\n  constructor(readonly params: IdpTaskParams) {\n    super(ProviderId.CUSTOM, ProviderId.CUSTOM);\n  }\n\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest(idToken));\n  }\n\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  private _buildIdpRequest(idToken?: string): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: this.params.requestUri,\n      sessionId: this.params.sessionId,\n      postBody: this.params.postBody,\n      tenantId: this.params.tenantId,\n      pendingToken: this.params.pendingToken,\n      returnSecureToken: true,\n      returnIdpCredential: true\n    };\n\n    if (idToken) {\n      request.idToken = idToken;\n    }\n\n    return request;\n  }\n}\n\nexport function _signIn(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  return _signInWithCredential(\n    params.auth,\n    new IdpCredential(params),\n    params.bypassAuthState\n  ) as Promise<UserCredentialInternal>;\n}\n\nexport function _reauth(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _reauthenticate(\n    user,\n    new IdpCredential(params),\n    params.bypassAuthState\n  );\n}\n\nexport async function _link(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _linkUser(user, new IdpCredential(params), params.bypassAuthState);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { debugAssert, _fail } from '../util/assert';\nimport {\n  _link,\n  _reauth,\n  _signIn,\n  IdpTask,\n  IdpTaskParams\n} from '../strategies/idp';\nimport { AuthInternal } from '../../model/auth';\n\ninterface PendingPromise {\n  resolve: (cred: UserCredentialInternal | null) => void;\n  reject: (error: Error) => void;\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n */\nexport abstract class AbstractPopupRedirectOperation\n  implements AuthEventConsumer {\n  private pendingPromise: PendingPromise | null = null;\n  private eventManager: EventManager | null = null;\n  readonly filter: AuthEventType[];\n\n  abstract eventId: string | null;\n\n  constructor(\n    protected readonly auth: AuthInternal,\n    filter: AuthEventType | AuthEventType[],\n    protected readonly resolver: PopupRedirectResolverInternal,\n    protected user?: UserInternal,\n    private readonly bypassAuthState = false\n  ) {\n    this.filter = Array.isArray(filter) ? filter : [filter];\n  }\n\n  abstract onExecution(): Promise<void>;\n\n  execute(): Promise<UserCredentialInternal | null> {\n    return new Promise<UserCredentialInternal | null>(\n      async (resolve, reject) => {\n        this.pendingPromise = { resolve, reject };\n\n        try {\n          this.eventManager = await this.resolver._initialize(this.auth);\n          await this.onExecution();\n          this.eventManager.registerConsumer(this);\n        } catch (e) {\n          this.reject(e);\n        }\n      }\n    );\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    const { urlResponse, sessionId, postBody, tenantId, error, type } = event;\n    if (error) {\n      this.reject(error);\n      return;\n    }\n\n    const params: IdpTaskParams = {\n      auth: this.auth,\n      requestUri: urlResponse!,\n      sessionId: sessionId!,\n      tenantId: tenantId || undefined,\n      postBody: postBody || undefined,\n      user: this.user,\n      bypassAuthState: this.bypassAuthState\n    };\n\n    try {\n      this.resolve(await this.getIdpTask(type)(params));\n    } catch (e) {\n      this.reject(e);\n    }\n  }\n\n  onError(error: FirebaseError): void {\n    this.reject(error);\n  }\n\n  private getIdpTask(type: AuthEventType): IdpTask {\n    switch (type) {\n      case AuthEventType.SIGN_IN_VIA_POPUP:\n      case AuthEventType.SIGN_IN_VIA_REDIRECT:\n        return _signIn;\n      case AuthEventType.LINK_VIA_POPUP:\n      case AuthEventType.LINK_VIA_REDIRECT:\n        return _link;\n      case AuthEventType.REAUTH_VIA_POPUP:\n      case AuthEventType.REAUTH_VIA_REDIRECT:\n        return _reauth;\n      default:\n        _fail(this.auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  protected resolve(cred: UserCredentialInternal | null): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.resolve(cred);\n    this.unregisterAndCleanUp();\n  }\n\n  protected reject(error: Error): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.reject(error);\n    this.unregisterAndCleanUp();\n  }\n\n  private unregisterAndCleanUp(): void {\n    if (this.eventManager) {\n      this.eventManager.unregisterConsumer(this);\n    }\n\n    this.pendingPromise = null;\n    this.cleanUp();\n  }\n\n  abstract cleanUp(): void;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEvent,\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserCredentialInternal } from '../../model/user';\nimport { PersistenceInternal } from '../persistence';\nimport { _persistenceKeyName } from '../persistence/persistence_user_manager';\nimport { _getInstance } from '../util/instantiator';\nimport { AbstractPopupRedirectOperation } from './abstract_popup_redirect_operation';\n\nconst PENDING_REDIRECT_KEY = 'pendingRedirect';\n\n// We only get one redirect outcome for any one auth, so just store it\n// in here.\nconst redirectOutcomeMap: Map<\n  string,\n  () => Promise<UserCredentialInternal | null>\n> = new Map();\n\nexport class RedirectAction extends AbstractPopupRedirectOperation {\n  eventId = null;\n\n  constructor(\n    auth: AuthInternal,\n    resolver: PopupRedirectResolverInternal,\n    bypassAuthState = false\n  ) {\n    super(\n      auth,\n      [\n        AuthEventType.SIGN_IN_VIA_REDIRECT,\n        AuthEventType.LINK_VIA_REDIRECT,\n        AuthEventType.REAUTH_VIA_REDIRECT,\n        AuthEventType.UNKNOWN\n      ],\n      resolver,\n      undefined,\n      bypassAuthState\n    );\n  }\n\n  /**\n   * Override the execute function; if we already have a redirect result, then\n   * just return it.\n   */\n  async execute(): Promise<UserCredentialInternal | null> {\n    let readyOutcome = redirectOutcomeMap.get(this.auth._key());\n    if (!readyOutcome) {\n      try {\n        const hasPendingRedirect = await _getAndClearPendingRedirectStatus(\n          this.resolver,\n          this.auth\n        );\n        const result = hasPendingRedirect ? await super.execute() : null;\n        readyOutcome = () => Promise.resolve(result);\n      } catch (e) {\n        readyOutcome = () => Promise.reject(e);\n      }\n\n      redirectOutcomeMap.set(this.auth._key(), readyOutcome);\n    }\n\n    return readyOutcome();\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    if (event.type === AuthEventType.SIGN_IN_VIA_REDIRECT) {\n      return super.onAuthEvent(event);\n    } else if (event.type === AuthEventType.UNKNOWN) {\n      // This is a sentinel value indicating there's no pending redirect\n      this.resolve(null);\n      return;\n    }\n\n    if (event.eventId) {\n      const user = await this.auth._redirectUserForId(event.eventId);\n      if (user) {\n        this.user = user;\n        return super.onAuthEvent(event);\n      } else {\n        this.resolve(null);\n      }\n    }\n  }\n\n  async onExecution(): Promise<void> {}\n\n  cleanUp(): void {}\n}\n\nexport async function _getAndClearPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<boolean> {\n  const key = pendingRedirectKey(auth);\n  const hasPendingRedirect =\n    (await resolverPersistence(resolver)._get(key)) === 'true';\n  await resolverPersistence(resolver)._remove(key);\n  return hasPendingRedirect;\n}\n\nexport async function _setPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<void> {\n  return resolverPersistence(resolver)._set(pendingRedirectKey(auth), 'true');\n}\n\nexport function _clearRedirectOutcomes(): void {\n  redirectOutcomeMap.clear();\n}\n\nfunction resolverPersistence(\n  resolver: PopupRedirectResolverInternal\n): PersistenceInternal {\n  return _getInstance(resolver._redirectPersistence);\n}\n\nfunction pendingRedirectKey(auth: AuthInternal): string {\n  return _persistenceKeyName(\n    PENDING_REDIRECT_KEY,\n    auth.config.apiKey,\n    auth.name\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assertLinkedStatus } from '../../core/user/link_unlink';\nimport { _assert } from '../../core/util/assert';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport {\n  RedirectAction,\n  _setPendingRedirectStatus\n} from '../../core/strategies/redirect';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Authenticates a Firebase client using a full-page redirect flow.\n *\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The Auth instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _signInWithRedirect(auth, provider, resolver) as Promise<never>;\n}\n\nexport async function _signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const authInternal = _castAuth(auth);\n  _assert(\n    provider instanceof FederatedAuthProvider,\n    auth,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  await _setPendingRedirectStatus(resolverInternal, authInternal);\n\n  return resolverInternal._openRedirect(\n    authInternal,\n    provider,\n    AuthEventType.SIGN_IN_VIA_REDIRECT\n  );\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a full-page redirect flow.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * // Link using a redirect.\n * await linkWithRedirect(result.user, provider);\n * // This will again trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _reauthenticateWithRedirect(\n    user,\n    provider,\n    resolver\n  ) as Promise<never>;\n}\nexport async function _reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assert(\n    provider instanceof FederatedAuthProvider,\n    userInternal.auth,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.REAUTH_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Links the {@link OAuthProvider} to the user account using a full-page redirect flow.\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a redirect.\n * const provider = new FacebookAuthProvider();\n * await linkWithRedirect(result.user, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n *\n * @public\n */\nexport function linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _linkWithRedirect(user, provider, resolver) as Promise<never>;\n}\nexport async function _linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assert(\n    provider instanceof FederatedAuthProvider,\n    userInternal.auth,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _assertLinkedStatus(false, userInternal, provider.providerId);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.LINK_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Returns a {@link UserCredential} from the redirect-based sign-in flow.\n *\n * @remarks\n * If sign-in succeeded, returns the signed in user. If sign-in was unsuccessful, fails with an\n * error. If no redirect operation was called, returns a {@link UserCredential}\n * with a null `user`.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The Auth instance.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function getRedirectResult(\n  auth: Auth,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential | null> {\n  await _castAuth(auth)._initializationPromise;\n  return _getRedirectResult(auth, resolver, false);\n}\n\nexport async function _getRedirectResult(\n  auth: Auth,\n  resolverExtern?: PopupRedirectResolver,\n  bypassAuthState = false\n): Promise<UserCredential | null> {\n  const authInternal = _castAuth(auth);\n  const resolver = _withDefaultResolver(authInternal, resolverExtern);\n  const action = new RedirectAction(authInternal, resolver, bypassAuthState);\n  const result = await action.execute();\n\n  if (result && !bypassAuthState) {\n    delete result.user._redirectEventId;\n    await authInternal._persistUserIfCurrent(result.user as UserInternal);\n    await authInternal._setRedirectUser(null, resolverExtern);\n  }\n\n  return result;\n}\n\nasync function prepareUserForRedirect(user: UserInternal): Promise<string> {\n  const eventId = _generateEventId(`${user.uid}:::`);\n  user._redirectEventId = eventId;\n  await user.auth._setRedirectUser(user);\n  await user.auth._persistUserIfCurrent(user);\n  return eventId;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app-exp';\nimport { AuthProvider } from '../../model/public_types';\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { isEmpty, querystring } from '@firebase/util';\nimport { _emulatorUrl } from './emulator';\nimport { FederatedAuthProvider } from '../providers/federated';\nimport { BaseOAuthProvider } from '../providers/oauth';\n\n/**\n * URL for Authentication widget which will initiate the OAuth handshake\n *\n * @internal\n */\nconst WIDGET_PATH = '__/auth/handler';\n\n/**\n * URL for emulated environment\n *\n * @internal\n */\nconst EMULATOR_WIDGET_PATH = 'emulator/auth/handler';\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\ntype WidgetParams = {\n  apiKey: ApiKey;\n  appName: AppName;\n  authType: AuthEventType;\n  redirectUrl?: string;\n  v: string;\n  providerId?: string;\n  scopes?: string;\n  customParameters?: string;\n  eventId?: string;\n  tid?: string;\n} & { [key: string]: string | undefined };\n\nexport function _getRedirectUrl(\n  auth: AuthInternal,\n  provider: AuthProvider,\n  authType: AuthEventType,\n  redirectUrl?: string,\n  eventId?: string,\n  additionalParams?: Record<string, string>\n): string {\n  _assert(auth.config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  _assert(auth.config.apiKey, auth, AuthErrorCode.INVALID_API_KEY);\n\n  const params: WidgetParams = {\n    apiKey: auth.config.apiKey,\n    appName: auth.name,\n    authType,\n    redirectUrl,\n    v: SDK_VERSION,\n    eventId\n  };\n\n  if (provider instanceof FederatedAuthProvider) {\n    provider.setDefaultLanguage(auth.languageCode);\n    params.providerId = provider.providerId || '';\n    if (!isEmpty(provider.getCustomParameters())) {\n      params.customParameters = JSON.stringify(provider.getCustomParameters());\n    }\n\n    // TODO set additionalParams from the provider as well?\n    for (const [key, value] of Object.entries(additionalParams || {})) {\n      params[key] = value;\n    }\n  }\n\n  if (provider instanceof BaseOAuthProvider) {\n    const scopes = provider.getScopes().filter(scope => scope !== '');\n    if (scopes.length > 0) {\n      params.scopes = scopes.join(',');\n    }\n  }\n\n  if (auth.tenantId) {\n    params.tid = auth.tenantId;\n  }\n\n  // TODO: maybe set eid as endipointId\n  // TODO: maybe set fw as Frameworks.join(\",\")\n\n  const paramsDict = params as Record<string, string | number>;\n  for (const key of Object.keys(paramsDict)) {\n    if (paramsDict[key] === undefined) {\n      delete paramsDict[key];\n    }\n  }\n  return `${getHandlerBase(auth)}?${querystring(paramsDict).slice(1)}`;\n}\n\nfunction getHandlerBase({ config }: AuthInternal): string {\n  if (!config.emulator) {\n    return `https://${config.authDomain}/${WIDGET_PATH}`;\n  }\n\n  return _emulatorUrl(config, EMULATOR_WIDGET_PATH);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, PopupRedirectResolver } from '../model/public_types';\n\nimport { AuthEventManager } from '../core/auth/auth_event_manager';\nimport { AuthErrorCode } from '../core/errors';\nimport { _assert, debugAssert, _fail } from '../core/util/assert';\nimport { _generateEventId } from '../core/util/event_id';\nimport { _getCurrentUrl } from '../core/util/location';\nimport { _validateOrigin } from '../core/util/validate_origin';\nimport { AuthInternal } from '../model/auth';\nimport {\n  AuthEventType,\n  EventManager,\n  GapiAuthEvent,\n  GapiOutcome,\n  PopupRedirectResolverInternal\n} from '../model/popup_redirect';\nimport { _setWindowLocation } from './auth_window';\nimport { _openIframe } from './iframe/iframe';\nimport { browserSessionPersistence } from './persistence/session_storage';\nimport { _open, AuthPopup } from './util/popup';\nimport { _getRedirectResult } from './strategies/redirect';\nimport { _getRedirectUrl } from '../core/util/handler';\nimport { _isIOS, _isMobileBrowser, _isSafari } from '../core/util/browser';\n\n/**\n * The special web storage event\n *\n */\nconst WEB_STORAGE_SUPPORT_KEY = 'webStorageSupport';\n\ninterface WebStorageSupportMessage extends gapi.iframes.Message {\n  [index: number]: Record<string, boolean>;\n}\n\ninterface ManagerOrPromise {\n  manager?: EventManager;\n  promise?: Promise<EventManager>;\n}\n\nclass BrowserPopupRedirectResolver implements PopupRedirectResolverInternal {\n  private readonly eventManagers: Record<string, ManagerOrPromise> = {};\n  private readonly iframes: Record<string, gapi.iframes.Iframe> = {};\n  private readonly originValidationPromises: Record<string, Promise<void>> = {};\n\n  readonly _redirectPersistence = browserSessionPersistence;\n\n  // Wrapping in async even though we don't await anywhere in order\n  // to make sure errors are raised as promise rejections\n  async _openPopup(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<AuthPopup> {\n    debugAssert(\n      this.eventManagers[auth._key()]?.manager,\n      '_initialize() not called before _openPopup()'\n    );\n\n    const url = _getRedirectUrl(\n      auth,\n      provider,\n      authType,\n      _getCurrentUrl(),\n      eventId\n    );\n    return _open(auth, url, _generateEventId());\n  }\n\n  async _openRedirect(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<never> {\n    await this._originValidation(auth);\n    _setWindowLocation(\n      _getRedirectUrl(auth, provider, authType, _getCurrentUrl(), eventId)\n    );\n    return new Promise(() => {});\n  }\n\n  _initialize(auth: AuthInternal): Promise<EventManager> {\n    const key = auth._key();\n    if (this.eventManagers[key]) {\n      const { manager, promise } = this.eventManagers[key];\n      if (manager) {\n        return Promise.resolve(manager);\n      } else {\n        debugAssert(promise, 'If manager is not set, promise should be');\n        return promise;\n      }\n    }\n\n    const promise = this.initAndGetManager(auth);\n    this.eventManagers[key] = { promise };\n    return promise;\n  }\n\n  private async initAndGetManager(auth: AuthInternal): Promise<EventManager> {\n    const iframe = await _openIframe(auth);\n    const manager = new AuthEventManager(auth);\n    iframe.register<GapiAuthEvent>(\n      'authEvent',\n      (iframeEvent: GapiAuthEvent | null) => {\n        _assert(iframeEvent?.authEvent, auth, AuthErrorCode.INVALID_AUTH_EVENT);\n        // TODO: Consider splitting redirect and popup events earlier on\n\n        const handled = manager.onEvent(iframeEvent.authEvent);\n        return { status: handled ? GapiOutcome.ACK : GapiOutcome.ERROR };\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n\n    this.eventManagers[auth._key()] = { manager };\n    this.iframes[auth._key()] = iframe;\n    return manager;\n  }\n\n  _isIframeWebStorageSupported(\n    auth: AuthInternal,\n    cb: (supported: boolean) => unknown\n  ): void {\n    const iframe = this.iframes[auth._key()];\n    iframe.send<gapi.iframes.Message, WebStorageSupportMessage>(\n      WEB_STORAGE_SUPPORT_KEY,\n      { type: WEB_STORAGE_SUPPORT_KEY },\n      result => {\n        const isSupported = result?.[0]?.[WEB_STORAGE_SUPPORT_KEY];\n        if (isSupported !== undefined) {\n          cb(!!isSupported);\n        }\n\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n  }\n\n  _originValidation(auth: AuthInternal): Promise<void> {\n    const key = auth._key();\n    if (!this.originValidationPromises[key]) {\n      this.originValidationPromises[key] = _validateOrigin(auth);\n    }\n\n    return this.originValidationPromises[key];\n  }\n\n  get _shouldInitProactively(): boolean {\n    // Mobile browsers and Safari need to optimistically initialize\n    return _isMobileBrowser() || _isSafari() || _isIOS();\n  }\n\n  _completeRedirectFn = _getRedirectResult;\n}\n\n/**\n * An implementation of {@link PopupRedirectResolver} suitable for browser\n * based applications.\n *\n * @public\n */\nexport const browserPopupRedirectResolver: PopupRedirectResolver = BrowserPopupRedirectResolver;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport { AuthInternal } from '../../model/auth';\nimport { Parameters, Recaptcha } from './recaptcha';\n\nexport const _SOLVE_TIME_MS = 500;\nexport const _EXPIRATION_TIME_MS = 60_000;\nexport const _WIDGET_ID_START = 1_000_000_000_000;\n\nexport interface Widget {\n  getResponse: () => string | null;\n  delete: () => void;\n  execute: () => void;\n}\n\nexport class MockReCaptcha implements Recaptcha {\n  private counter = _WIDGET_ID_START;\n  _widgets = new Map<number, Widget>();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  render(container: string | HTMLElement, parameters?: Parameters): number {\n    const id = this.counter;\n    this._widgets.set(\n      id,\n      new MockWidget(container, this.auth.name, parameters || {})\n    );\n    this.counter++;\n    return id;\n  }\n\n  reset(optWidgetId?: number): void {\n    const id = optWidgetId || _WIDGET_ID_START;\n    void this._widgets.get(id)?.delete();\n    this._widgets.delete(id);\n  }\n\n  getResponse(optWidgetId?: number): string {\n    const id = optWidgetId || _WIDGET_ID_START;\n    return this._widgets.get(id)?.getResponse() || '';\n  }\n\n  async execute(optWidgetId?: number | string): Promise<string> {\n    const id: number = (optWidgetId as number) || _WIDGET_ID_START;\n    void this._widgets.get(id)?.execute();\n    return '';\n  }\n}\n\nexport class MockWidget {\n  private readonly container: HTMLElement;\n  private readonly isVisible: boolean;\n  private timerId: number | null = null;\n  private deleted = false;\n  private responseToken: string | null = null;\n  private readonly clickHandler = (): void => {\n    this.execute();\n  };\n\n  constructor(\n    containerOrId: string | HTMLElement,\n    appName: string,\n    private readonly params: Parameters\n  ) {\n    const container =\n      typeof containerOrId === 'string'\n        ? document.getElementById(containerOrId)\n        : containerOrId;\n    _assert(container, AuthErrorCode.ARGUMENT_ERROR, { appName });\n\n    this.container = container;\n    this.isVisible = this.params.size !== 'invisible';\n    if (this.isVisible) {\n      this.execute();\n    } else {\n      this.container.addEventListener('click', this.clickHandler);\n    }\n  }\n\n  getResponse(): string | null {\n    this.checkIfDeleted();\n    return this.responseToken;\n  }\n\n  delete(): void {\n    this.checkIfDeleted();\n    this.deleted = true;\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n      this.timerId = null;\n    }\n    this.container.removeEventListener('click', this.clickHandler);\n  }\n\n  execute(): void {\n    this.checkIfDeleted();\n    if (this.timerId) {\n      return;\n    }\n\n    this.timerId = window.setTimeout(() => {\n      this.responseToken = generateRandomAlphaNumericString(50);\n      const { callback, 'expired-callback': expiredCallback } = this.params;\n      if (callback) {\n        try {\n          callback(this.responseToken);\n        } catch (e) {}\n      }\n\n      this.timerId = window.setTimeout(() => {\n        this.timerId = null;\n        this.responseToken = null;\n        if (expiredCallback) {\n          try {\n            expiredCallback();\n          } catch (e) {}\n        }\n\n        if (this.isVisible) {\n          this.execute();\n        }\n      }, _EXPIRATION_TIME_MS);\n    }, _SOLVE_TIME_MS);\n  }\n\n  private checkIfDeleted(): void {\n    if (this.deleted) {\n      throw new Error('reCAPTCHA mock was already deleted!');\n    }\n  }\n}\n\nfunction generateRandomAlphaNumericString(len: number): string {\n  const chars = [];\n  const allowedChars =\n    '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  for (let i = 0; i < len; i++) {\n    chars.push(\n      allowedChars.charAt(Math.floor(Math.random() * allowedChars.length))\n    );\n  }\n  return chars.join('');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as jsHelpers from '../load_js';\nimport { Recaptcha } from './recaptcha';\nimport { MockReCaptcha } from './recaptcha_mock';\n\n// ReCaptcha will load using the same callback, so the callback function needs\n// to be kept around\nexport const _JSLOAD_CALLBACK = jsHelpers._generateCallbackName('rcb');\nconst NETWORK_TIMEOUT_DELAY = new Delay(30000, 60000);\nconst RECAPTCHA_BASE = 'https://www.google.com/recaptcha/api.js?';\n\n/**\n * We need to mark this interface as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport interface ReCaptchaLoader {\n  load(auth: AuthInternal, hl?: string): Promise<Recaptcha>;\n  clearedOneInstance(): void;\n}\n\n/**\n * Loader for the GReCaptcha library. There should only ever be one of this.\n */\nexport class ReCaptchaLoaderImpl implements ReCaptchaLoader {\n  private hostLanguage = '';\n  private counter = 0;\n  private readonly librarySeparatelyLoaded = !!_window().grecaptcha;\n\n  load(auth: AuthInternal, hl = ''): Promise<Recaptcha> {\n    _assert(isHostLanguageValid(hl), auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    if (this.shouldResolveImmediately(hl)) {\n      return Promise.resolve(_window().grecaptcha!);\n    }\n    return new Promise<Recaptcha>((resolve, reject) => {\n      const networkTimeout = _window().setTimeout(() => {\n        reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n      }, NETWORK_TIMEOUT_DELAY.get());\n\n      _window()[_JSLOAD_CALLBACK] = () => {\n        _window().clearTimeout(networkTimeout);\n        delete _window()[_JSLOAD_CALLBACK];\n\n        const recaptcha = _window().grecaptcha;\n\n        if (!recaptcha) {\n          reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n          return;\n        }\n\n        // Wrap the greptcha render function so that we know if the developer has\n        // called it separately\n        const render = recaptcha.render;\n        recaptcha.render = (container, params) => {\n          const widgetId = render(container, params);\n          this.counter++;\n          return widgetId;\n        };\n\n        this.hostLanguage = hl;\n        resolve(recaptcha);\n      };\n\n      const url = `${RECAPTCHA_BASE}?${querystring({\n        onload: _JSLOAD_CALLBACK,\n        render: 'explicit',\n        hl\n      })}`;\n\n      jsHelpers._loadJS(url).catch(() => {\n        clearTimeout(networkTimeout);\n        reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n      });\n    });\n  }\n\n  clearedOneInstance(): void {\n    this.counter--;\n  }\n\n  private shouldResolveImmediately(hl: string): boolean {\n    // We can resolve immediately if:\n    //   • grecaptcha is already defined AND (\n    //     1. the requested language codes are the same OR\n    //     2. there exists already a ReCaptcha on the page\n    //     3. the library was already loaded by the app\n    // In cases (2) and (3), we _can't_ reload as it would break the recaptchas\n    // that are already in the page\n    return (\n      !!_window().grecaptcha &&\n      (hl === this.hostLanguage ||\n        this.counter > 0 ||\n        this.librarySeparatelyLoaded)\n    );\n  }\n}\n\nfunction isHostLanguageValid(hl: string): boolean {\n  return hl.length <= 6 && /^\\s*[a-zA-Z0-9\\-]*\\s*$/.test(hl);\n}\n\nexport class MockReCaptchaLoaderImpl implements ReCaptchaLoader {\n  async load(auth: AuthInternal): Promise<Recaptcha> {\n    return new MockReCaptcha(auth);\n  }\n\n  clearedOneInstance(): void {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth } from '../../model/public_types';\nimport { getRecaptchaParams } from '../../api/authentication/recaptcha';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport { _isHttpOrHttps } from '../../core/util/location';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport { _isWorker } from '../util/worker';\nimport { Parameters, Recaptcha } from './recaptcha';\nimport {\n  MockReCaptchaLoaderImpl,\n  ReCaptchaLoader,\n  ReCaptchaLoaderImpl\n} from './recaptcha_loader';\n\nexport const RECAPTCHA_VERIFIER_TYPE = 'recaptcha';\n\nconst DEFAULT_PARAMS: Parameters = {\n  theme: 'light',\n  type: 'image'\n};\n\ntype TokenCallback = (token: string) => void;\n\n/**\n * An {@link https://www.google.com/recaptcha/ | reCAPTCHA}-based application verifier.\n *\n * @public\n */\nexport class RecaptchaVerifier implements ApplicationVerifierInternal {\n  /**\n   * The application verifier type.\n   *\n   * @remarks\n   * For a reCAPTCHA verifier, this is 'recaptcha'.\n   */\n  readonly type = RECAPTCHA_VERIFIER_TYPE;\n  private destroyed = false;\n  private widgetId: number | null = null;\n  private readonly container: HTMLElement;\n  private readonly isInvisible: boolean;\n  private readonly tokenChangeListeners = new Set<TokenCallback>();\n  private renderPromise: Promise<number> | null = null;\n  private readonly auth: AuthInternal;\n\n  /** @internal */\n  readonly _recaptchaLoader: ReCaptchaLoader;\n  private recaptcha: Recaptcha | null = null;\n\n  /**\n   *\n   * @param containerOrId - The reCAPTCHA container parameter.\n   *\n   * @remarks\n   * This has different meaning depending on whether the reCAPTCHA is hidden or visible. For a\n   * visible reCAPTCHA the container must be empty. If a string is used, it has to correspond to\n   * an element ID. The corresponding element must also must be in the DOM at the time of\n   * initialization.\n   *\n   * @param parameters - The optional reCAPTCHA parameters.\n   *\n   * @remarks\n   * Check the reCAPTCHA docs for a comprehensive list. All parameters are accepted except for\n   * the sitekey. Firebase Auth backend provisions a reCAPTCHA for each project and will\n   * configure this upon rendering. For an invisible reCAPTCHA, a size key must have the value\n   * 'invisible'.\n   *\n   * @param authExtern - The corresponding Firebase Auth instance.\n   *\n   * @remarks\n   * If none is provided, the default Firebase Auth instance is used. A Firebase Auth instance\n   * must be initialized with an API key, otherwise an error will be thrown.\n   */\n  constructor(\n    containerOrId: HTMLElement | string,\n    private readonly parameters: Parameters = {\n      ...DEFAULT_PARAMS\n    },\n    authExtern: Auth\n  ) {\n    this.auth = _castAuth(authExtern);\n    this.isInvisible = this.parameters.size === 'invisible';\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const container =\n      typeof containerOrId === 'string'\n        ? document.getElementById(containerOrId)\n        : containerOrId;\n    _assert(container, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    this.container = container;\n    this.parameters.callback = this.makeTokenCallback(this.parameters.callback);\n\n    this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting\n      ? new MockReCaptchaLoaderImpl()\n      : new ReCaptchaLoaderImpl();\n\n    this.validateStartingState();\n    // TODO: Figure out if sdk version is needed\n  }\n\n  /**\n   * Waits for the user to solve the reCAPTCHA and resolves with the reCAPTCHA token.\n   *\n   * @returns A Promise for the reCAPTCHA token.\n   */\n  async verify(): Promise<string> {\n    this.assertNotDestroyed();\n    const id = await this.render();\n    const recaptcha = this.getAssertedRecaptcha();\n\n    const response = recaptcha.getResponse(id);\n    if (response) {\n      return response;\n    }\n\n    return new Promise<string>(resolve => {\n      const tokenChange = (token: string): void => {\n        if (!token) {\n          return; // Ignore token expirations.\n        }\n        this.tokenChangeListeners.delete(tokenChange);\n        resolve(token);\n      };\n\n      this.tokenChangeListeners.add(tokenChange);\n      if (this.isInvisible) {\n        recaptcha.execute(id);\n      }\n    });\n  }\n\n  /**\n   * Renders the reCAPTCHA widget on the page.\n   *\n   * @returns A Promise that resolves with the reCAPTCHA widget ID.\n   */\n  render(): Promise<number> {\n    try {\n      this.assertNotDestroyed();\n    } catch (e) {\n      // This method returns a promise. Since it's not async (we want to return the\n      // _same_ promise if rendering is still occurring), the API surface should\n      // reject with the error rather than just throw\n      return Promise.reject(e);\n    }\n\n    if (this.renderPromise) {\n      return this.renderPromise;\n    }\n\n    this.renderPromise = this.makeRenderPromise().catch(e => {\n      this.renderPromise = null;\n      throw e;\n    });\n\n    return this.renderPromise;\n  }\n\n  /** @internal */\n  _reset(): void {\n    this.assertNotDestroyed();\n    if (this.widgetId !== null) {\n      this.getAssertedRecaptcha().reset(this.widgetId);\n    }\n  }\n\n  /**\n   * Clears the reCAPTCHA widget from the page and destroys the instance.\n   */\n  clear(): void {\n    this.assertNotDestroyed();\n    this.destroyed = true;\n    this._recaptchaLoader.clearedOneInstance();\n    if (!this.isInvisible) {\n      this.container.childNodes.forEach(node => {\n        this.container.removeChild(node);\n      });\n    }\n  }\n\n  private validateStartingState(): void {\n    _assert(!this.parameters.sitekey, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n    _assert(\n      this.isInvisible || !this.container.hasChildNodes(),\n      this.auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n  }\n\n  private makeTokenCallback(\n    existing: TokenCallback | string | undefined\n  ): TokenCallback {\n    return token => {\n      this.tokenChangeListeners.forEach(listener => listener(token));\n      if (typeof existing === 'function') {\n        existing(token);\n      } else if (typeof existing === 'string') {\n        const globalFunc = _window()[existing];\n        if (typeof globalFunc === 'function') {\n          globalFunc(token);\n        }\n      }\n    };\n  }\n\n  private assertNotDestroyed(): void {\n    _assert(!this.destroyed, this.auth, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  private async makeRenderPromise(): Promise<number> {\n    await this.init();\n    if (!this.widgetId) {\n      let container = this.container;\n      if (!this.isInvisible) {\n        const guaranteedEmpty = document.createElement('div');\n        container.appendChild(guaranteedEmpty);\n        container = guaranteedEmpty;\n      }\n\n      this.widgetId = this.getAssertedRecaptcha().render(\n        container,\n        this.parameters\n      );\n    }\n\n    return this.widgetId;\n  }\n\n  private async init(): Promise<void> {\n    _assert(\n      _isHttpOrHttps() && !_isWorker(),\n      this.auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n\n    await domReady();\n    this.recaptcha = await this._recaptchaLoader.load(\n      this.auth,\n      this.auth.languageCode || undefined\n    );\n\n    const siteKey = await getRecaptchaParams(this.auth);\n    _assert(siteKey, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.parameters.sitekey = siteKey;\n  }\n\n  private getAssertedRecaptcha(): Recaptcha {\n    _assert(this.recaptcha, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.recaptcha;\n  }\n}\n\nfunction domReady(): Promise<void> {\n  let resolver: (() => void) | null = null;\n  return new Promise<void>(resolve => {\n    if (document.readyState === 'complete') {\n      resolve();\n      return;\n    }\n\n    // Document not ready, wait for load before resolving.\n    // Save resolver, so we can remove listener in case it was externally\n    // cancelled.\n    resolver = () => resolve();\n    window.addEventListener('load', resolver);\n  }).catch(e => {\n    if (resolver) {\n      window.removeEventListener('load', resolver);\n    }\n\n    throw e;\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, registerVersion } from '@firebase/app-exp';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\n\nimport { name, version } from '../../../package.json';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _getClientVersion, ClientPlatform } from '../util/version';\nimport { _castAuth, AuthImpl, DefaultConfig } from './auth_impl';\nimport { AuthInterop } from './firebase_internal';\nimport { ConfigInternal } from '../../model/auth';\nimport { Dependencies } from '../../model/public_types';\nimport { _initializeAuthInstance } from './initialize';\n\nexport const enum _ComponentName {\n  AUTH = 'auth-exp',\n  AUTH_INTERNAL = 'auth-internal'\n}\n\nfunction getVersionForPlatform(\n  clientPlatform: ClientPlatform\n): string | undefined {\n  switch (clientPlatform) {\n    case ClientPlatform.NODE:\n      return 'node';\n    case ClientPlatform.REACT_NATIVE:\n      return 'rn';\n    case ClientPlatform.WORKER:\n      return 'webworker';\n    case ClientPlatform.CORDOVA:\n      return 'cordova';\n    default:\n      return undefined;\n  }\n}\n\n/** @internal */\nexport function registerAuth(clientPlatform: ClientPlatform): void {\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH,\n      (container, { options: deps }: { options?: Dependencies }) => {\n        const app = container.getProvider('app-exp').getImmediate()!;\n        const { apiKey, authDomain } = app.options;\n        return (app => {\n          _assert(\n            apiKey && !apiKey.includes(':'),\n            AuthErrorCode.INVALID_API_KEY,\n            { appName: app.name }\n          );\n          // Auth domain is optional if IdP sign in isn't being used\n          _assert(!authDomain?.includes(':'), AuthErrorCode.ARGUMENT_ERROR, {\n            appName: app.name\n          });\n          const config: ConfigInternal = {\n            apiKey,\n            authDomain,\n            clientPlatform,\n            apiHost: DefaultConfig.API_HOST,\n            tokenApiHost: DefaultConfig.TOKEN_API_HOST,\n            apiScheme: DefaultConfig.API_SCHEME,\n            sdkClientVersion: _getClientVersion(clientPlatform)\n          };\n\n          const authInstance = new AuthImpl(app, config);\n          _initializeAuthInstance(authInstance, deps);\n\n          return authInstance;\n        })(app);\n      },\n      ComponentType.PUBLIC\n    )\n      /**\n       * Auth can only be initialized by explicitly calling getAuth() or initializeAuth()\n       * For why we do this, See go/firebase-next-auth-init\n       */\n      .setInstantiationMode(InstantiationMode.EXPLICIT)\n      /**\n       * Because all firebase products that depend on auth depend on auth-internal directly,\n       * we need to initialize auth-internal after auth is initialized to make it available to other firebase products.\n       */\n      .setInstanceCreatedCallback(\n        (container, _instanceIdentifier, _instance) => {\n          const authInternalProvider = container.getProvider(\n            _ComponentName.AUTH_INTERNAL\n          );\n          authInternalProvider.initialize();\n        }\n      )\n  );\n\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH_INTERNAL,\n      container => {\n        const auth = _castAuth(\n          container.getProvider(_ComponentName.AUTH).getImmediate()!\n        );\n        return (auth => new AuthInterop(auth))(auth);\n      },\n      ComponentType.PRIVATE\n    ).setInstantiationMode(InstantiationMode.EXPLICIT)\n  );\n\n  registerVersion(name, version, getVersionForPlatform(clientPlatform));\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { Auth } from '../../model/public_types';\n\ninterface GetRecaptchaParamResponse {\n  recaptchaSiteKey?: string;\n}\n\nexport async function getRecaptchaParams(auth: Auth): Promise<string> {\n  return (\n    (\n      await _performApiRequest<void, GetRecaptchaParamResponse>(\n        auth,\n        HttpMethod.GET,\n        Endpoint.GET_RECAPTCHA_PARAM\n      )\n    ).recaptchaSiteKey || ''\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApplicationVerifier,\n  Auth,\n  ConfirmationResult,\n  PhoneInfoOptions,\n  ProviderId,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { startEnrollPhoneMfa } from '../../api/account_management/mfa';\nimport { startSignInPhoneMfa } from '../../api/authentication/mfa';\nimport { sendPhoneVerificationCode } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assertLinkedStatus, _link } from '../../core/user/link_unlink';\nimport { _assert } from '../../core/util/assert';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  linkWithCredential,\n  reauthenticateWithCredential,\n  signInWithCredential\n} from '../../core/strategies/credential';\nimport {\n  MultiFactorSessionImpl,\n  MultiFactorSessionType\n} from '../../mfa/mfa_session';\nimport { UserInternal } from '../../model/user';\nimport { RECAPTCHA_VERIFIER_TYPE } from '../recaptcha/recaptcha_verifier';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\n\ninterface OnConfirmationCallback {\n  (credential: PhoneAuthCredential): Promise<UserCredential>;\n}\n\nclass ConfirmationResultImpl implements ConfirmationResult {\n  constructor(\n    readonly verificationId: string,\n    private readonly onConfirmation: OnConfirmationCallback\n  ) {}\n\n  confirm(verificationCode: string): Promise<UserCredential> {\n    const authCredential = PhoneAuthCredential._fromVerification(\n      this.verificationId,\n      verificationCode\n    );\n    return this.onConfirmation(authCredential);\n  }\n}\n\n/**\n * Asynchronously signs in using a phone number.\n *\n * @remarks\n * This method sends a code via SMS to the given\n * phone number, and returns a {@link ConfirmationResult}. After the user\n * provides the code sent to their phone, call {@link ConfirmationResult.confirm}\n * with the code to sign the user in.\n *\n * For abuse prevention, this method also requires a {@link ApplicationVerifier}.\n * This SDK includes a reCAPTCHA-based implementation, {@link RecaptchaVerifier}.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n * // Obtain a verificationCode from the user.\n * const credential = await confirmationResult.confirm(verificationCode);\n * ```\n *\n * @param auth - The Auth instance.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const authInternal = _castAuth(auth);\n  const verificationId = await _verifyPhoneNumber(\n    authInternal,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    signInWithCredential(authInternal, cred)\n  );\n}\n\n/**\n * Links the user account with the given phone number.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function linkWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(false, userInternal, ProviderId.PHONE);\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    linkWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Re-authenticates a user using a fresh phne credential.\n *\n * @remarks Use before operations such as {@link updatePassword} that require tokens from recent sign-in attempts.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function reauthenticateWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    reauthenticateWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Returns a verification ID to be used in conjunction with the SMS code that is sent.\n *\n */\nexport async function _verifyPhoneNumber(\n  auth: AuthInternal,\n  options: PhoneInfoOptions | string,\n  verifier: ApplicationVerifierInternal\n): Promise<string> {\n  const recaptchaToken = await verifier.verify();\n\n  try {\n    _assert(\n      typeof recaptchaToken === 'string',\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      verifier.type === RECAPTCHA_VERIFIER_TYPE,\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n\n    let phoneInfoOptions: PhoneInfoOptions;\n\n    if (typeof options === 'string') {\n      phoneInfoOptions = {\n        phoneNumber: options\n      };\n    } else {\n      phoneInfoOptions = options;\n    }\n\n    if ('session' in phoneInfoOptions) {\n      const session = phoneInfoOptions.session as MultiFactorSessionImpl;\n\n      if ('phoneNumber' in phoneInfoOptions) {\n        _assert(\n          session.type === MultiFactorSessionType.ENROLL,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const response = await startEnrollPhoneMfa(auth, {\n          idToken: session.credential,\n          phoneEnrollmentInfo: {\n            phoneNumber: phoneInfoOptions.phoneNumber,\n            recaptchaToken\n          }\n        });\n        return response.phoneSessionInfo.sessionInfo;\n      } else {\n        _assert(\n          session.type === MultiFactorSessionType.SIGN_IN,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const mfaEnrollmentId =\n          phoneInfoOptions.multiFactorHint?.uid ||\n          phoneInfoOptions.multiFactorUid;\n        _assert(mfaEnrollmentId, auth, AuthErrorCode.MISSING_MFA_INFO);\n        const response = await startSignInPhoneMfa(auth, {\n          mfaPendingCredential: session.credential,\n          mfaEnrollmentId,\n          phoneSignInInfo: {\n            recaptchaToken\n          }\n        });\n        return response.phoneResponseInfo.sessionInfo;\n      }\n    } else {\n      const { sessionInfo } = await sendPhoneVerificationCode(auth, {\n        phoneNumber: phoneInfoOptions.phoneNumber,\n        recaptchaToken\n      });\n      return sessionInfo;\n    }\n  } finally {\n    verifier._reset();\n  }\n}\n\n/**\n * Updates the user's phone number.\n *\n * @example\n * ```\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * await updatePhoneNumber(user, phoneCredential);\n * ```\n *\n * @param user - The user.\n * @param credential - A credential authenticating the new phone number.\n *\n * @public\n */\nexport async function updatePhoneNumber(\n  user: User,\n  credential: PhoneAuthCredential\n): Promise<void> {\n  await _link(getModularInstance(user) as UserInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _performApiRequest, Endpoint, HttpMethod } from '../index';\nimport { Auth } from '../../model/public_types';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from '../account_management/mfa';\nimport { SignInWithIdpResponse } from './idp';\nimport {\n  SignInWithPhoneNumberRequest,\n  SignInWithPhoneNumberResponse\n} from './sms';\n\nexport interface FinalizeMfaResponse {\n  idToken: string;\n  refreshToken: string;\n}\n\nexport interface IdTokenMfaResponse extends IdTokenResponse {\n  mfaPendingCredential?: string;\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface StartPhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  mfaEnrollmentId: string;\n  phoneSignInInfo: {\n    recaptchaToken: string;\n  };\n  tenantId: string | null;\n}\n\nexport interface StartPhoneMfaSignInResponse {\n  phoneResponseInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startSignInPhoneMfa(\n  auth: Auth,\n  request: Omit<StartPhoneMfaSignInRequest, 'tenantId'>\n): Promise<StartPhoneMfaSignInResponse> {\n  return _performApiRequest<\n    StartPhoneMfaSignInRequest,\n    StartPhoneMfaSignInResponse\n  >(auth, HttpMethod.POST, Endpoint.START_PHONE_MFA_SIGN_IN, {\n    tenantId: auth.tenantId,\n    ...request\n  });\n}\n\nexport interface FinalizePhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  tenantId: string | null;\n}\n\nexport interface FinalizePhoneMfaSignInResponse extends FinalizeMfaResponse {}\n\nexport function finalizeSignInPhoneMfa(\n  auth: Auth,\n  request: Omit<FinalizePhoneMfaSignInRequest, 'tenantId'>\n): Promise<FinalizePhoneMfaSignInResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaSignInRequest,\n    FinalizePhoneMfaSignInResponse\n  >(auth, HttpMethod.POST, Endpoint.FINALIZE_PHONE_MFA_SIGN_IN, {\n    tenantId: auth.tenantId,\n    ...request\n  });\n}\n\nexport type PhoneOrOauthTokenResponse =\n  | SignInWithPhoneNumberResponse\n  | SignInWithIdpResponse\n  | IdTokenResponse;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  PhoneInfoOptions,\n  ProviderId,\n  SignInMethod,\n  ApplicationVerifier,\n  UserCredential\n} from '../../model/public_types';\n\nimport { SignInWithPhoneNumberResponse } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal as ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal as AuthInternal } from '../../model/auth';\nimport { UserCredentialInternal as UserCredentialInternal } from '../../model/user';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { _verifyPhoneNumber } from '../strategies/phone';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthCredential } from '../../core';\nimport { FirebaseError, getModularInstance } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\n\n/**\n * Provider for generating an {@link PhoneAuthCredential}.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * const userCredential = await signInWithCredential(auth, phoneCredential);\n * ```\n *\n * @public\n */\nexport class PhoneAuthProvider {\n  /** Always set to {@link ProviderId.PHONE}. */\n  static readonly PROVIDER_ID = ProviderId.PHONE;\n  /** Always set to {@link SignInMethod.PHONE}. */\n  static readonly PHONE_SIGN_IN_METHOD = SignInMethod.PHONE;\n\n  /** Always set to {@link ProviderId.PHONE}. */\n  readonly providerId = PhoneAuthProvider.PROVIDER_ID;\n  private readonly auth: AuthInternal;\n\n  /**\n   * @param auth - The Firebase Auth instance in which sign-ins should occur.\n   *\n   */\n  constructor(auth: Auth) {\n    this.auth = _castAuth(auth);\n  }\n\n  /**\n   *\n   * Starts a phone number authentication flow by sending a verification code to the given phone\n   * number.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param phoneInfoOptions - The user's {@link PhoneInfoOptions}. The phone number should be in\n   * E.164 format (e.g. +16505550101).\n   * @param applicationVerifier - For abuse prevention, this method also requires a\n   * {@link ApplicationVerifier}. This SDK includes a reCAPTCHA-based implementation,\n   * {@link RecaptchaVerifier}.\n   *\n   * @returns A Promise for a verification ID that can be passed to\n   * {@link PhoneAuthProvider.credential} to identify this flow..\n   */\n  verifyPhoneNumber(\n    phoneOptions: PhoneInfoOptions | string,\n    applicationVerifier: ApplicationVerifier\n  ): Promise<string> {\n    return _verifyPhoneNumber(\n      this.auth,\n      phoneOptions,\n      getModularInstance(applicationVerifier as ApplicationVerifierInternal)\n    );\n  }\n\n  /**\n   * Creates a phone auth credential, given the verification ID from\n   * {@link PhoneAuthProvider.verifyPhoneNumber} and the code that was sent to the user's\n   * mobile device.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = await confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param verificationId - The verification ID returned from {@link PhoneAuthProvider.verifyPhoneNumber}.\n   * @param verificationCode - The verification code sent to the user's mobile device.\n   *\n   * @returns The auth provider credential.\n   */\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return PhoneAuthCredential._fromVerification(\n      verificationId,\n      verificationCode\n    );\n  }\n\n  /**\n   * Generates an {@link AuthCredential} from a {@link UserCredential}.\n   * @param userCredential\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): AuthCredential | null {\n    const credential = userCredential as UserCredentialInternal;\n    return PhoneAuthProvider.credentialFromTaggedObject(credential);\n  }\n\n  /**\n   * Returns an {@link AuthCredential} when passed an error.\n   *\n   * @remarks\n   *\n   * This method works for errors like\n   * `auth/account-exists-with-different-credentials`. This is useful for\n   * recovering when attempting to set a user's phone number but the number\n   * in question is already tied to another account. For example, the following\n   * code tries to update the current user's phone number, and if that\n   * fails, links the user with the account associated with that number:\n   *\n   * ```js\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(number, verifier);\n   * try {\n   *   const code = ''; // Prompt the user for the verification code\n   *   await updatePhoneNumber(\n   *       auth.currentUser,\n   *       PhoneAuthProvider.credential(verificationId, code));\n   * } catch (e) {\n   *   if (e.code === 'auth/account-exists-with-different-credential') {\n   *     const cred = PhoneAuthProvider.credentialFromError(e);\n   *     await linkWithCredential(auth.currentUser, cred);\n   *   }\n   * }\n   *\n   * // At this point, auth.currentUser.phoneNumber === number.\n   * ```\n   *\n   * @param error\n   */\n  static credentialFromError(error: FirebaseError): AuthCredential | null {\n    return PhoneAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): AuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const {\n      phoneNumber,\n      temporaryProof\n    } = tokenResponse as SignInWithPhoneNumberResponse;\n    if (phoneNumber && temporaryProof) {\n      return PhoneAuthCredential._fromTokenResponse(\n        phoneNumber,\n        temporaryProof\n      );\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, debugAssert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport { AuthPopup } from '../util/popup';\nimport { AbstractPopupRedirectOperation } from '../../core/strategies/abstract_popup_redirect_operation';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\n\n/*\n * The event timeout is the same on mobile and desktop, no need for Delay.\n */\nexport const enum _Timeout {\n  AUTH_EVENT = 2000\n}\nexport const _POLL_WINDOW_CLOSE_TIMEOUT = new Delay(2000, 10000);\n\n/**\n * Authenticates a Firebase client using a popup-based OAuth authentication flow.\n *\n * @remarks\n * If succeeds, returns the signed in user along with the provider's credential. If sign in was\n * unsuccessful, returns an error object containing additional information about the error.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n *\n * @param auth - The Auth instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n *\n * @public\n */\nexport async function signInWithPopup(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const authInternal = _castAuth(auth);\n  _assert(\n    provider instanceof FederatedAuthProvider,\n    auth,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  const action = new PopupOperation(\n    authInternal,\n    AuthEventType.SIGN_IN_VIA_POPUP,\n    provider,\n    resolverInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a pop-up based\n * OAuth flow.\n *\n * @remarks\n * If the reauthentication is successful, the returned result will contain the user and the\n * provider's credential.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n * // Reauthenticate using a popup.\n * await reauthenticateWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function reauthenticateWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assert(\n    provider instanceof FederatedAuthProvider,\n    userInternal.auth,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.REAUTH_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Links the authenticated provider to the user account using a pop-up based OAuth flow.\n *\n * @remarks\n * If the linking is successful, the returned result will contain the user and the provider's credential.\n *\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a popup.\n * const provider = new FacebookAuthProvider();\n * await linkWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function linkWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assert(\n    provider instanceof FederatedAuthProvider,\n    userInternal.auth,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.LINK_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n *\n */\nclass PopupOperation extends AbstractPopupRedirectOperation {\n  // Only one popup is ever shown at once. The lifecycle of the current popup\n  // can be managed / cancelled by the constructor.\n  private static currentPopupAction: PopupOperation | null = null;\n  private authWindow: AuthPopup | null = null;\n  private pollId: number | null = null;\n\n  constructor(\n    auth: AuthInternal,\n    filter: AuthEventType,\n    private readonly provider: AuthProvider,\n    resolver: PopupRedirectResolverInternal,\n    user?: UserInternal\n  ) {\n    super(auth, filter, resolver, user);\n    if (PopupOperation.currentPopupAction) {\n      PopupOperation.currentPopupAction.cancel();\n    }\n\n    PopupOperation.currentPopupAction = this;\n  }\n\n  async executeNotNull(): Promise<UserCredential> {\n    const result = await this.execute();\n    _assert(result, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return result;\n  }\n\n  async onExecution(): Promise<void> {\n    debugAssert(\n      this.filter.length === 1,\n      'Popup operations only handle one event'\n    );\n    const eventId = _generateEventId();\n    this.authWindow = await this.resolver._openPopup(\n      this.auth,\n      this.provider,\n      this.filter[0], // There's always one, see constructor\n      eventId\n    );\n    this.authWindow.associatedEvent = eventId;\n\n    // Check for web storage support and origin validation _after_ the popup is\n    // loaded. These operations are slow (~1 second or so) Rather than\n    // waiting on them before opening the window, optimistically open the popup\n    // and check for storage support at the same time. If storage support is\n    // not available, this will cause the whole thing to reject properly. It\n    // will also close the popup, but since the promise has already rejected,\n    // the popup closed by user poll will reject into the void.\n    this.resolver._originValidation(this.auth).catch(e => {\n      this.reject(e);\n    });\n\n    this.resolver._isIframeWebStorageSupported(this.auth, isSupported => {\n      if (!isSupported) {\n        this.reject(\n          _createError(this.auth, AuthErrorCode.WEB_STORAGE_UNSUPPORTED)\n        );\n      }\n    });\n\n    // Handle user closure. Notice this does *not* use await\n    this.pollUserCancellation();\n  }\n\n  get eventId(): string | null {\n    return this.authWindow?.associatedEvent || null;\n  }\n\n  cancel(): void {\n    this.reject(_createError(this.auth, AuthErrorCode.EXPIRED_POPUP_REQUEST));\n  }\n\n  cleanUp(): void {\n    if (this.authWindow) {\n      this.authWindow.close();\n    }\n\n    if (this.pollId) {\n      window.clearTimeout(this.pollId);\n    }\n\n    this.authWindow = null;\n    this.pollId = null;\n    PopupOperation.currentPopupAction = null;\n  }\n\n  private pollUserCancellation(): void {\n    const poll = (): void => {\n      if (this.authWindow?.window?.closed) {\n        // Make sure that there is sufficient time for whatever action to\n        // complete. The window could have closed but the sign in network\n        // call could still be in flight.\n        this.pollId = window.setTimeout(() => {\n          this.pollId = null;\n          this.reject(\n            _createError(this.auth, AuthErrorCode.POPUP_CLOSED_BY_USER)\n          );\n        }, _Timeout.AUTH_EVENT);\n        return;\n      }\n\n      this.pollId = window.setTimeout(poll, _POLL_WINDOW_CLOSE_TIMEOUT.get());\n    };\n\n    poll();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FactorId, MultiFactorAssertion } from '../model/public_types';\nimport { debugFail } from '../core/util/assert';\nimport { MultiFactorSessionImpl, MultiFactorSessionType } from './mfa_session';\nimport { FinalizeMfaResponse } from '../api/authentication/mfa';\nimport { AuthInternal } from '../model/auth';\n\nexport abstract class MultiFactorAssertionImpl implements MultiFactorAssertion {\n  protected constructor(readonly factorId: FactorId) {}\n\n  _process(\n    auth: AuthInternal,\n    session: MultiFactorSessionImpl,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    switch (session.type) {\n      case MultiFactorSessionType.ENROLL:\n        return this._finalizeEnroll(auth, session.credential, displayName);\n      case MultiFactorSessionType.SIGN_IN:\n        return this._finalizeSignIn(auth, session.credential);\n      default:\n        return debugFail('unexpected MultiFactorSessionType');\n    }\n  }\n\n  abstract _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse>;\n  abstract _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  FactorId,\n  PhoneMultiFactorAssertion\n} from '../../../model/public_types';\n\nimport { MultiFactorAssertionImpl } from '../../../mfa/mfa_assertion';\nimport { AuthInternal } from '../../../model/auth';\nimport { finalizeEnrollPhoneMfa } from '../../../api/account_management/mfa';\nimport { PhoneAuthCredential } from '../../../core/credentials/phone';\nimport {\n  finalizeSignInPhoneMfa,\n  FinalizeMfaResponse\n} from '../../../api/authentication/mfa';\n\n/**\n * {@inheritdoc PhoneMultiFactorAssertion}\n *\n * @public\n */\nexport class PhoneMultiFactorAssertionImpl\n  extends MultiFactorAssertionImpl\n  implements PhoneMultiFactorAssertion {\n  private constructor(private readonly credential: PhoneAuthCredential) {\n    super(FactorId.PHONE);\n  }\n\n  /** @internal */\n  static _fromCredential(\n    credential: PhoneAuthCredential\n  ): PhoneMultiFactorAssertionImpl {\n    return new PhoneMultiFactorAssertionImpl(credential);\n  }\n\n  /** @internal */\n  _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeEnrollPhoneMfa(auth, {\n      idToken,\n      displayName,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeSignInPhoneMfa(auth, {\n      mfaPendingCredential,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n}\n\n/**\n * Provider for generating a {@link PhoneMultiFactorAssertion}.\n *\n * @public\n */\nexport class PhoneMultiFactorGenerator {\n  private constructor() {}\n\n  /**\n   * Provides a {@link PhoneMultiFactorAssertion} to confirm ownership of the phone second factor.\n   *\n   * @param phoneAuthCredential - A credential provided by {@link PhoneAuthProvider.credential}.\n   * @returns A {@link PhoneMultiFactorAssertion} which can be used with\n   * {@link MultiFactorResolver.resolveSignIn}\n   */\n  static assertion(credential: PhoneAuthCredential): PhoneMultiFactorAssertion {\n    return PhoneMultiFactorAssertionImpl._fromCredential(credential);\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface CordovaWindow extends Window {\n  cordova: {\n    plugins: {\n      browsertab: {\n        isAvailable(cb: (available: boolean) => void): void;\n        openUrl(url: string): void;\n        close(): void;\n      };\n    };\n\n    InAppBrowser: {\n      open(url: string, target: string, options: string): InAppBrowserRef;\n    };\n  };\n\n  universalLinks: {\n    subscribe(\n      n: null,\n      cb: (event: Record<string, string> | null) => void\n    ): void;\n  };\n\n  BuildInfo: {\n    readonly packageName: string;\n    readonly displayName: string;\n  };\n\n  handleOpenURL(url: string): void;\n}\n\nexport interface InAppBrowserRef {\n  close?: () => void;\n}\n\nexport function _cordovaWindow(): CordovaWindow {\n  return (window as unknown) as CordovaWindow;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp } from '@firebase/app-exp';\nimport { Auth, Dependencies } from '../../model/public_types';\n\nimport { AuthErrorCode } from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport { _fail } from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { AuthImpl } from './auth_impl';\n\n/**\n * Initializes an Auth instance with fine-grained control over\n * {@link Dependencies}.\n *\n * @remarks\n *\n * This function allows more control over the Auth instance than\n * {@link getAuth}. `getAuth` uses platform-specific defaults to supply\n * the {@link Dependencies}. In general, `getAuth` is the easiest way to\n * initialize Auth and works for most use cases. Use `initializeAuth` if you\n * need control over which persistence layer is used, or to minimize bundle\n * size if you're not using either `signInWithPopup` or `signInWithRedirect`.\n *\n * For example, if your app only uses anonymous accounts and you only want\n * accounts saved for the current session, initialize Auth with:\n *\n * ```js\n * const auth = initializeAuth(app, {\n *   persistence: browserSessionPersistence,\n *   popupRedirectResolver: undefined,\n * });\n * ```\n *\n * @public\n */\nexport function initializeAuth(app: FirebaseApp, deps?: Dependencies): Auth {\n  const provider = _getProvider(app, 'auth-exp');\n\n  if (provider.isInitialized()) {\n    const auth = provider.getImmediate() as AuthImpl;\n    _fail(auth, AuthErrorCode.ALREADY_INITIALIZED);\n  }\n\n  const auth = provider.initialize({ options: deps }) as AuthImpl;\n\n  return auth;\n}\n\nexport function _initializeAuthInstance(\n  auth: AuthImpl,\n  deps?: Dependencies\n): void {\n  const persistence = deps?.persistence || [];\n  const hierarchy = (Array.isArray(persistence)\n    ? persistence\n    : [persistence]\n  ).map<PersistenceInternal>(_getInstance);\n  if (deps?.errorMap) {\n    auth._updateErrorMap(deps.errorMap);\n  }\n\n  // This promise is intended to float; auth initialization happens in the\n  // background, meanwhile the auth object may be used by the app.\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  auth._initializeWithPersistence(hierarchy, deps?.popupRedirectResolver);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider } from '../../model/public_types';\nimport { AuthErrorCode } from '../../core/errors';\nimport {\n  debugAssert,\n  _assert,\n  _createError,\n  _fail\n} from '../../core/util/assert';\nimport { _isAndroid, _isIOS, _isIOS7Or8 } from '../../core/util/browser';\nimport { _getRedirectUrl } from '../../core/util/handler';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthEvent } from '../../model/popup_redirect';\nimport { InAppBrowserRef, _cordovaWindow } from '../plugins';\n\n/**\n * How long to wait after the app comes back into focus before concluding that\n * the user closed the sign in tab.\n */\nconst REDIRECT_TIMEOUT_MS = 2000;\n\n/**\n * Generates the URL for the OAuth handler.\n */\nexport async function _generateHandlerUrl(\n  auth: AuthInternal,\n  event: AuthEvent,\n  provider: AuthProvider\n): Promise<string> {\n  // Get the cordova plugins\n  const { BuildInfo } = _cordovaWindow();\n  debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\n  const sessionDigest = await computeSha256(event.sessionId);\n\n  const additionalParams: Record<string, string> = {};\n  if (_isIOS()) {\n    // iOS app identifier\n    additionalParams['ibi'] = BuildInfo.packageName;\n  } else if (_isAndroid()) {\n    // Android app identifier\n    additionalParams['apn'] = BuildInfo.packageName;\n  } else {\n    _fail(auth, AuthErrorCode.OPERATION_NOT_SUPPORTED);\n  }\n\n  // Add the display name if available\n  if (BuildInfo.displayName) {\n    additionalParams['appDisplayName'] = BuildInfo.displayName;\n  }\n\n  // Attached the hashed session ID\n  additionalParams['sessionId'] = sessionDigest;\n  return _getRedirectUrl(\n    auth,\n    provider,\n    event.type,\n    undefined,\n    event.eventId ?? undefined,\n    additionalParams\n  );\n}\n\nexport function _performRedirect(\n  handlerUrl: string\n): Promise<InAppBrowserRef | null> {\n  // Get the cordova plugins\n  const { cordova } = _cordovaWindow();\n\n  return new Promise(resolve => {\n    cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\n      let iabRef: InAppBrowserRef | null = null;\n      if (browserTabIsAvailable) {\n        cordova.plugins.browsertab.openUrl(handlerUrl);\n      } else {\n        // TODO: Return the inappbrowser ref that's returned from the open call\n        iabRef = cordova.InAppBrowser.open(\n          handlerUrl,\n          _isIOS7Or8() ? '_blank' : '_system',\n          'location=yes'\n        );\n      }\n      resolve(iabRef);\n    });\n  });\n}\n\n// Thin interface wrapper to avoid circular dependency with ./events module\ninterface PassiveAuthEventListener {\n  addPassiveListener(cb: () => void): void;\n  removePassiveListener(cb: () => void): void;\n}\n\n/**\n * This function waits for app activity to be seen before resolving. It does\n * this by attaching listeners to various dom events. Once the app is determined\n * to be visible, this promise resolves. AFTER that resolution, the listeners\n * are detached and any browser tabs left open will be closed.\n */\nexport async function _waitForAppResume(\n  auth: AuthInternal,\n  eventListener: PassiveAuthEventListener,\n  iabRef: InAppBrowserRef | null\n): Promise<void> {\n  // Get the cordova plugins\n  const { cordova } = _cordovaWindow();\n\n  let cleanup = (): void => {};\n  try {\n    await new Promise<void>((resolve, reject) => {\n      let onCloseTimer: number | null = null;\n\n      // DEFINE ALL THE CALLBACKS =====\n      function authEventSeen(): void {\n        // Auth event was detected. Resolve this promise and close the extra\n        // window if it's still open.\n        resolve();\n        const closeBrowserTab = cordova.plugins.browsertab?.close;\n        if (typeof closeBrowserTab === 'function') {\n          closeBrowserTab();\n        }\n        // Close inappbrowser emebedded webview in iOS7 and 8 case if still\n        // open.\n        if (typeof iabRef?.close === 'function') {\n          iabRef.close();\n        }\n      }\n\n      function resumed(): void {\n        if (onCloseTimer) {\n          // This code already ran; do not rerun.\n          return;\n        }\n\n        onCloseTimer = window.setTimeout(() => {\n          // Wait two seeconds after resume then reject.\n          reject(_createError(auth, AuthErrorCode.REDIRECT_CANCELLED_BY_USER));\n        }, REDIRECT_TIMEOUT_MS);\n      }\n\n      function visibilityChanged(): void {\n        if (document?.visibilityState === 'visible') {\n          resumed();\n        }\n      }\n\n      // ATTACH ALL THE LISTENERS =====\n      // Listen for the auth event\n      eventListener.addPassiveListener(authEventSeen);\n\n      // Listen for resume and visibility events\n      document.addEventListener('resume', resumed, false);\n      if (_isAndroid()) {\n        document.addEventListener('visibilitychange', visibilityChanged, false);\n      }\n\n      // SETUP THE CLEANUP FUNCTION =====\n      cleanup = () => {\n        eventListener.removePassiveListener(authEventSeen);\n        document.removeEventListener('resume', resumed, false);\n        document.removeEventListener(\n          'visibilitychange',\n          visibilityChanged,\n          false\n        );\n        if (onCloseTimer) {\n          window.clearTimeout(onCloseTimer);\n        }\n      };\n    });\n  } finally {\n    cleanup();\n  }\n}\n\n/**\n * Checks the configuration of the Cordova environment. This has no side effect\n * if the configuration is correct; otherwise it throws an error with the\n * missing plugin.\n */\nexport function _checkCordovaConfiguration(auth: AuthInternal): void {\n  const win = _cordovaWindow();\n  // Check all dependencies installed.\n  // https://github.com/nordnet/cordova-universal-links-plugin\n  // Note that cordova-universal-links-plugin has been abandoned.\n  // A fork with latest fixes is available at:\n  // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\n  _assert(\n    typeof win?.universalLinks?.subscribe === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-universal-links-plugin-fix'\n    }\n  );\n\n  // https://www.npmjs.com/package/cordova-plugin-buildinfo\n  _assert(\n    typeof win?.BuildInfo?.packageName !== 'undefined',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-buildInfo'\n    }\n  );\n\n  // https://github.com/google/cordova-plugin-browsertab\n  _assert(\n    typeof win?.cordova?.plugins?.browsertab?.openUrl === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-browsertab'\n    }\n  );\n  _assert(\n    typeof win?.cordova?.plugins?.browsertab?.isAvailable === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-browsertab'\n    }\n  );\n\n  // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\n  _assert(\n    typeof win?.cordova?.InAppBrowser?.open === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-inappbrowser'\n    }\n  );\n}\n\n/**\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\n * protocol).\n */\nasync function computeSha256(sessionId: string): Promise<string> {\n  const bytes = stringToArrayBuffer(sessionId);\n\n  // TODO: For IE11 crypto has a different name and this operation comes back\n  //       as an object, not a promise. This is the old proposed standard that\n  //       is used by IE11:\n  // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\n  const buf = await crypto.subtle.digest('SHA-256', bytes);\n  const arr = Array.from(new Uint8Array(buf));\n  return arr.map(num => num.toString(16).padStart(2, '0')).join('');\n}\n\nfunction stringToArrayBuffer(str: string): Uint8Array {\n  // This function is only meant to deal with an ASCII charset and makes\n  // certain simplifying assumptions.\n  debugAssert(\n    /[0-9a-zA-Z]+/.test(str),\n    'Can only convert alpha-numeric strings'\n  );\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder().encode(str);\n  }\n\n  const buff = new ArrayBuffer(str.length);\n  const view = new Uint8Array(buff);\n  for (let i = 0; i < str.length; i++) {\n    view[i] = str.charCodeAt(i);\n  }\n  return view;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystringDecode } from '@firebase/util';\nimport { AuthEventManager } from '../../core/auth/auth_event_manager';\nimport { AuthErrorCode } from '../../core/errors';\nimport { PersistedBlob, PersistenceInternal } from '../../core/persistence';\nimport {\n  KeyName,\n  _persistenceKeyName\n} from '../../core/persistence/persistence_user_manager';\nimport { _createError } from '../../core/util/assert';\nimport { _getInstance } from '../../core/util/instantiator';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthEvent, AuthEventType } from '../../model/popup_redirect';\nimport { browserLocalPersistence } from '../../platform_browser/persistence/local_storage';\n\nconst SESSION_ID_LENGTH = 20;\n\n/** Custom AuthEventManager that adds passive listeners to events */\nexport class CordovaAuthEventManager extends AuthEventManager {\n  private readonly passiveListeners = new Set<(e: AuthEvent) => void>();\n  private resolveInialized!: () => void;\n  private initPromise = new Promise<void>(resolve => {\n    this.resolveInialized = resolve;\n  });\n\n  addPassiveListener(cb: (e: AuthEvent) => void): void {\n    this.passiveListeners.add(cb);\n  }\n\n  removePassiveListener(cb: (e: AuthEvent) => void): void {\n    this.passiveListeners.delete(cb);\n  }\n\n  // In a Cordova environment, this manager can live through multiple redirect\n  // operations\n  resetRedirect(): void {\n    this.queuedRedirectEvent = null;\n    this.hasHandledPotentialRedirect = false;\n  }\n\n  /** Override the onEvent method */\n  onEvent(event: AuthEvent): boolean {\n    this.resolveInialized();\n    this.passiveListeners.forEach(cb => cb(event));\n    return super.onEvent(event);\n  }\n\n  async initialized(): Promise<void> {\n    await this.initPromise;\n  }\n}\n\n/**\n * Generates a (partial) {@link AuthEvent}.\n */\nexport function _generateNewEvent(\n  auth: AuthInternal,\n  type: AuthEventType,\n  eventId: string | null = null\n): AuthEvent {\n  return {\n    type,\n    eventId,\n    urlResponse: null,\n    sessionId: generateSessionId(),\n    postBody: null,\n    tenantId: auth.tenantId,\n    error: _createError(auth, AuthErrorCode.NO_AUTH_EVENT)\n  };\n}\n\nexport function _savePartialEvent(\n  auth: AuthInternal,\n  event: AuthEvent\n): Promise<void> {\n  return storage()._set(\n    persistenceKey(auth),\n    (event as object) as PersistedBlob\n  );\n}\n\nexport async function _getAndRemoveEvent(\n  auth: AuthInternal\n): Promise<AuthEvent | null> {\n  const event = (await storage()._get(\n    persistenceKey(auth)\n  )) as AuthEvent | null;\n  if (event) {\n    await storage()._remove(persistenceKey(auth));\n  }\n  return event;\n}\n\nexport function _eventFromPartialAndUrl(\n  partialEvent: AuthEvent,\n  url: string\n): AuthEvent | null {\n  // Parse the deep link within the dynamic link URL.\n  const callbackUrl = _getDeepLinkFromCallback(url);\n  // Confirm it is actually a callback URL.\n  // Currently the universal link will be of this format:\n  // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\n  // This is a fake URL but is not intended to take the user anywhere\n  // and just redirect to the app.\n  if (callbackUrl.includes('/__/auth/callback')) {\n    // Check if there is an error in the URL.\n    // This mechanism is also used to pass errors back to the app:\n    // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\n    const params = searchParamsOrEmpty(callbackUrl);\n    // Get the error object corresponding to the stringified error if found.\n    const errorObject = params['firebaseError']\n      ? parseJsonOrNull(decodeURIComponent(params['firebaseError']))\n      : null;\n    const code = errorObject?.['code']?.split('auth/')?.[1];\n    const error = code ? _createError(code) : null;\n    if (error) {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        error,\n        urlResponse: null,\n        sessionId: null,\n        postBody: null\n      };\n    } else {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        sessionId: partialEvent.sessionId,\n        urlResponse: callbackUrl,\n        postBody: null\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction generateSessionId(): string {\n  const chars = [];\n  const allowedChars =\n    '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  for (let i = 0; i < SESSION_ID_LENGTH; i++) {\n    const idx = Math.floor(Math.random() * allowedChars.length);\n    chars.push(allowedChars.charAt(idx));\n  }\n  return chars.join('');\n}\n\nfunction storage(): PersistenceInternal {\n  return _getInstance(browserLocalPersistence);\n}\n\nfunction persistenceKey(auth: AuthInternal): string {\n  return _persistenceKeyName(KeyName.AUTH_EVENT, auth.config.apiKey, auth.name);\n}\n\nfunction parseJsonOrNull(json: string): ReturnType<typeof JSON.parse> | null {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n}\n\n// Exported for testing\nexport function _getDeepLinkFromCallback(url: string): string {\n  const params = searchParamsOrEmpty(url);\n  const link = params['link'] ? decodeURIComponent(params['link']) : undefined;\n  // Double link case (automatic redirect)\n  const doubleDeepLink = searchParamsOrEmpty(link)['link'];\n  // iOS custom scheme links.\n  const iOSDeepLink = params['deep_link_id']\n    ? decodeURIComponent(params['deep_link_id'])\n    : undefined;\n  const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n\n/**\n * Optimistically tries to get search params from a string, or else returns an\n * empty search params object.\n */\nfunction searchParamsOrEmpty(url: string | undefined): Record<string, string> {\n  if (!url?.includes('?')) {\n    return {};\n  }\n\n  const [_, ...rest] = url.split('?');\n  return querystringDecode(rest.join('?')) as Record<string, string>;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, PopupRedirectResolver } from '../../model/public_types';\nimport { browserSessionPersistence } from '../../platform_browser/persistence/session_storage';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEvent,\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { AuthPopup } from '../../platform_browser/util/popup';\nimport { _createError, _fail } from '../../core/util/assert';\nimport { AuthErrorCode } from '../../core/errors';\nimport {\n  _checkCordovaConfiguration,\n  _generateHandlerUrl,\n  _performRedirect,\n  _waitForAppResume\n} from './utils';\nimport {\n  CordovaAuthEventManager,\n  _eventFromPartialAndUrl,\n  _generateNewEvent,\n  _getAndRemoveEvent,\n  _savePartialEvent\n} from './events';\nimport { AuthEventManager } from '../../core/auth/auth_event_manager';\nimport { _getRedirectResult } from '../../platform_browser/strategies/redirect';\nimport { _clearRedirectOutcomes } from '../../core/strategies/redirect';\nimport { _cordovaWindow } from '../plugins';\n\n/**\n * How long to wait for the initial auth event before concluding no\n * redirect pending\n */\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\n\nclass CordovaPopupRedirectResolver implements PopupRedirectResolverInternal {\n  readonly _redirectPersistence = browserSessionPersistence;\n  readonly _shouldInitProactively = true; // This is lightweight for Cordova\n  private readonly eventManagers = new Map<string, CordovaAuthEventManager>();\n\n  _completeRedirectFn = _getRedirectResult;\n\n  async _initialize(auth: AuthInternal): Promise<CordovaAuthEventManager> {\n    const key = auth._key();\n    let manager = this.eventManagers.get(key);\n    if (!manager) {\n      manager = new CordovaAuthEventManager(auth);\n      this.eventManagers.set(key, manager);\n      this.attachCallbackListeners(auth, manager);\n    }\n    return manager;\n  }\n\n  _openPopup(auth: AuthInternal): Promise<AuthPopup> {\n    _fail(auth, AuthErrorCode.OPERATION_NOT_SUPPORTED);\n  }\n\n  async _openRedirect(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<void> {\n    _checkCordovaConfiguration(auth);\n    const manager = await this._initialize(auth);\n    await manager.initialized();\n\n    // Reset the persisted redirect states. This does not matter on Web where\n    // the redirect always blows away application state entirely. On Cordova,\n    // the app maintains control flow through the redirect.\n    manager.resetRedirect();\n    _clearRedirectOutcomes();\n\n    const event = _generateNewEvent(auth, authType, eventId);\n    await _savePartialEvent(auth, event);\n    const url = await _generateHandlerUrl(auth, event, provider);\n    const iabRef = await _performRedirect(url);\n    return _waitForAppResume(auth, manager, iabRef);\n  }\n\n  _isIframeWebStorageSupported(\n    _auth: AuthInternal,\n    _cb: (support: boolean) => unknown\n  ): void {\n    throw new Error('Method not implemented.');\n  }\n\n  _originValidation(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  private attachCallbackListeners(\n    auth: AuthInternal,\n    manager: AuthEventManager\n  ): void {\n    // Get the global plugins\n    const { universalLinks, handleOpenURL, BuildInfo } = _cordovaWindow();\n\n    const noEventTimeout = setTimeout(async () => {\n      // We didn't see that initial event. Clear any pending object and\n      // dispatch no event\n      await _getAndRemoveEvent(auth);\n      manager.onEvent(generateNoEvent());\n    }, INITIAL_EVENT_TIMEOUT_MS);\n\n    const universalLinksCb = async (\n      eventData: Record<string, string> | null\n    ): Promise<void> => {\n      // We have an event so we can clear the no event timeout\n      clearTimeout(noEventTimeout);\n\n      const partialEvent = await _getAndRemoveEvent(auth);\n      let finalEvent: AuthEvent | null = null;\n      if (partialEvent && eventData?.['url']) {\n        finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\n      }\n\n      // If finalEvent is never filled, trigger with no event\n      manager.onEvent(finalEvent || generateNoEvent());\n    };\n\n    // Universal links subscriber doesn't exist for iOS, so we need to check\n    if (\n      typeof universalLinks !== 'undefined' &&\n      typeof universalLinks.subscribe === 'function'\n    ) {\n      universalLinks.subscribe(null, universalLinksCb);\n    }\n\n    // iOS 7 or 8 custom URL schemes.\n    // This is also the current default behavior for iOS 9+.\n    // For this to work, cordova-plugin-customurlscheme needs to be installed.\n    // https://github.com/EddyVerbruggen/Custom-URL-scheme\n    // Do not overwrite the existing developer's URL handler.\n    const existingHandleOpenURL = handleOpenURL;\n    const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\n    _cordovaWindow().handleOpenURL = async url => {\n      if (url.toLowerCase().startsWith(packagePrefix)) {\n        // We want this intentionally to float\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        universalLinksCb({ url });\n      }\n      // Call the developer's handler if it is present.\n      if (typeof existingHandleOpenURL === 'function') {\n        try {\n          existingHandleOpenURL(url);\n        } catch (e) {\n          // This is a developer error. Don't stop the flow of the SDK.\n          console.error(e);\n        }\n      }\n    };\n  }\n}\n\n/**\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\n * based applications.\n *\n * @public\n */\nexport const cordovaPopupRedirectResolver: PopupRedirectResolver = CordovaPopupRedirectResolver;\n\nfunction generateNoEvent(): AuthEvent {\n  return {\n    type: AuthEventType.UNKNOWN,\n    eventId: null,\n    sessionId: null,\n    urlResponse: null,\n    postBody: null,\n    tenantId: null,\n    error: _createError(AuthErrorCode.NO_AUTH_EVENT)\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as impl from '@firebase/auth-exp/internal';\nimport {\n  getUA,\n  isBrowserExtension,\n  isReactNative,\n  isNode,\n  isIE,\n  isIndexedDBAvailable\n} from '@firebase/util';\n\ndeclare global {\n  interface Document {\n    documentMode?: number;\n  }\n}\n\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\n\nfunction _getCurrentScheme(): string | null {\n  return self?.location?.protocol || null;\n}\n\n/**\n * @return {boolean} Whether the current environment is http or https.\n */\nfunction _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\n/**\n * @param {?string=} ua The user agent.\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\n *     Cordova environment.\n */\nexport function _isAndroidOrIosCordovaScheme(ua: string = getUA()): boolean {\n  return !!(\n    (_getCurrentScheme() === 'file:' || _getCurrentScheme() === 'ionic:') &&\n    ua.toLowerCase().match(/iphone|ipad|ipod|android/)\n  );\n}\n\n/**\n * @return {boolean} Whether the environment is a native environment, where\n *     CORS checks do not apply.\n */\nfunction _isNativeEnvironment(): boolean {\n  return isReactNative() || isNode();\n}\n\n/**\n * Checks whether the user agent is IE11.\n * @return {boolean} True if it is IE11.\n */\nfunction _isIe11(): boolean {\n  return isIE() && document?.documentMode === 11;\n}\n\n/**\n * Checks whether the user agent is Edge.\n * @param {string} userAgent The browser user agent string.\n * @return {boolean} True if it is Edge.\n */\nfunction _isEdge(ua: string = getUA()): boolean {\n  return /Edge\\/\\d+/.test(ua);\n}\n\n/**\n * @param {?string=} opt_userAgent The navigator user agent.\n * @return {boolean} Whether local storage is not synchronized between an iframe\n *     and a popup of the same domain.\n */\nfunction _isLocalStorageNotSynchronized(ua: string = getUA()): boolean {\n  return _isIe11() || _isEdge(ua);\n}\n\n/** @return {boolean} Whether web storage is supported. */\nexport function _isWebStorageSupported(): boolean {\n  try {\n    const storage = self.localStorage;\n    const key = impl._generateEventId();\n    if (storage) {\n      // setItem will throw an exception if we cannot access WebStorage (e.g.,\n      // Safari in private mode).\n      storage['setItem'](key, '1');\n      storage['removeItem'](key);\n      // For browsers where iframe web storage does not synchronize with a popup\n      // of the same domain, indexedDB is used for persistent storage. These\n      // browsers include IE11 and Edge.\n      // Make sure it is supported (IE11 and Edge private mode does not support\n      // that).\n      if (_isLocalStorageNotSynchronized()) {\n        // In such browsers, if indexedDB is not supported, an iframe cannot be\n        // notified of the popup sign in result.\n        return isIndexedDBAvailable();\n      }\n      return true;\n    }\n  } catch (e) {\n    // localStorage is not available from a worker. Test availability of\n    // indexedDB.\n    return _isWorker() && isIndexedDBAvailable();\n  }\n  return false;\n}\n\n/**\n * @param {?Object=} global The optional global scope.\n * @return {boolean} Whether current environment is a worker.\n */\nexport function _isWorker(): boolean {\n  // WorkerGlobalScope only defined in worker environment.\n  return (\n    typeof global !== 'undefined' &&\n    'WorkerGlobalScope' in global &&\n    'importScripts' in global\n  );\n}\n\nexport function _isPopupRedirectSupported(): boolean {\n  return (\n    (_isHttpOrHttps() ||\n      isBrowserExtension() ||\n      _isAndroidOrIosCordovaScheme()) &&\n    // React Native with remote debugging reports its location.protocol as\n    // http.\n    !_isNativeEnvironment() &&\n    // Local storage has to be supported for browser popup and redirect\n    // operations to work.\n    _isWebStorageSupported() &&\n    // DOM, popups and redirects are not supported within a worker.\n    !_isWorker()\n  );\n}\n\n/** Quick check that indicates the platform *may* be Cordova */\nexport function _isLikelyCordova(): boolean {\n  return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\n}\n\nexport async function _isCordova(): Promise<boolean> {\n  if (!_isLikelyCordova()) {\n    return false;\n  }\n\n  return new Promise(resolve => {\n    const timeoutId = setTimeout(() => {\n      // We've waited long enough; the telltale Cordova event didn't happen\n      resolve(false);\n    }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\n\n    document.addEventListener('deviceready', () => {\n      clearTimeout(timeoutId);\n      resolve(true);\n    });\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth-exp/internal';\nimport { isIndexedDBAvailable, isNode, isReactNative } from '@firebase/util';\nimport { _isWebStorageSupported, _isWorker } from './platform';\n\nexport const Persistence = {\n  LOCAL: 'local',\n  NONE: 'none',\n  SESSION: 'session'\n};\n\nconst _assert: typeof exp._assert = exp._assert;\n\nconst PERSISTENCE_KEY = 'persistence';\n\n/**\n * Validates that an argument is a valid persistence value. If an invalid type\n * is specified, an error is thrown synchronously.\n */\nexport function _validatePersistenceArgument(\n  auth: exp.Auth,\n  persistence: string\n): void {\n  _assert(\n    Object.values(Persistence).includes(persistence),\n    auth,\n    exp.AuthErrorCode.INVALID_PERSISTENCE\n  );\n  // Validate if the specified type is supported in the current environment.\n  if (isReactNative()) {\n    // This is only supported in a browser.\n    _assert(\n      persistence !== Persistence.SESSION,\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  if (isNode()) {\n    // Only none is supported in Node.js.\n    _assert(\n      persistence === Persistence.NONE,\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  if (_isWorker()) {\n    // In a worker environment, either LOCAL or NONE are supported.\n    // If indexedDB not supported and LOCAL provided, throw an error\n    _assert(\n      persistence === Persistence.NONE ||\n        (persistence === Persistence.LOCAL && isIndexedDBAvailable()),\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  // This is restricted by what the browser supports.\n  _assert(\n    persistence === Persistence.NONE || _isWebStorageSupported(),\n    auth,\n    exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n  );\n}\n\nexport async function _savePersistenceForRedirect(\n  auth: exp.AuthInternal\n): Promise<void> {\n  await auth._initializationPromise;\n\n  const win = getSelfWindow();\n  const key = exp._persistenceKeyName(\n    PERSISTENCE_KEY,\n    auth.config.apiKey,\n    auth.name\n  );\n  if (win?.sessionStorage) {\n    win.sessionStorage.setItem(key, auth._getPersistence());\n  }\n}\n\nexport function _getPersistencesFromRedirect(\n  apiKey: string,\n  appName: string\n): exp.Persistence[] {\n  const win = getSelfWindow();\n  if (!win?.sessionStorage) {\n    return [];\n  }\n\n  const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\n  const persistence = win.sessionStorage.getItem(key);\n\n  switch (persistence) {\n    case Persistence.NONE:\n      return [exp.inMemoryPersistence];\n    case Persistence.LOCAL:\n      return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\n    case Persistence.SESSION:\n      return [exp.browserSessionPersistence];\n    default:\n      return [];\n  }\n}\n\nfunction getSelfWindow(): Window | null {\n  return typeof window !== 'undefined' ? window : null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth-exp/internal';\nimport { _isCordova, _isLikelyCordova } from './platform';\n\nconst _assert: typeof exp._assert = exp._assert;\nconst BROWSER_RESOLVER: exp.PopupRedirectResolverInternal = exp._getInstance(\n  exp.browserPopupRedirectResolver\n);\nconst CORDOVA_RESOLVER: exp.PopupRedirectResolverInternal = exp._getInstance(\n  exp.cordovaPopupRedirectResolver\n);\n\n/** Platform-agnostic popup-redirect resolver */\nexport class CompatPopupRedirectResolver\n  implements exp.PopupRedirectResolverInternal {\n  private underlyingResolver: exp.PopupRedirectResolverInternal | null = null;\n  _redirectPersistence = exp.browserSessionPersistence;\n\n  _completeRedirectFn: (\n    auth: exp.Auth,\n    resolver: exp.PopupRedirectResolver,\n    bypassAuthState: boolean\n  ) => Promise<exp.UserCredential | null> = exp._getRedirectResult;\n\n  async _initialize(auth: exp.AuthImpl): Promise<exp.EventManager> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._initialize(auth);\n  }\n\n  async _openPopup(\n    auth: exp.AuthImpl,\n    provider: exp.AuthProvider,\n    authType: exp.AuthEventType,\n    eventId?: string\n  ): Promise<exp.AuthPopup> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._openPopup(\n      auth,\n      provider,\n      authType,\n      eventId\n    );\n  }\n\n  async _openRedirect(\n    auth: exp.AuthImpl,\n    provider: exp.AuthProvider,\n    authType: exp.AuthEventType,\n    eventId?: string\n  ): Promise<void> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._openRedirect(\n      auth,\n      provider,\n      authType,\n      eventId\n    );\n  }\n\n  _isIframeWebStorageSupported(\n    auth: exp.AuthImpl,\n    cb: (support: boolean) => unknown\n  ): void {\n    this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\n  }\n\n  _originValidation(auth: exp.Auth): Promise<void> {\n    return this.assertedUnderlyingResolver._originValidation(auth);\n  }\n\n  get _shouldInitProactively(): boolean {\n    return _isLikelyCordova() || BROWSER_RESOLVER._shouldInitProactively;\n  }\n\n  private get assertedUnderlyingResolver(): exp.PopupRedirectResolverInternal {\n    _assert(this.underlyingResolver, exp.AuthErrorCode.INTERNAL_ERROR);\n    return this.underlyingResolver;\n  }\n\n  private async selectUnderlyingResolver(): Promise<void> {\n    if (this.underlyingResolver) {\n      return;\n    }\n\n    // We haven't yet determined whether or not we're in Cordova; go ahead\n    // and determine that state now.\n    const isCordova = await _isCordova();\n    this.underlyingResolver = isCordova ? CORDOVA_RESOLVER : BROWSER_RESOLVER;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth-exp/internal';\nimport * as compat from '@firebase/auth-types';\nimport { FirebaseError } from '@firebase/util';\nimport { Auth } from './auth';\nimport { User } from './user';\nimport { unwrap, wrapped } from './wrap';\n\nfunction credentialFromResponse(\n  userCredential: exp.UserCredentialInternal\n): exp.AuthCredential | null {\n  return credentialFromObject(userCredential);\n}\n\nfunction attachExtraErrorFields(auth: exp.Auth, e: FirebaseError): void {\n  // The response contains all fields from the server which may or may not\n  // actually match the underlying type\n  const response = ((e.customData as exp.TaggedWithTokenResponse | undefined)\n    ?._tokenResponse as unknown) as Record<string, string>;\n  if (e.code === 'auth/multi-factor-auth-required') {\n    const mfaErr = e as compat.MultiFactorError;\n    mfaErr.resolver = new MultiFactorResolver(\n      auth,\n      exp.getMultiFactorResolver(auth, e as exp.MultiFactorError)\n    );\n  } else if (response) {\n    const credential = credentialFromObject(e);\n    const credErr = e as compat.AuthError;\n    if (credential) {\n      credErr.credential = credential;\n      credErr.tenantId = response.tenantId || undefined;\n      credErr.email = response.email || undefined;\n      credErr.phoneNumber = response.phoneNumber || undefined;\n    }\n  }\n}\n\nfunction credentialFromObject(\n  object: FirebaseError | exp.UserCredential\n): exp.AuthCredential | null {\n  const { _tokenResponse } = (object instanceof FirebaseError\n    ? object.customData\n    : object) as exp.TaggedWithTokenResponse;\n  if (!_tokenResponse) {\n    return null;\n  }\n\n  // Handle phone Auth credential responses, as they have a different format\n  // from other backend responses (i.e. no providerId). This is also only the\n  // case for user credentials (does not work for errors).\n  if (!(object instanceof FirebaseError)) {\n    if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\n      return exp.PhoneAuthProvider.credentialFromResult(object);\n    }\n  }\n\n  const providerId = _tokenResponse.providerId;\n\n  // Email and password is not supported as there is no situation where the\n  // server would return the password to the client.\n  if (!providerId || providerId === exp.ProviderId.PASSWORD) {\n    return null;\n  }\n\n  let provider: Pick<\n    typeof exp.OAuthProvider,\n    'credentialFromResult' | 'credentialFromError'\n  >;\n  switch (providerId) {\n    case exp.ProviderId.GOOGLE:\n      provider = exp.GoogleAuthProvider;\n      break;\n    case exp.ProviderId.FACEBOOK:\n      provider = exp.FacebookAuthProvider;\n      break;\n    case exp.ProviderId.GITHUB:\n      provider = exp.GithubAuthProvider;\n      break;\n    case exp.ProviderId.TWITTER:\n      provider = exp.TwitterAuthProvider;\n      break;\n    default:\n      const {\n        oauthIdToken,\n        oauthAccessToken,\n        oauthTokenSecret,\n        pendingToken,\n        nonce\n      } = _tokenResponse as exp.SignInWithIdpResponse;\n      if (\n        !oauthAccessToken &&\n        !oauthTokenSecret &&\n        !oauthIdToken &&\n        !pendingToken\n      ) {\n        return null;\n      }\n      // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\n      if (pendingToken) {\n        if (providerId.startsWith('saml.')) {\n          return exp.SAMLAuthCredential._create(providerId, pendingToken);\n        } else {\n          // OIDC and non-default providers excluding Twitter.\n          return exp.OAuthCredential._fromParams({\n            providerId,\n            signInMethod: providerId,\n            pendingToken,\n            idToken: oauthIdToken,\n            accessToken: oauthAccessToken\n          });\n        }\n      }\n      return new exp.OAuthProvider(providerId).credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        rawNonce: nonce\n      });\n  }\n\n  return object instanceof FirebaseError\n    ? provider.credentialFromError(object)\n    : provider.credentialFromResult(object);\n}\n\nexport async function convertCredential(\n  auth: exp.Auth,\n  credentialPromise: Promise<exp.UserCredential>\n): Promise<compat.UserCredential> {\n  let credential: exp.UserCredential;\n  try {\n    credential = await credentialPromise;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      attachExtraErrorFields(auth, e);\n    }\n    throw e;\n  }\n  const { operationType, user } = credential;\n\n  return {\n    operationType,\n    credential: credentialFromResponse(\n      credential as exp.UserCredentialInternal\n    ),\n    additionalUserInfo: exp.getAdditionalUserInfo(\n      credential as exp.UserCredential\n    ),\n    user: User.getOrCreate(user)\n  };\n}\n\nexport async function convertConfirmationResult(\n  auth: exp.Auth,\n  confirmationResultPromise: Promise<exp.ConfirmationResult>\n): Promise<compat.ConfirmationResult> {\n  const confirmationResultExp = await confirmationResultPromise;\n  return {\n    verificationId: confirmationResultExp.verificationId,\n    confirm: (verificationCode: string) =>\n      convertCredential(auth, confirmationResultExp.confirm(verificationCode))\n  };\n}\n\nclass MultiFactorResolver implements compat.MultiFactorResolver {\n  readonly auth: Auth;\n  constructor(\n    auth: exp.Auth,\n    private readonly resolver: exp.MultiFactorResolver\n  ) {\n    this.auth = wrapped(auth);\n  }\n\n  get session(): compat.MultiFactorSession {\n    return this.resolver.session;\n  }\n\n  get hints(): compat.MultiFactorInfo[] {\n    return this.resolver.hints;\n  }\n\n  resolveSignIn(\n    assertion: compat.MultiFactorAssertion\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      unwrap(this.auth),\n      this.resolver.resolveSignIn(assertion as exp.MultiFactorAssertion)\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Forward direction wrapper from Compat --unwrap-> Exp */\nexport interface Wrapper<T> {\n  unwrap(): T;\n}\n\n/** Reverse direction wrapper from Exp --wrapped--> Compat */\nexport interface ReverseWrapper<T> {\n  wrapped(): T;\n}\n\nexport function unwrap<T>(object: unknown): T {\n  return (object as Wrapper<T>).unwrap();\n}\n\nexport function wrapped<T>(object: unknown): T {\n  return (object as ReverseWrapper<T>).wrapped();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth-exp/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Compat } from '@firebase/util';\nimport { _savePersistenceForRedirect } from './persistence';\nimport { CompatPopupRedirectResolver } from './popup_redirect';\nimport {\n  convertConfirmationResult,\n  convertCredential\n} from './user_credential';\n\nexport class User implements compat.User, Compat<exp.User> {\n  // Maintain a map so that there's always a 1:1 mapping between new User and\n  // legacy compat users\n  private static readonly USER_MAP = new WeakMap<exp.User, User>();\n\n  readonly multiFactor: compat.MultiFactorUser;\n\n  private constructor(readonly _delegate: exp.User) {\n    this.multiFactor = exp.multiFactor(_delegate);\n  }\n\n  static getOrCreate(user: exp.User): User {\n    if (!User.USER_MAP.has(user)) {\n      User.USER_MAP.set(user, new User(user));\n    }\n\n    return User.USER_MAP.get(user)!;\n  }\n\n  delete(): Promise<void> {\n    return this._delegate.delete();\n  }\n  reload(): Promise<void> {\n    return this._delegate.reload();\n  }\n  toJSON(): object {\n    return this._delegate.toJSON();\n  }\n  getIdTokenResult(forceRefresh?: boolean): Promise<compat.IdTokenResult> {\n    return this._delegate.getIdTokenResult(forceRefresh);\n  }\n  getIdToken(forceRefresh?: boolean): Promise<string> {\n    return this._delegate.getIdToken(forceRefresh);\n  }\n  linkAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.linkWithCredential(credential);\n  }\n  async linkWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.linkWithCredential(this._delegate, credential as exp.AuthCredential)\n    );\n  }\n  async linkWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this.auth,\n      exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier)\n    );\n  }\n  async linkWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.linkWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async linkWithRedirect(provider: compat.AuthProvider): Promise<void> {\n    await _savePersistenceForRedirect(exp._castAuth(this.auth));\n    return exp.linkWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  reauthenticateAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.reauthenticateWithCredential(credential);\n  }\n  async reauthenticateWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      (this.auth as unknown) as exp.Auth,\n      exp.reauthenticateWithCredential(\n        this._delegate,\n        credential as exp.AuthCredential\n      )\n    );\n  }\n  reauthenticateWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this.auth,\n      exp.reauthenticateWithPhoneNumber(\n        this._delegate,\n        phoneNumber,\n        applicationVerifier\n      )\n    );\n  }\n  reauthenticateWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.reauthenticateWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async reauthenticateWithRedirect(\n    provider: compat.AuthProvider\n  ): Promise<void> {\n    await _savePersistenceForRedirect(exp._castAuth(this.auth));\n    return exp.reauthenticateWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  sendEmailVerification(\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.sendEmailVerification(this._delegate, actionCodeSettings);\n  }\n  async unlink(providerId: string): Promise<compat.User> {\n    await exp.unlink(this._delegate, providerId as exp.ProviderId);\n    return this;\n  }\n  updateEmail(newEmail: string): Promise<void> {\n    return exp.updateEmail(this._delegate, newEmail);\n  }\n  updatePassword(newPassword: string): Promise<void> {\n    return exp.updatePassword(this._delegate, newPassword);\n  }\n  updatePhoneNumber(phoneCredential: compat.AuthCredential): Promise<void> {\n    return exp.updatePhoneNumber(\n      this._delegate,\n      phoneCredential as exp.PhoneAuthCredential\n    );\n  }\n  updateProfile(profile: {\n    displayName?: string | null;\n    photoURL?: string | null;\n  }): Promise<void> {\n    return exp.updateProfile(this._delegate, profile);\n  }\n  verifyBeforeUpdateEmail(\n    newEmail: string,\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.verifyBeforeUpdateEmail(\n      this._delegate,\n      newEmail,\n      actionCodeSettings\n    );\n  }\n  get emailVerified(): boolean {\n    return this._delegate.emailVerified;\n  }\n  get isAnonymous(): boolean {\n    return this._delegate.isAnonymous;\n  }\n  get metadata(): compat.UserMetadata {\n    return this._delegate.metadata;\n  }\n  get phoneNumber(): string | null {\n    return this._delegate.phoneNumber;\n  }\n  get providerData(): Array<compat.UserInfo | null> {\n    return this._delegate.providerData;\n  }\n  get refreshToken(): string {\n    return this._delegate.refreshToken;\n  }\n  get tenantId(): string | null {\n    return this._delegate.tenantId;\n  }\n  get displayName(): string | null {\n    return this._delegate.displayName;\n  }\n  get email(): string | null {\n    return this._delegate.email;\n  }\n  get photoURL(): string | null {\n    return this._delegate.photoURL;\n  }\n  get providerId(): string {\n    return this._delegate.providerId;\n  }\n  get uid(): string {\n    return this._delegate.uid;\n  }\n  private get auth(): exp.Auth {\n    return ((this._delegate as exp.UserImpl).auth as unknown) as exp.Auth;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-compat';\nimport * as exp from '@firebase/auth-exp/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Provider } from '@firebase/component';\nimport { ErrorFn, Observer, Unsubscribe } from '@firebase/util';\n\nimport {\n  _validatePersistenceArgument,\n  Persistence,\n  _getPersistencesFromRedirect,\n  _savePersistenceForRedirect\n} from './persistence';\nimport { _isPopupRedirectSupported } from './platform';\nimport { CompatPopupRedirectResolver } from './popup_redirect';\nimport { User } from './user';\nimport {\n  convertConfirmationResult,\n  convertCredential\n} from './user_credential';\nimport { ReverseWrapper, Wrapper } from './wrap';\n\nconst _assert: typeof exp._assert = exp._assert;\n\nexport class Auth\n  implements compat.FirebaseAuth, Wrapper<exp.Auth>, _FirebaseService {\n  readonly _delegate: exp.AuthImpl;\n\n  constructor(readonly app: FirebaseApp, provider: Provider<'auth-exp'>) {\n    if (provider.isInitialized()) {\n      this._delegate = provider.getImmediate() as exp.AuthImpl;\n      this.linkUnderlyingAuth();\n      return;\n    }\n\n    const { apiKey } = app.options;\n    // TODO: platform needs to be determined using heuristics\n    _assert(apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n\n    let persistences: exp.Persistence[] = [exp.inMemoryPersistence];\n\n    // Only deal with persistences in web environments\n    if (typeof window !== 'undefined') {\n      // Note this is slightly different behavior: in this case, the stored\n      // persistence is checked *first* rather than last. This is because we want\n      // to prefer stored persistence type in the hierarchy.\n      persistences = _getPersistencesFromRedirect(apiKey, app.name);\n\n      for (const persistence of [\n        exp.indexedDBLocalPersistence,\n        exp.browserLocalPersistence\n      ]) {\n        if (!persistences.includes(persistence)) {\n          persistences.push(persistence);\n        }\n      }\n    }\n\n    // TODO: platform needs to be determined using heuristics\n    _assert(apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n\n    // Only use a popup/redirect resolver in browser environments\n    const resolver =\n      typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\n    this._delegate = provider.initialize({\n      options: {\n        persistence: persistences,\n        popupRedirectResolver: resolver\n      }\n    }) as exp.AuthImpl;\n\n    this._delegate._updateErrorMap(exp.debugErrorMap);\n    this.linkUnderlyingAuth();\n  }\n\n  get emulatorConfig(): compat.EmulatorConfig | null {\n    return this._delegate.emulatorConfig;\n  }\n\n  get currentUser(): compat.User | null {\n    if (!this._delegate.currentUser) {\n      return null;\n    }\n\n    return User.getOrCreate(this._delegate.currentUser);\n  }\n  get languageCode(): string | null {\n    return this._delegate.languageCode;\n  }\n  get settings(): compat.AuthSettings {\n    return this._delegate.settings;\n  }\n  get tenantId(): string | null {\n    return this._delegate.tenantId;\n  }\n  useDeviceLanguage(): void {\n    this._delegate.useDeviceLanguage();\n  }\n  signOut(): Promise<void> {\n    return this._delegate.signOut();\n  }\n  useEmulator(url: string, options?: { disableWarnings: boolean }): void {\n    exp.useAuthEmulator(this._delegate, url, options);\n  }\n  applyActionCode(code: string): Promise<void> {\n    return exp.applyActionCode(this._delegate, code);\n  }\n\n  checkActionCode(code: string): Promise<compat.ActionCodeInfo> {\n    return exp.checkActionCode(this._delegate, code);\n  }\n\n  confirmPasswordReset(code: string, newPassword: string): Promise<void> {\n    return exp.confirmPasswordReset(this._delegate, code, newPassword);\n  }\n\n  async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.createUserWithEmailAndPassword(this._delegate, email, password)\n    );\n  }\n  fetchProvidersForEmail(email: string): Promise<string[]> {\n    return this.fetchSignInMethodsForEmail(email);\n  }\n  fetchSignInMethodsForEmail(email: string): Promise<string[]> {\n    return exp.fetchSignInMethodsForEmail(this._delegate, email);\n  }\n  isSignInWithEmailLink(emailLink: string): boolean {\n    return exp.isSignInWithEmailLink(this._delegate, emailLink);\n  }\n  async getRedirectResult(): Promise<compat.UserCredential> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const credential = await exp.getRedirectResult(\n      this._delegate,\n      CompatPopupRedirectResolver\n    );\n    if (!credential) {\n      return {\n        credential: null,\n        user: null\n      };\n    }\n    return convertCredential(this._delegate, Promise.resolve(credential));\n  }\n\n  // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n  // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\n  // out of autogenerated documentation pages to reduce accidental misuse.\n  addFrameworkForLogging(framework: string): void {\n    exp.addFrameworkForLogging(this._delegate, framework);\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n    errorFn?: (error: compat.Error) => unknown,\n    completed?: Unsubscribe\n  ): Unsubscribe {\n    const { next, error, complete } = wrapObservers(\n      nextOrObserver,\n      errorFn,\n      completed\n    );\n    return this._delegate.onAuthStateChanged(next!, error, complete);\n  }\n  onIdTokenChanged(\n    nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n    errorFn?: (error: compat.Error) => unknown,\n    completed?: Unsubscribe\n  ): Unsubscribe {\n    const { next, error, complete } = wrapObservers(\n      nextOrObserver,\n      errorFn,\n      completed\n    );\n    return this._delegate.onIdTokenChanged(next!, error, complete);\n  }\n  sendSignInLinkToEmail(\n    email: string,\n    actionCodeSettings: compat.ActionCodeSettings\n  ): Promise<void> {\n    return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\n  }\n  sendPasswordResetEmail(\n    email: string,\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.sendPasswordResetEmail(\n      this._delegate,\n      email,\n      actionCodeSettings || undefined\n    );\n  }\n  async setPersistence(persistence: string): Promise<void> {\n    _validatePersistenceArgument(this._delegate, persistence);\n    let converted;\n    switch (persistence) {\n      case Persistence.SESSION:\n        converted = exp.browserSessionPersistence;\n        break;\n      case Persistence.LOCAL:\n        // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\n        const isIndexedDBFullySupported = await exp\n          ._getInstance<exp.PersistenceInternal>(exp.indexedDBLocalPersistence)\n          ._isAvailable();\n        converted = isIndexedDBFullySupported\n          ? exp.indexedDBLocalPersistence\n          : exp.browserLocalPersistence;\n        break;\n      case Persistence.NONE:\n        converted = exp.inMemoryPersistence;\n        break;\n      default:\n        return exp._fail(exp.AuthErrorCode.ARGUMENT_ERROR, {\n          appName: this._delegate.name\n        });\n    }\n\n    return this._delegate.setPersistence(converted);\n  }\n\n  signInAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.signInWithCredential(credential);\n  }\n  signInAnonymously(): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInAnonymously(this._delegate)\n    );\n  }\n  signInWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithCredential(this._delegate, credential as exp.AuthCredential)\n    );\n  }\n  signInWithCustomToken(token: string): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithCustomToken(this._delegate, token)\n    );\n  }\n  signInWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithEmailAndPassword(this._delegate, email, password)\n    );\n  }\n  signInWithEmailLink(\n    email: string,\n    emailLink?: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithEmailLink(this._delegate, email, emailLink)\n    );\n  }\n  signInWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this._delegate,\n      exp.signInWithPhoneNumber(\n        this._delegate,\n        phoneNumber,\n        applicationVerifier\n      )\n    );\n  }\n  async signInWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    return convertCredential(\n      this._delegate,\n      exp.signInWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async signInWithRedirect(provider: compat.AuthProvider): Promise<void> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n\n    await _savePersistenceForRedirect(this._delegate);\n    return exp.signInWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  updateCurrentUser(user: compat.User | null): Promise<void> {\n    // remove ts-ignore once overloads are defined for exp functions to accept compat objects\n    // @ts-ignore\n    return this._delegate.updateCurrentUser(user);\n  }\n  verifyPasswordResetCode(code: string): Promise<string> {\n    return exp.verifyPasswordResetCode(this._delegate, code);\n  }\n  unwrap(): exp.Auth {\n    return this._delegate;\n  }\n  _delete(): Promise<void> {\n    return this._delegate._delete();\n  }\n  private linkUnderlyingAuth(): void {\n    ((this._delegate as unknown) as ReverseWrapper<Auth>).wrapped = () => this;\n  }\n}\n\nfunction wrapObservers(\n  nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n  error?: (error: compat.Error) => unknown,\n  complete?: Unsubscribe\n): Partial<Observer<exp.User | null>> {\n  let next = nextOrObserver;\n  if (typeof nextOrObserver !== 'function') {\n    ({ next, error, complete } = nextOrObserver);\n  }\n\n  // We know 'next' is now a function\n  const oldNext = next as (a: compat.User | null) => unknown;\n\n  const newNext = (user: exp.User | null): unknown =>\n    oldNext(user && User.getOrCreate(user as exp.User));\n  return {\n    next: newNext,\n    error: error as ErrorFn,\n    complete\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _castAuth } from '../src/core/auth/auth_impl';\nimport { Auth } from '../src/model/public_types';\n\n/**\n * This interface is intended only for use by @firebase/auth-compat-exp, do not use directly\n */\nexport * from '../index';\n\nexport { SignInWithIdpResponse } from '../src/api/authentication/idp';\nexport { AuthErrorCode } from '../src/core/errors';\nexport { PersistenceInternal } from '../src/core/persistence';\nexport { _persistenceKeyName } from '../src/core/persistence/persistence_user_manager';\nexport { UserImpl } from '../src/core/user/user_impl';\nexport { _getInstance } from '../src/core/util/instantiator';\nexport {\n  PopupRedirectResolverInternal,\n  EventManager,\n  AuthEventType\n} from '../src/model/popup_redirect';\nexport { UserCredentialInternal, UserParameters } from '../src/model/user';\nexport { AuthInternal, ConfigInternal } from '../src/model/auth';\nexport { DefaultConfig, AuthImpl, _castAuth } from '../src/core/auth/auth_impl';\n\nexport { ClientPlatform, _getClientVersion } from '../src/core/util/version';\n\nexport { _generateEventId } from '../src/core/util/event_id';\nexport { TaggedWithTokenResponse } from '../src/model/id_token';\nexport { _fail, _assert } from '../src/core/util/assert';\nexport { AuthPopup } from '../src/platform_browser/util/popup';\nexport { _getRedirectResult } from '../src/platform_browser/strategies/redirect';\nexport { cordovaPopupRedirectResolver } from '../src/platform_cordova/popup_redirect/popup_redirect';\nexport { FetchProvider } from '../src/core/util/fetch_provider';\nexport { SAMLAuthCredential } from '../src/core/credentials/saml';\n\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\n// of autogenerated documentation pages to reduce accidental misuse.\nexport function addFrameworkForLogging(auth: Auth, framework: string): void {\n  _castAuth(auth)._logFramework(framework);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, OperationType, UserCredential } from '../../model/public_types';\nimport { signUp } from '../../api/authentication/sign_up';\nimport { UserInternal } from '../../model/user';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\n\n/**\n * Asynchronously signs in as an anonymous user.\n *\n * @remarks\n * If there is already an anonymous user signed in, that user will be returned; otherwise, a\n * new anonymous user identity will be created and returned.\n *\n * @param auth - The Auth instance.\n *\n * @public\n */\nexport async function signInAnonymously(auth: Auth): Promise<UserCredential> {\n  const authInternal = _castAuth(auth);\n  if (authInternal.currentUser?.isAnonymous) {\n    // If an anonymous user is already signed in, no need to sign them in again.\n    return new UserCredentialImpl({\n      user: authInternal.currentUser as UserInternal,\n      providerId: null,\n      operationType: OperationType.SIGN_IN\n    });\n  }\n  const response = await signUp(authInternal, {\n    returnSecureToken: true\n  });\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response,\n    true\n  );\n  await authInternal._updateCurrentUser(userCredential.user);\n  return userCredential;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth-exp/internal';\nimport * as compat from '@firebase/auth-types';\nimport firebase from '@firebase/app-compat';\nimport { Compat } from '@firebase/util';\n\nexport class PhoneAuthProvider\n  implements compat.PhoneAuthProvider, Compat<exp.PhoneAuthProvider> {\n  providerId = 'phone';\n  readonly _delegate: exp.PhoneAuthProvider;\n\n  static PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\n  static PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): compat.AuthCredential {\n    return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\n  }\n\n  constructor() {\n    // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n    this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth!()));\n  }\n\n  verifyPhoneNumber(\n    phoneInfoOptions:\n      | string\n      | compat.PhoneSingleFactorInfoOptions\n      | compat.PhoneMultiFactorEnrollInfoOptions\n      | compat.PhoneMultiFactorSignInInfoOptions,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<string> {\n    return this._delegate.verifyPhoneNumber(\n      // The implementation matches but the types are subtly incompatible\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      phoneInfoOptions as any,\n      applicationVerifier\n    );\n  }\n\n  unwrap(): exp.PhoneAuthProvider {\n    return this._delegate;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, { FirebaseApp } from '@firebase/app-compat';\nimport * as exp from '@firebase/auth-exp/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Compat } from '@firebase/util';\n\nconst _assert: typeof exp._assert = exp._assert;\n\nexport class RecaptchaVerifier\n  implements compat.RecaptchaVerifier, Compat<exp.ApplicationVerifier> {\n  readonly _delegate: exp.RecaptchaVerifier;\n  type: string;\n  constructor(\n    container: HTMLElement | string,\n    parameters?: object | null,\n    app: FirebaseApp = firebase.app()\n  ) {\n    // API key is required for web client RPC calls.\n    _assert(app.options?.apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n    this._delegate = new exp.RecaptchaVerifier(\n      container,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parameters as any,\n\n      // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n      // @ts-ignore\n      app.auth!()\n    );\n    this.type = this._delegate.type;\n  }\n  clear(): void {\n    this._delegate.clear();\n  }\n  render(): Promise<number> {\n    return this._delegate.render();\n  }\n  verify(): Promise<string> {\n    return this._delegate.verify();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\nimport * as impl from '@firebase/auth-exp/internal';\nimport * as externs from '@firebase/auth-exp';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\n\nimport * as types from '@firebase/auth-types';\nimport { name, version } from './package.json';\nimport { Auth } from './src/auth';\nimport { Persistence } from './src/persistence';\nimport { PhoneAuthProvider as CompatAuthProvider } from './src/phone_auth_provider';\nimport { RecaptchaVerifier as CompatRecaptchaVerifier } from './src/recaptcha_verifier';\n\nconst AUTH_TYPE = 'auth-compat';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'auth-compat': types.FirebaseAuth;\n  }\n}\n\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    auth: {\n      (app?: FirebaseApp): types.FirebaseAuth;\n      Auth: typeof types.FirebaseAuth;\n      EmailAuthProvider: typeof types.EmailAuthProvider;\n      EmailAuthProvider_Instance: typeof types.EmailAuthProvider_Instance;\n      FacebookAuthProvider: typeof types.FacebookAuthProvider;\n      FacebookAuthProvider_Instance: typeof types.FacebookAuthProvider_Instance;\n      GithubAuthProvider: typeof types.GithubAuthProvider;\n      GithubAuthProvider_Instance: typeof types.GithubAuthProvider_Instance;\n      GoogleAuthProvider: typeof types.GoogleAuthProvider;\n      GoogleAuthProvider_Instance: typeof types.GoogleAuthProvider_Instance;\n      OAuthProvider: typeof types.OAuthProvider;\n      SAMLAuthProvider: typeof types.SAMLAuthProvider;\n      PhoneAuthProvider: typeof types.PhoneAuthProvider;\n      PhoneAuthProvider_Instance: typeof types.PhoneAuthProvider_Instance;\n      PhoneMultiFactorGenerator: typeof types.PhoneMultiFactorGenerator;\n      RecaptchaVerifier: typeof types.RecaptchaVerifier;\n      RecaptchaVerifier_Instance: typeof types.RecaptchaVerifier_Instance;\n      TwitterAuthProvider: typeof types.TwitterAuthProvider;\n      TwitterAuthProvider_Instance: typeof types.TwitterAuthProvider_Instance;\n    };\n  }\n  interface FirebaseApp {\n    auth?(): types.FirebaseAuth;\n  }\n}\n\n// Create auth components to register with firebase.\n// Provides Auth public APIs.\nfunction registerAuthCompat(instance: _FirebaseNamespace): void {\n  instance.INTERNAL.registerComponent(\n    new Component(\n      AUTH_TYPE,\n      container => {\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app-compat').getImmediate();\n        const authProvider = container.getProvider('auth-exp');\n        return new Auth(app, authProvider);\n      },\n      ComponentType.PUBLIC\n    )\n      .setServiceProps({\n        ActionCodeInfo: {\n          Operation: {\n            EMAIL_SIGNIN: externs.ActionCodeOperation.EMAIL_SIGNIN,\n            PASSWORD_RESET: externs.ActionCodeOperation.PASSWORD_RESET,\n            RECOVER_EMAIL: externs.ActionCodeOperation.RECOVER_EMAIL,\n            REVERT_SECOND_FACTOR_ADDITION:\n              externs.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\n            VERIFY_AND_CHANGE_EMAIL:\n              externs.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n            VERIFY_EMAIL: externs.ActionCodeOperation.VERIFY_EMAIL\n          }\n        },\n        EmailAuthProvider: impl.EmailAuthProvider,\n        FacebookAuthProvider: impl.FacebookAuthProvider,\n        GithubAuthProvider: impl.GithubAuthProvider,\n        GoogleAuthProvider: impl.GoogleAuthProvider,\n        OAuthProvider: impl.OAuthProvider,\n        //   SAMLAuthProvider,\n        PhoneAuthProvider: CompatAuthProvider,\n        PhoneMultiFactorGenerator: impl.PhoneMultiFactorGenerator,\n        RecaptchaVerifier: CompatRecaptchaVerifier,\n        TwitterAuthProvider: impl.TwitterAuthProvider,\n        Auth: {\n          Persistence\n        },\n        AuthCredential: impl.AuthCredential\n        //   'Error': fireauth.AuthError\n      })\n      .setInstantiationMode(InstantiationMode.LAZY)\n      .setMultipleInstances(false)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterAuthCompat(firebase as _FirebaseNamespace);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nconst UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\n\nfunction mapValues(\n  // { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  o: { [key: string]: any },\n  f: (arg0: unknown) => unknown\n): object {\n  const result: { [key: string]: unknown } = {};\n  for (const key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n  return result;\n}\n\n/**\n * Takes data and encodes it in a JSON-friendly way, such that types such as\n * Date are preserved.\n * @internal\n * @param data - Data to encode.\n */\nexport function encode(data: unknown): unknown {\n  if (data == null) {\n    return null;\n  }\n  if (data instanceof Number) {\n    data = data.valueOf();\n  }\n  if (typeof data === 'number' && isFinite(data)) {\n    // Any number in JS is safe to put directly in JSON and parse as a double\n    // without any loss of precision.\n    return data;\n  }\n  if (data === true || data === false) {\n    return data;\n  }\n  if (Object.prototype.toString.call(data) === '[object String]') {\n    return data;\n  }\n  if (Array.isArray(data)) {\n    return data.map(x => encode(x));\n  }\n  if (typeof data === 'function' || typeof data === 'object') {\n    return mapValues(data!, x => encode(x));\n  }\n  // If we got this far, the data is not encodable.\n  throw new Error('Data cannot be encoded in JSON: ' + data);\n}\n\n/**\n * Takes data that's been encoded in a JSON-friendly form and returns a form\n * with richer datatypes, such as Dates, etc.\n * @internal\n * @param json - JSON to convert.\n */\nexport function decode(json: unknown): unknown {\n  if (json == null) {\n    return json;\n  }\n  if ((json as { [key: string]: unknown })['@type']) {\n    switch ((json as { [key: string]: unknown })['@type']) {\n      case LONG_TYPE:\n      // Fall through and handle this the same as unsigned.\n      case UNSIGNED_LONG_TYPE: {\n        // Technically, this could work return a valid number for malformed\n        // data if there was a number followed by garbage. But it's just not\n        // worth all the extra code to detect that case.\n        const value = Number((json as { [key: string]: unknown })['value']);\n        if (isNaN(value)) {\n          throw new Error('Data cannot be decoded from JSON: ' + json);\n        }\n        return value;\n      }\n      default: {\n        throw new Error('Data cannot be decoded from JSON: ' + json);\n      }\n    }\n  }\n  if (Array.isArray(json)) {\n    return json.map(x => decode(x));\n  }\n  if (typeof json === 'function' || typeof json === 'object') {\n    return mapValues(json!, x => decode(x));\n  }\n  // Anything else is safe to return.\n  return json;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Functions.\n */\nexport const FUNCTIONS_TYPE = 'functions-exp';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FunctionsErrorCode } from './public-types';\nimport { decode } from './serializer';\nimport { HttpResponseBody } from './service';\nimport { FirebaseError } from '@firebase/util';\nimport { FUNCTIONS_TYPE } from './constants';\n\n/**\n * Standard error codes for different ways a request can fail, as defined by:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * This map is used primarily to convert from a backend error code string to\n * a client SDK error code string, and make sure it's in the supported set.\n */\nconst errorCodeMap: { [name: string]: FunctionsErrorCode } = {\n  OK: 'ok',\n  CANCELLED: 'cancelled',\n  UNKNOWN: 'unknown',\n  INVALID_ARGUMENT: 'invalid-argument',\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n  NOT_FOUND: 'not-found',\n  ALREADY_EXISTS: 'already-exists',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  FAILED_PRECONDITION: 'failed-precondition',\n  ABORTED: 'aborted',\n  OUT_OF_RANGE: 'out-of-range',\n  UNIMPLEMENTED: 'unimplemented',\n  INTERNAL: 'internal',\n  UNAVAILABLE: 'unavailable',\n  DATA_LOSS: 'data-loss'\n};\n\n/**\n * An explicit error that can be thrown from a handler to send an error to the\n * client that called the function.\n */\nexport class FunctionsError extends FirebaseError {\n  constructor(\n    /**\n     * A standard error code that will be returned to the client. This also\n     * determines the HTTP status code of the response, as defined in code.proto.\n     */\n    code: FunctionsErrorCode,\n    message?: string,\n    /**\n     * Extra data to be converted to JSON and included in the error response.\n     */\n    readonly details?: unknown\n  ) {\n    super(`${FUNCTIONS_TYPE}/${code}`, message || '');\n  }\n}\n\n/**\n * Takes an HTTP status code and returns the corresponding ErrorCode.\n * This is the standard HTTP status code -> error mapping defined in:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * @param status An HTTP status code.\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\n */\nfunction codeForHTTPStatus(status: number): FunctionsErrorCode {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n  switch (status) {\n    case 0:\n      // This can happen if the server returns 500.\n      return 'internal';\n    case 400:\n      return 'invalid-argument';\n    case 401:\n      return 'unauthenticated';\n    case 403:\n      return 'permission-denied';\n    case 404:\n      return 'not-found';\n    case 409:\n      return 'aborted';\n    case 429:\n      return 'resource-exhausted';\n    case 499:\n      return 'cancelled';\n    case 500:\n      return 'internal';\n    case 501:\n      return 'unimplemented';\n    case 503:\n      return 'unavailable';\n    case 504:\n      return 'deadline-exceeded';\n    default: // ignore\n  }\n  return 'unknown';\n}\n\n/**\n * Takes an HTTP response and returns the corresponding Error, if any.\n */\nexport function _errorForResponse(\n  status: number,\n  bodyJSON: HttpResponseBody | null\n): Error | null {\n  let code = codeForHTTPStatus(status);\n\n  // Start with reasonable defaults from the status code.\n  let description: string = code;\n\n  let details: unknown = undefined;\n\n  // Then look through the body for explicit details.\n  try {\n    const errorJSON = bodyJSON && bodyJSON.error;\n    if (errorJSON) {\n      const status = errorJSON.status;\n      if (typeof status === 'string') {\n        if (!errorCodeMap[status]) {\n          // They must've included an unknown error code in the body.\n          return new FunctionsError('internal', 'internal');\n        }\n        code = errorCodeMap[status];\n\n        // TODO(klimt): Add better default descriptions for error enums.\n        // The default description needs to be updated for the new code.\n        description = status;\n      }\n\n      const message = errorJSON.message;\n      if (typeof message === 'string') {\n        description = message;\n      }\n\n      details = errorJSON.details;\n      if (details !== undefined) {\n        details = decode(details);\n      }\n    }\n  } catch (e) {\n    // If we couldn't parse explicit error data, that's fine.\n  }\n\n  if (code === 'ok') {\n    // Technically, there's an edge case where a developer could explicitly\n    // return an error code of OK, and we will treat it as success, but that\n    // seems reasonable.\n    return null;\n  }\n\n  return new FunctionsError(code, description, details);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  FirebaseMessaging,\n  FirebaseMessagingName\n} from '@firebase/messaging-types';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\n/**\n * The metadata that should be supplied with function calls.\n * @internal\n */\nexport interface Context {\n  authToken?: string;\n  messagingToken?: string;\n}\n\n/**\n * Helper class to get metadata that should be included with a function call.\n * @internal\n */\nexport class ContextProvider {\n  private auth: FirebaseAuthInternal | null = null;\n  private messaging: FirebaseMessaging | null = null;\n  constructor(\n    authProvider: Provider<FirebaseAuthInternalName>,\n    messagingProvider: Provider<FirebaseMessagingName>\n  ) {\n    this.auth = authProvider.getImmediate({ optional: true });\n    this.messaging = messagingProvider.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth) {\n      authProvider.get().then(\n        auth => (this.auth = auth),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n\n    if (!this.messaging) {\n      messagingProvider.get().then(\n        messaging => (this.messaging = messaging),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n  }\n\n  async getAuthToken(): Promise<string | undefined> {\n    if (!this.auth) {\n      return undefined;\n    }\n\n    try {\n      const token = await this.auth.getToken();\n      return token?.accessToken;\n    } catch (e) {\n      // If there's any error when trying to get the auth token, leave it off.\n      return undefined;\n    }\n  }\n\n  async getMessagingToken(): Promise<string | undefined> {\n    if (\n      !this.messaging ||\n      !('Notification' in self) ||\n      Notification.permission !== 'granted'\n    ) {\n      return undefined;\n    }\n\n    try {\n      return this.messaging.getToken();\n    } catch (e) {\n      // We don't warn on this, because it usually means messaging isn't set up.\n      // console.warn('Failed to retrieve instance id token.', e);\n\n      // If there's any error when trying to get the token, leave it off.\n      return undefined;\n    }\n  }\n\n  async getContext(): Promise<Context> {\n    const authToken = await this.getAuthToken();\n    const messagingToken = await this.getMessagingToken();\n    return { authToken, messagingToken };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-exp';\nimport {\n  HttpsCallable,\n  HttpsCallableResult,\n  HttpsCallableOptions\n} from './public-types';\nimport { _errorForResponse, FunctionsError } from './error';\nimport { ContextProvider } from './context';\nimport { encode, decode } from './serializer';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { FirebaseMessagingName } from '@firebase/messaging-types';\n\nexport const DEFAULT_REGION = 'us-central1';\n\n/**\n * The response to an http request.\n */\ninterface HttpResponse {\n  status: number;\n  json: HttpResponseBody | null;\n}\n/**\n * Describes the shape of the HttpResponse body.\n * It makes functions that would otherwise take {} able to access the\n * possible elements in the body more easily\n */\nexport interface HttpResponseBody {\n  data?: unknown;\n  result?: unknown;\n  error?: {\n    message?: unknown;\n    status?: unknown;\n    details?: unknown;\n  };\n}\n\n/**\n * Returns a Promise that will be rejected after the given duration.\n * The error will be of type FunctionsError.\n *\n * @param millis Number of milliseconds to wait before rejecting.\n */\nfunction failAfter(millis: number): Promise<never> {\n  return new Promise((_, reject) => {\n    setTimeout(() => {\n      reject(new FunctionsError('deadline-exceeded', 'deadline-exceeded'));\n    }, millis);\n  });\n}\n\n/**\n * The main class for the Firebase Functions SDK.\n * @internal\n */\nexport class FunctionsService implements _FirebaseService {\n  readonly contextProvider: ContextProvider;\n  emulatorOrigin: string | null = null;\n  cancelAllRequests: Promise<void>;\n  deleteService!: () => Promise<void>;\n  region: string;\n  customDomain: string | null;\n\n  /**\n   * Creates a new Functions service for the given app.\n   * @param app - The FirebaseApp to use.\n   */\n  constructor(\n    readonly app: FirebaseApp,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    messagingProvider: Provider<FirebaseMessagingName>,\n    regionOrCustomDomain: string = DEFAULT_REGION,\n    readonly fetchImpl: typeof fetch\n  ) {\n    this.contextProvider = new ContextProvider(authProvider, messagingProvider);\n    // Cancels all ongoing requests when resolved.\n    this.cancelAllRequests = new Promise(resolve => {\n      this.deleteService = () => {\n        return Promise.resolve(resolve());\n      };\n    });\n\n    // Resolve the region or custom domain overload by attempting to parse it.\n    try {\n      const url = new URL(regionOrCustomDomain);\n      this.customDomain = url.origin;\n      this.region = DEFAULT_REGION;\n    } catch (e) {\n      this.customDomain = null;\n      this.region = regionOrCustomDomain;\n    }\n  }\n\n  _delete(): Promise<void> {\n    return this.deleteService();\n  }\n\n  /**\n   * Returns the URL for a callable with the given name.\n   * @param name - The name of the callable.\n   * @internal\n   */\n  _url(name: string): string {\n    const projectId = this.app.options.projectId;\n    if (this.emulatorOrigin !== null) {\n      const origin = this.emulatorOrigin;\n      return `${origin}/${projectId}/${this.region}/${name}`;\n    }\n\n    if (this.customDomain !== null) {\n      return `${this.customDomain}/${name}`;\n    }\n\n    return `https://${this.region}-${projectId}.cloudfunctions.net/${name}`;\n  }\n}\n\n/**\n * Modify this instance to communicate with the Cloud Functions emulator.\n *\n * Note: this must be called before this instance has been used to do any operations.\n *\n * @param host The emulator host (ex: localhost)\n * @param port The emulator port (ex: 5001)\n * @public\n */\nexport function useFunctionsEmulator(\n  functionsInstance: FunctionsService,\n  host: string,\n  port: number\n): void {\n  functionsInstance.emulatorOrigin = `http://${host}:${port}`;\n}\n\n/**\n * Returns a reference to the callable https trigger with the given name.\n * @param name - The name of the trigger.\n * @public\n */\nexport function httpsCallable<RequestData, ResponseData>(\n  functionsInstance: FunctionsService,\n  name: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData> {\n  return (data => {\n    return call(functionsInstance, name, data, options || {});\n  }) as HttpsCallable<RequestData, ResponseData>;\n}\n\n/**\n * Does an HTTP POST and returns the completed response.\n * @param url The url to post to.\n * @param body The JSON body of the post.\n * @param headers The HTTP headers to include in the request.\n * @return A Promise that will succeed when the request finishes.\n */\nasync function postJSON(\n  url: string,\n  body: unknown,\n  headers: { [key: string]: string },\n  fetchImpl: typeof fetch\n): Promise<HttpResponse> {\n  headers['Content-Type'] = 'application/json';\n\n  let response: Response;\n  try {\n    response = await fetchImpl(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers\n    });\n  } catch (e) {\n    // This could be an unhandled error on the backend, or it could be a\n    // network error. There's no way to know, since an unhandled error on the\n    // backend will fail to set the proper CORS header, and thus will be\n    // treated as a network error by fetch.\n    return {\n      status: 0,\n      json: null\n    };\n  }\n  let json: HttpResponseBody | null = null;\n  try {\n    json = await response.json();\n  } catch (e) {\n    // If we fail to parse JSON, it will fail the same as an empty body.\n  }\n  return {\n    status: response.status,\n    json\n  };\n}\n\n/**\n * Calls a callable function asynchronously and returns the result.\n * @param name The name of the callable trigger.\n * @param data The data to pass as params to the function.s\n */\nasync function call(\n  functionsInstance: FunctionsService,\n  name: string,\n  data: unknown,\n  options: HttpsCallableOptions\n): Promise<HttpsCallableResult> {\n  const url = functionsInstance._url(name);\n\n  // Encode any special types, such as dates, in the input data.\n  data = encode(data);\n  const body = { data };\n\n  // Add a header for the authToken.\n  const headers: { [key: string]: string } = {};\n  const context = await functionsInstance.contextProvider.getContext();\n  if (context.authToken) {\n    headers['Authorization'] = 'Bearer ' + context.authToken;\n  }\n  if (context.messagingToken) {\n    headers['Firebase-Instance-ID-Token'] = context.messagingToken;\n  }\n\n  // Default timeout to 70s, but let the options override it.\n  const timeout = options.timeout || 70000;\n\n  const response = await Promise.race([\n    postJSON(url, body, headers, functionsInstance.fetchImpl),\n    failAfter(timeout),\n    functionsInstance.cancelAllRequests\n  ]);\n\n  // If service was deleted, interrupted response throws an error.\n  if (!response) {\n    throw new FunctionsError(\n      'cancelled',\n      'Firebase Functions instance was deleted.'\n    );\n  }\n\n  // Check for an error status, regardless of http status.\n  const error = _errorForResponse(response.status, response.json);\n  if (error) {\n    throw error;\n  }\n\n  if (!response.json) {\n    throw new FunctionsError('internal', 'Response is not valid JSON object.');\n  }\n\n  let responseData = response.json.data;\n  // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\n  // backwards compatibility.\n  if (typeof responseData === 'undefined') {\n    responseData = response.json.result;\n  }\n  if (typeof responseData === 'undefined') {\n    // Consider the response malformed.\n    throw new FunctionsError('internal', 'Response is missing data field.');\n  }\n\n  // Decode any special types, such as dates, in the returned data.\n  const decodedData = decode(responseData);\n\n  return { data: decodedData };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent } from '@firebase/app-exp';\nimport { FunctionsService } from './service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactory\n} from '@firebase/component';\nimport { FUNCTIONS_TYPE } from './constants';\n\nexport function registerFunctions(fetchImpl: typeof fetch): void {\n  const factory: InstanceFactory<'functions-exp'> = (\n    container: ComponentContainer,\n    { instanceIdentifier: regionOrCustomDomain }\n  ) => {\n    // Dependencies\n    const app = container.getProvider('app-exp').getImmediate();\n    const authProvider = container.getProvider('auth-internal');\n    const messagingProvider = container.getProvider('messaging');\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return new FunctionsService(\n      app,\n      authProvider,\n      messagingProvider,\n      regionOrCustomDomain,\n      fetchImpl\n    );\n  };\n\n  _registerComponent(\n    new Component(\n      FUNCTIONS_TYPE,\n      factory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app-exp';\nimport { FUNCTIONS_TYPE } from './constants';\n\nimport { Provider } from '@firebase/component';\nimport { Functions, HttpsCallableOptions, HttpsCallable } from './public-types';\nimport {\n  FunctionsService,\n  DEFAULT_REGION,\n  useFunctionsEmulator as _useFunctionsEmulator,\n  httpsCallable as _httpsCallable\n} from './service';\nimport { getModularInstance } from '@firebase/util';\n\nexport * from './public-types';\n\n/**\n * Returns a Functions instance for the given app.\n * @param app - The FirebaseApp to use.\n * @param regionOrCustomDomain - one of:\n *   a) The region the callable functions are located in (ex: us-central1)\n *   b) A custom domain hosting the callable functions (ex: https://mydomain.com)\n * @public\n */\nexport function getFunctions(\n  app: FirebaseApp = getApp(),\n  regionOrCustomDomain: string = DEFAULT_REGION\n): Functions {\n  // Dependencies\n  const functionsProvider: Provider<'functions-exp'> = _getProvider(\n    getModularInstance(app),\n    FUNCTIONS_TYPE\n  );\n  const functionsInstance = functionsProvider.getImmediate({\n    identifier: regionOrCustomDomain\n  });\n  return functionsInstance;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Functions emulator.\n *\n * Note: this must be called before this instance has been used to do any operations.\n *\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @public\n */\nexport function useFunctionsEmulator(\n  functionsInstance: Functions,\n  host: string,\n  port: number\n): void {\n  _useFunctionsEmulator(\n    getModularInstance<FunctionsService>(functionsInstance as FunctionsService),\n    host,\n    port\n  );\n}\n\n/**\n * Returns a reference to the callable https trigger with the given name.\n * @param name - The name of the trigger.\n * @public\n */\nexport function httpsCallable<RequestData = unknown, ResponseData = unknown>(\n  functionsInstance: Functions,\n  name: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData> {\n  return _httpsCallable<RequestData, ResponseData>(\n    getModularInstance<FunctionsService>(functionsInstance as FunctionsService),\n    name,\n    options\n  );\n}\n","/**\n * Cloud Functions for Firebase\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app-exp';\nimport { registerFunctions } from './config';\n\nimport { name, version } from '../package.json';\n\nexport * from './api';\n\nregisterFunctions(fetch.bind(self));\nregisterVersion(name, version);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseFunctions, HttpsCallable } from '@firebase/functions-types';\nimport {\n  httpsCallable as httpsCallableExp,\n  useFunctionsEmulator as useFunctionsEmulatorExp,\n  HttpsCallableOptions,\n  Functions as FunctionsServiceExp\n} from '@firebase/functions-exp';\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-compat';\nimport { FirebaseError } from '@firebase/util';\n\nexport class FunctionsService implements FirebaseFunctions, _FirebaseService {\n  /**\n   * For testing.\n   * @internal\n   */\n  _region: string;\n  /**\n   * For testing.\n   * @internal\n   */\n  _customDomain: string | null;\n\n  constructor(\n    public app: FirebaseApp,\n    readonly _delegate: FunctionsServiceExp\n  ) {\n    this._region = this._delegate.region;\n    this._customDomain = this._delegate.customDomain;\n  }\n  httpsCallable(name: string, options?: HttpsCallableOptions): HttpsCallable {\n    return httpsCallableExp(this._delegate, name, options);\n  }\n  /**\n   * Deprecated in pre-modularized repo, does not exist in modularized\n   * functions package, need to convert to \"host\" and \"port\" args that\n   * `useFunctionsEmulatorExp` takes.\n   * @deprecated\n   */\n  useFunctionsEmulator(origin: string): void {\n    const match = origin.match('[a-zA-Z]+://([a-zA-Z0-9.-]+)(?::([0-9]+))?');\n    if (match == null) {\n      throw new FirebaseError(\n        'functions',\n        'No origin provided to useFunctionsEmulator()'\n      );\n    }\n    if (match[2] == null) {\n      throw new FirebaseError(\n        'functions',\n        'Port missing in origin provided to useFunctionsEmulator()'\n      );\n    }\n    return useFunctionsEmulatorExp(this._delegate, match[1], Number(match[2]));\n  }\n  useEmulator(host: string, port: number): void {\n    return useFunctionsEmulatorExp(this._delegate, host, port);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, {\n  _FirebaseNamespace,\n  FirebaseApp\n} from '@firebase/app-compat';\nimport { FunctionsService } from './service';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\nimport { Functions as FunctionsServiceExp } from '@firebase/functions-exp';\n\nconst DEFAULT_REGION = 'us-central1';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'app-compat': FirebaseApp;\n    'functions-compat': FunctionsService;\n    'functions-exp': FunctionsServiceExp;\n  }\n}\n\nconst factory: InstanceFactory<'functions-compat'> = (\n  container: ComponentContainer,\n  { instanceIdentifier: regionOrCustomDomain }: InstanceFactoryOptions\n) => {\n  // Dependencies\n  const app = container.getProvider('app-compat').getImmediate();\n  const functionsServiceExp = container\n    .getProvider('functions-exp')\n    .getImmediate({\n      identifier: regionOrCustomDomain ?? DEFAULT_REGION\n    });\n\n  return new FunctionsService(app, functionsServiceExp);\n};\n\nexport function registerFunctions(): void {\n  const namespaceExports = {\n    Functions: FunctionsService\n  };\n  (firebase as _FirebaseNamespace).INTERNAL.registerComponent(\n    new Component('functions-compat', factory, ComponentType.PUBLIC)\n      .setServiceProps(namespaceExports)\n      .setMultipleInstances(true)\n  );\n}\n","function toArray(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\nfunction promisifyRequest(request) {\n  return new Promise(function(resolve, reject) {\n    request.onsuccess = function() {\n      resolve(request.result);\n    };\n\n    request.onerror = function() {\n      reject(request.error);\n    };\n  });\n}\n\nfunction promisifyRequestCall(obj, method, args) {\n  var request;\n  var p = new Promise(function(resolve, reject) {\n    request = obj[method].apply(obj, args);\n    promisifyRequest(request).then(resolve, reject);\n  });\n\n  p.request = request;\n  return p;\n}\n\nfunction promisifyCursorRequestCall(obj, method, args) {\n  var p = promisifyRequestCall(obj, method, args);\n  return p.then(function(value) {\n    if (!value) return;\n    return new Cursor(value, p.request);\n  });\n}\n\nfunction proxyProperties(ProxyClass, targetProp, properties) {\n  properties.forEach(function(prop) {\n    Object.defineProperty(ProxyClass.prototype, prop, {\n      get: function() {\n        return this[targetProp][prop];\n      },\n      set: function(val) {\n        this[targetProp][prop] = val;\n      }\n    });\n  });\n}\n\nfunction proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return this[targetProp][prop].apply(this[targetProp], arguments);\n    };\n  });\n}\n\nfunction proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction Index(index) {\n  this._index = index;\n}\n\nproxyProperties(Index, '_index', [\n  'name',\n  'keyPath',\n  'multiEntry',\n  'unique'\n]);\n\nproxyRequestMethods(Index, '_index', IDBIndex, [\n  'get',\n  'getKey',\n  'getAll',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(Index, '_index', IDBIndex, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nfunction Cursor(cursor, request) {\n  this._cursor = cursor;\n  this._request = request;\n}\n\nproxyProperties(Cursor, '_cursor', [\n  'direction',\n  'key',\n  'primaryKey',\n  'value'\n]);\n\nproxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n  'update',\n  'delete'\n]);\n\n// proxy 'next' methods\n['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n  if (!(methodName in IDBCursor.prototype)) return;\n  Cursor.prototype[methodName] = function() {\n    var cursor = this;\n    var args = arguments;\n    return Promise.resolve().then(function() {\n      cursor._cursor[methodName].apply(cursor._cursor, args);\n      return promisifyRequest(cursor._request).then(function(value) {\n        if (!value) return;\n        return new Cursor(value, cursor._request);\n      });\n    });\n  };\n});\n\nfunction ObjectStore(store) {\n  this._store = store;\n}\n\nObjectStore.prototype.createIndex = function() {\n  return new Index(this._store.createIndex.apply(this._store, arguments));\n};\n\nObjectStore.prototype.index = function() {\n  return new Index(this._store.index.apply(this._store, arguments));\n};\n\nproxyProperties(ObjectStore, '_store', [\n  'name',\n  'keyPath',\n  'indexNames',\n  'autoIncrement'\n]);\n\nproxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'put',\n  'add',\n  'delete',\n  'clear',\n  'get',\n  'getAll',\n  'getKey',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nproxyMethods(ObjectStore, '_store', IDBObjectStore, [\n  'deleteIndex'\n]);\n\nfunction Transaction(idbTransaction) {\n  this._tx = idbTransaction;\n  this.complete = new Promise(function(resolve, reject) {\n    idbTransaction.oncomplete = function() {\n      resolve();\n    };\n    idbTransaction.onerror = function() {\n      reject(idbTransaction.error);\n    };\n    idbTransaction.onabort = function() {\n      reject(idbTransaction.error);\n    };\n  });\n}\n\nTransaction.prototype.objectStore = function() {\n  return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n};\n\nproxyProperties(Transaction, '_tx', [\n  'objectStoreNames',\n  'mode'\n]);\n\nproxyMethods(Transaction, '_tx', IDBTransaction, [\n  'abort'\n]);\n\nfunction UpgradeDB(db, oldVersion, transaction) {\n  this._db = db;\n  this.oldVersion = oldVersion;\n  this.transaction = new Transaction(transaction);\n}\n\nUpgradeDB.prototype.createObjectStore = function() {\n  return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n};\n\nproxyProperties(UpgradeDB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(UpgradeDB, '_db', IDBDatabase, [\n  'deleteObjectStore',\n  'close'\n]);\n\nfunction DB(db) {\n  this._db = db;\n}\n\nDB.prototype.transaction = function() {\n  return new Transaction(this._db.transaction.apply(this._db, arguments));\n};\n\nproxyProperties(DB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(DB, '_db', IDBDatabase, [\n  'close'\n]);\n\n// Add cursor iterators\n// TODO: remove this once browsers do the right thing with promises\n['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n  [ObjectStore, Index].forEach(function(Constructor) {\n    // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n    if (!(funcName in Constructor.prototype)) return;\n\n    Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n      var args = toArray(arguments);\n      var callback = args[args.length - 1];\n      var nativeObject = this._store || this._index;\n      var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n      request.onsuccess = function() {\n        callback(request.result);\n      };\n    };\n  });\n});\n\n// polyfill getAll\n[Index, ObjectStore].forEach(function(Constructor) {\n  if (Constructor.prototype.getAll) return;\n  Constructor.prototype.getAll = function(query, count) {\n    var instance = this;\n    var items = [];\n\n    return new Promise(function(resolve) {\n      instance.iterateCursor(query, function(cursor) {\n        if (!cursor) {\n          resolve(items);\n          return;\n        }\n        items.push(cursor.value);\n\n        if (count !== undefined && items.length == count) {\n          resolve(items);\n          return;\n        }\n        cursor.continue();\n      });\n    });\n  };\n});\n\nexport function openDb(name, version, upgradeCallback) {\n  var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n  var request = p.request;\n\n  if (request) {\n    request.onupgradeneeded = function(event) {\n      if (upgradeCallback) {\n        upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n      }\n    };\n  }\n\n  return p.then(function(db) {\n    return new DB(db);\n  });\n}\n\nexport function deleteDb(name) {\n  return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app-compat';\nimport { name, version } from '../package.json';\nimport { registerFunctions } from './register';\nimport * as types from '@firebase/functions-types';\n\nregisterFunctions();\nfirebase.registerVersion(name, version);\n\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    functions?: {\n      (app?: FirebaseApp): types.FirebaseFunctions;\n      Functions: typeof types.FirebaseFunctions;\n    };\n  }\n  interface FirebaseApp {\n    functions?(regionOrCustomDomain?: string): types.FirebaseFunctions;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n    [index: string]: string | number; // to make Typescript 3.8 happy\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & { customData: ServerErrorData };\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || ((self as unknown) as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { IdChangeCallbackFn } from '../api';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, openDb } from 'idb';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { InstallationEntry } from '../interfaces/installation-entry';\nimport { getKey } from '../util/get-key';\nimport { fidChanged } from './fid-changed';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDB => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDB.oldVersion) {\n        case 0:\n          upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = await objectStore.get(key);\n  await objectStore.put(value, key);\n  await tx.complete;\n\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = await store.get(key);\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.complete;\n\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.complete;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../functions/create-installation-request';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  appConfig: AppConfig\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      appConfig,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  appConfig: AppConfig,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      appConfig,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(appConfig)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  appConfig: AppConfig,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      appConfig,\n      installationEntry\n    );\n    return set(appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(appConfig);\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const {\n      installationEntry,\n      registrationPromise\n    } = await getInstallationEntry(appConfig);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport async function createInstallationRequest(\n  appConfig: AppConfig,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, platformLoggerProvider }: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If platform logger exists, add the platform info string to the header.\n  const platformLogger = platformLoggerProvider.getImmediate({\n    optional: true\n  });\n  if (platformLogger) {\n    headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken = extractAuthTokenInfoFromResponse(\n      responseValue\n    );\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../functions/generate-auth-token-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(installations.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(installations.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(installations.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(installations, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      installations,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(installations.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(installations.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\nimport { FirebaseInstallations } from '../interfaces/public-types';\n\n/**\n * Returns an Installation auth token, identifying the current Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getToken(\n  installations: FirebaseInstallations,\n  forceRefresh = false\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  await completeInstallationRegistration(installationsImpl.appConfig);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  appConfig: AppConfig\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(appConfig);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-exp';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: Array<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId'\n  ];\n\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId!,\n    apiKey: app.options.apiKey!,\n    appId: app.options.appId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, _getProvider } from '@firebase/app-exp';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer\n} from '@firebase/component';\nimport { getId, getToken } from '../api/index';\nimport { _FirebaseInstallationsInternal } from '../interfaces/public-types';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { extractAppConfig } from '../helpers/extract-app-config';\n\nconst INSTALLATIONS_NAME = 'installations-exp';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-exp-internal';\n\nconst publicFactory: InstanceFactory<'installations-exp'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app-exp').getImmediate();\n  // Throws if app isn't configured properly.\n  const appConfig = extractAppConfig(app);\n  const platformLoggerProvider = _getProvider(app, 'platform-logger');\n\n  const installationsImpl: FirebaseInstallationsImpl = {\n    app,\n    appConfig,\n    platformLoggerProvider,\n    _delete: () => Promise.resolve()\n  };\n  return installationsImpl;\n};\n\nconst internalFactory: InstanceFactory<'installations-exp-internal'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app-exp').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n\n  const installationsInternal: _FirebaseInstallationsInternal = {\n    getId: () => getId(installations),\n    getToken: (forceRefresh?: boolean) => getToken(installations, forceRefresh)\n  };\n  return installationsInternal;\n};\n\nexport function registerInstallations(): void {\n  _registerComponent(\n    new Component(INSTALLATIONS_NAME, publicFactory, ComponentType.PUBLIC)\n  );\n  _registerComponent(\n    new Component(\n      INSTALLATIONS_NAME_INTERNAL,\n      internalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { FirebaseInstallations } from '../interfaces/public-types';\n\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nexport async function getId(\n  installations: FirebaseInstallations\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    installationsImpl.appConfig\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(installationsImpl).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * Firebase Installations\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerInstallations } from './functions/config';\nimport { registerVersion } from '@firebase/app-exp';\nimport { name, version } from '../package.json';\n\nexport * from './api';\nexport * from './interfaces/public-types';\n\nregisterInstallations();\nregisterVersion(name, version);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  INDEXED_DB_UNSUPPORTED = 'indexed-db-unsupported',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the firebase SDK.\",\n  [ErrorCode.INDEXED_DB_UNSUPPORTED]:\n    \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-exp';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-exp';\n\nimport { FirebaseAnalyticsInternalName } from '@firebase/analytics-interop-types';\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { MessagePayload, NextFn, Observer } from './interfaces/public-types';\nimport { Provider } from '@firebase/component';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations-exp';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport class MessagingService implements _FirebaseService {\n  readonly app!: FirebaseApp;\n  readonly firebaseDependencies!: FirebaseInternalDependencies;\n  deleteService!: () => Promise<void>;\n\n  swRegistration?: ServiceWorkerRegistration;\n  vapidKey?: string;\n\n  onBackgroundMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  onMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  constructor(\n    app: FirebaseApp,\n    installations: _FirebaseInstallationsInternal,\n    analyticsProvider: Provider<FirebaseAnalyticsInternalName>\n  ) {\n    const appConfig = extractAppConfig(app);\n\n    this.firebaseDependencies = {\n      app,\n      appConfig,\n      installations,\n      analyticsProvider\n    };\n  }\n\n  _delete(): Promise<void> {\n    return this.deleteService();\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n/** Key of FCM Payload in Notification's data field. */\nexport const FCM_MSG = 'FCM_MSG';\n\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const TAG = 'FirebaseMessaging: ';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n}\n\nexport interface NotificationPayloadInternal extends NotificationOptions {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDb, openDb } from 'idb';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (indexedDB as {\n      databases(): Promise<Array<{ name: string; version: number }>>;\n    }).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDb(OLD_DB_NAME, OLD_DB_VERSION, async db => {\n    if (db.oldVersion < 2) {\n      // Database too old, skip migration.\n      return;\n    }\n\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n      // Database did not exist. Nothing to do.\n      return;\n    }\n\n    const objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\n    const value = await objectStore.index('fcmSenderId').get(senderId);\n    await objectStore.clear();\n\n    if (!value) {\n      // No entry in the database, nothing to migrate.\n      return;\n    }\n\n    if (db.oldVersion === 2) {\n      const oldDetails = value as V2TokenDetails;\n\n      if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n        return;\n      }\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime ?? Date.now(),\n        subscriptionOptions: {\n          auth: oldDetails.auth,\n          p256dh: oldDetails.p256dh,\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey:\n            typeof oldDetails.vapidKey === 'string'\n              ? oldDetails.vapidKey\n              : arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 3) {\n      const oldDetails = value as V3TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 4) {\n      const oldDetails = value as V4TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDb(OLD_DB_NAME);\n  await deleteDb('fcm_vapid_details_db');\n  await deleteDb('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, deleteDb, openDb } from 'idb';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from '../helpers/migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDb => {\n      // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n      // because if there are multiple versions between the old version and the current version, we\n      // want ALL the migrations that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDb.oldVersion) {\n        case 0:\n          upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.complete;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDb(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from './idb-manager';\nimport {\n  requestDeleteToken,\n  requestGetToken,\n  requestUpdateToken\n} from './requests';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { MessagingService } from '../messaging-service';\n\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getTokenInternal(\n  messaging: MessagingService\n): Promise<string> {\n  const pushSubscription = await getPushSubscription(\n    messaging.swRegistration!,\n    messaging.vapidKey!\n  );\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey: messaging.vapidKey!,\n    swScope: messaging.swRegistration!.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(\n        messaging.firebaseDependencies!,\n        tokenDetails.token\n      );\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(messaging.firebaseDependencies!, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(messaging, {\n      token: tokenDetails.token,\n      createTime: Date.now(),\n      subscriptionOptions\n    });\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteTokenInternal(\n  messaging: MessagingService\n): Promise<boolean> {\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(\n      messaging.firebaseDependencies,\n      tokenDetails.token\n    );\n    await dbRemove(messaging.firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription = await messaging.swRegistration!.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  messaging: MessagingService,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      messaging.firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteTokenInternal(messaging);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_SW_PATH, DEFAULT_SW_SCOPE } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function registerDefaultSw(\n  messaging: MessagingService\n): Promise<void> {\n  try {\n    messaging.swRegistration = await navigator.serviceWorker.register(\n      DEFAULT_SW_PATH,\n      {\n        scope: DEFAULT_SW_SCOPE\n      }\n    );\n\n    // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n    // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n    // is stuck with the old version. For example,\n    // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n    // sw if there was an update.\n    messaging.swRegistration.update().catch(() => {\n      /* it is non blocking and we don't care if it failed */\n    });\n  } catch (e) {\n    throw ERROR_FACTORY.create(ErrorCode.FAILED_DEFAULT_REGISTRATION, {\n      browserErrorMessage: e.message\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { getTokenInternal } from '../internals/token-manager';\nimport { updateSwReg } from '../helpers/updateSwReg';\nimport { updateVapidKey } from '../helpers/updateVapidKey';\n\nexport async function getToken(\n  messaging: MessagingService,\n  options?: {\n    vapidKey?: string;\n    serviceWorkerRegistration?: ServiceWorkerRegistration;\n  }\n): Promise<string> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (Notification.permission === 'default') {\n    await Notification.requestPermission();\n  }\n\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n  }\n\n  await updateVapidKey(messaging, options?.vapidKey);\n  await updateSwReg(messaging, options?.serviceWorkerRegistration);\n\n  return getTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\n\nexport async function updateVapidKey(\n  messaging: MessagingService,\n  vapidKey?: string | undefined\n): Promise<void> {\n  if (!!vapidKey) {\n    messaging.vapidKey = vapidKey;\n  } else if (!messaging.vapidKey) {\n    messaging.vapidKey = DEFAULT_VAPID_KEY;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { registerDefaultSw } from './registerDefaultSw';\n\nexport async function updateSwReg(\n  messaging: MessagingService,\n  swRegistration?: ServiceWorkerRegistration | undefined\n): Promise<void> {\n  if (!swRegistration && !messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  if (!swRegistration && !!messaging.swRegistration) {\n    return;\n  }\n\n  if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n  }\n\n  messaging.swRegistration = swRegistration;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _getProvider, getApp } from '@firebase/app-exp';\nimport { FirebaseMessaging, MessagePayload } from './interfaces/public-types';\nimport {\n  NextFn,\n  Observer,\n  Unsubscribe,\n  getModularInstance\n} from '@firebase/util';\nimport {\n  onNotificationClick,\n  onPush,\n  onSubChange\n} from './listeners/sw-listeners';\n\nimport { MessagingService } from './messaging-service';\nimport { Provider } from '@firebase/component';\nimport { ServiceWorkerGlobalScope } from './util/sw-types';\nimport { deleteToken as _deleteToken } from './api/deleteToken';\nimport { getToken as _getToken } from './api/getToken';\nimport { onBackgroundMessage as _onBackgroundMessage } from './api/onBackgroundMessage';\nimport { onMessage as _onMessage } from './api/onMessage';\nimport { messageEventListener } from './listeners/window-listener';\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInWindow(\n  app: FirebaseApp = getApp()\n): FirebaseMessaging {\n  app = getModularInstance(app);\n  const messagingProvider: Provider<'messaging-exp'> = _getProvider(\n    app,\n    'messaging-exp'\n  );\n  const messaging = messagingProvider.getImmediate();\n\n  navigator.serviceWorker.addEventListener('message', e =>\n    messageEventListener(messaging as MessagingService, e)\n  );\n\n  return messaging;\n}\n\n/**\n * Retrieves a firebase messaging instance.\n *\n * @returns the firebase messaging instance associated with the provided firebase app.\n *\n */\ndeclare const self: ServiceWorkerGlobalScope;\nexport function getMessagingInSw(app: FirebaseApp): FirebaseMessaging {\n  const messagingProvider: Provider<'messaging-exp'> = _getProvider(\n    app,\n    'messaging-exp'\n  );\n  const messaging = messagingProvider.getImmediate();\n\n  self.addEventListener('push', e => {\n    e.waitUntil(onPush(e, messaging as MessagingService));\n  });\n  self.addEventListener('pushsubscriptionchange', e => {\n    e.waitUntil(onSubChange(e, messaging as MessagingService));\n  });\n  self.addEventListener('notificationclick', e => {\n    e.waitUntil(onNotificationClick(e));\n  });\n\n  return messagingProvider.getImmediate();\n}\n\n/**\n * Subscribes the `FirebaseMessaging` instance to push notifications. Returns an Firebase Cloud\n * Messaging registration token that can be used to send push messages to that `FirebaseMessaging`\n * instance.\n *\n * If a notification permission isn't already granted, this method asks the user for permission. The\n * returned promise rejects if the user does not allow the app to show notifications.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param options.vapidKey - The public server key provided to push services. It is used to\n * authenticate the push subscribers to receive push messages only from sending servers that hold\n * the corresponding private key. If it is not provided, a default VAPID key is used. Note that some\n * push services (Chrome Push Service) require a non-default VAPID key. Therefore, it is recommended\n * to generate and import a VAPID key for your project with\n * {@link https://firebase.google.com/docs/cloud-messaging/js/client#configure_web_credentials_with_fcm | Configure Web Credentials with FCM}.\n * See\n * {@link https://developers.google.com/web/fundamentals/push-notifications/web-push-protocol | The Web Push Protocol}\n * for details on web push services.\n *\n * @param options.serviceWorkerRegistration - The service worker registration for receiving push\n * messaging. If the registration is not provided explicitly, you need to have a\n * `firebase-messaging-sw.js` at your root location. See\n * {@link https://firebase.google.com/docs/cloud-messaging/js/client#retrieve-the-current-registration-token | Retrieve the current registration token}\n * for more details.\n *\n * @returns The promise resolves with an FCM registration token.\n *\n * @public\n */\nexport async function getToken(\n  messaging: FirebaseMessaging,\n  options?: { vapidKey?: string; swReg?: ServiceWorkerRegistration }\n): Promise<string> {\n  messaging = getModularInstance(messaging);\n  return _getToken(messaging as MessagingService, options);\n}\n\n/**\n * Deletes the registration token associated with this `FirebaseMessaging` instance and unsubscribes\n * the `FirebaseMessaging` instance from the push subscription.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n *\n * @returns The promise resolves when the token has been successfully deleted.\n *\n * @public\n */\nexport function deleteToken(messaging: FirebaseMessaging): Promise<boolean> {\n  messaging = getModularInstance(messaging);\n  return _deleteToken(messaging as MessagingService);\n}\n\n/**\n * When a push message is received and the user is currently on a page for your origin, the\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\n * the push message.\n *\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param nextOrObserver - This function, or observer object with `next` defined,\n *     is called when a message is received and the user is currently viewing your page.\n * @returns To stop listening for messages execute this returned function.\n *\n * @public\n */\nexport function onMessage(\n  messaging: FirebaseMessaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Called when a message is received while the app is in the background. An app is considered to be\n * in the background if no active window is displayed.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\n * message is received and the app is currently in the background.\n *\n * @returns To stop listening for messages execute this returned function\n *\n * make it internal to hide it from the browser entry point.\n * @internal\n */\nexport function onBackgroundMessage(\n  messaging: FirebaseMessaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onBackgroundMessage(messaging as MessagingService, nextOrObserver);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { deleteTokenInternal } from '../internals/token-manager';\nimport { registerDefaultSw } from '../helpers/registerDefaultSw';\n\nexport async function deleteToken(\n  messaging: MessagingService\n): Promise<boolean> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (!messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  return deleteTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport {\n  MessagePayload,\n  NextFn,\n  Observer,\n  Unsubscribe\n} from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function onMessage(\n  messaging: MessagingService,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  messaging.onMessageHandler = nextOrObserver;\n\n  return () => {\n    messaging.onMessageHandler = null;\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport {\n  MessagePayload,\n  NextFn,\n  Observer,\n  Unsubscribe\n} from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function onBackgroundMessage(\n  messaging: MessagingService,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  if (self.document !== undefined) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_SW);\n  }\n\n  messaging.onBackgroundMessageHandler = nextOrObserver;\n\n  return () => {\n    messaging.onBackgroundMessageHandler = null;\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { isSwSupported, isWindowSupported } from '../api/isSupported';\n\nimport { MessagingService } from '../messaging-service';\nimport { _registerComponent } from '@firebase/app-exp';\n\nconst WindowMessagingFactory: InstanceFactory<'messaging-exp'> = (\n  container: ComponentContainer\n) => {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported()\n    .then(isSupported => {\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    })\n    .catch(_ => {\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    });\n\n  return new MessagingService(\n    container.getProvider('app-exp').getImmediate(),\n    container.getProvider('installations-exp-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n};\n\nconst SwMessagingFactory: InstanceFactory<'messaging-exp'> = (\n  container: ComponentContainer\n) => {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported()\n    .then(isSupported => {\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    })\n    .catch(_ => {\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    });\n\n  return new MessagingService(\n    container.getProvider('app-exp').getImmediate(),\n    container.getProvider('installations-exp-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n};\n\nexport function registerMessagingInWindow(): void {\n  _registerComponent(\n    new Component('messaging-exp', WindowMessagingFactory, ComponentType.PUBLIC)\n  );\n}\n\nexport function registerMessagingInSw(): void {\n  _registerComponent(\n    new Component('messaging-exp', SwMessagingFactory, ComponentType.PUBLIC)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { validateIndexedDBOpenable } from '@firebase/util';\n\nexport async function isWindowSupported(): Promise<boolean> {\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    (await validateIndexedDBOpenable()) &&\n    'indexedDB' in window &&\n    indexedDB !== null &&\n    navigator.cookieEnabled &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks to see if the required APIs exist within SW Context.\n */\nexport async function isSwSupported(): Promise<boolean> {\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    (await validateIndexedDBOpenable()) &&\n    'indexedDB' in self &&\n    indexedDB !== null &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp as AppCompat,\n  _FirebaseService\n} from '@firebase/app-compat';\nimport {\n  FirebaseMessaging,\n  MessagePayload,\n  deleteToken,\n  getToken,\n  onBackgroundMessage,\n  onMessage\n} from '@firebase/messaging-exp';\nimport { NextFn, Observer, Unsubscribe } from '@firebase/util';\n\nexport interface MessagingCompat {\n  getToken(options?: {\n    vapidKey?: string;\n    serviceWorkerRegistration?: ServiceWorkerRegistration;\n  }): Promise<string>;\n\n  deleteToken(): Promise<boolean>;\n\n  onMessage(\n    nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n  ): Unsubscribe;\n\n  onBackgroundMessage(\n    nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n  ): Unsubscribe;\n}\n\nexport function isSupported(): boolean {\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // Running in ServiceWorker context\n    return isSwSupported();\n  } else {\n    // Assume we are in the window context.\n    return isWindowSupported();\n  }\n}\n\n/**\n * Checks to see if the required APIs exist.\n */\nfunction isWindowSupported(): boolean {\n  return (\n    'indexedDB' in window &&\n    indexedDB !== null &&\n    navigator.cookieEnabled &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks to see if the required APIs exist within SW Context.\n */\nfunction isSwSupported(): boolean {\n  return (\n    'indexedDB' in self &&\n    indexedDB !== null &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\nexport class MessagingCompatImpl implements MessagingCompat, _FirebaseService {\n  swRegistration?: ServiceWorkerRegistration;\n  vapidKey?: string;\n\n  onBackgroundMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  onMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  constructor(readonly app: AppCompat, readonly _delegate: FirebaseMessaging) {\n    this.app = app;\n    this._delegate = _delegate;\n  }\n\n  async getToken(options?: {\n    vapidKey?: string;\n    serviceWorkerRegistration?: ServiceWorkerRegistration;\n  }): Promise<string> {\n    return getToken(this._delegate, options);\n  }\n\n  async deleteToken(): Promise<boolean> {\n    return deleteToken(this._delegate);\n  }\n\n  onMessage(\n    nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n  ): Unsubscribe {\n    return onMessage(this._delegate, nextOrObserver);\n  }\n\n  onBackgroundMessage(\n    nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n  ): Unsubscribe {\n    return onBackgroundMessage(this._delegate, nextOrObserver);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\nimport { MessagingCompatImpl } from './messaging-compat';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'messaging-compat': MessagingCompatImpl;\n  }\n}\n\nconst messagingCompatFactory: InstanceFactory<'messaging-compat'> = (\n  container: ComponentContainer\n) => {\n  return new MessagingCompatImpl(\n    container.getProvider('app-compat').getImmediate(),\n    container.getProvider('messaging-exp').getImmediate()\n  );\n};\n\nexport function registerMessagingCompat(): void {\n  (firebase as _FirebaseNamespace).INTERNAL.registerComponent(\n    new Component(\n      'messaging-compat',\n      messagingCompatFactory,\n      ComponentType.PUBLIC\n    )\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name, version } from '../package.json';\n\nimport firebase from '@firebase/app-compat';\nimport { registerMessagingCompat } from './registerMessagingCompat';\nimport { MessagingCompat } from './messaging-compat';\n\nregisterMessagingCompat();\nfirebase.registerVersion(name, version);\n\n/**\n * Define extension behavior of `registerMessaging`\n */\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    messaging: {\n      (app?: FirebaseApp): MessagingCompat;\n      isSupported(): boolean;\n    };\n  }\n  interface FirebaseApp {\n    messaging(): MessagingCompat;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../package.json';\n\nexport const SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\nexport const TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\nexport const TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\nexport const TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\nexport const OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\n\nexport const FIRST_PAINT_COUNTER_NAME = '_fp';\n\nexport const FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\n\nexport const FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\n\nexport const CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\n\nexport const CONFIG_EXPIRY_LOCAL_STORAGE_KEY =\n  '@firebase/performance/configexpire';\n\nexport const SERVICE = 'performance';\nexport const SERVICE_NAME = 'Performance';\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\n\n// The values and orders of the following enums should not be changed.\nconst enum ServiceWorkerStatus {\n  UNKNOWN = 0,\n  UNSUPPORTED = 1,\n  CONTROLLED = 2,\n  UNCONTROLLED = 3\n}\n\nexport enum VisibilityState {\n  UNKNOWN = 0,\n  VISIBLE = 1,\n  HIDDEN = 2\n}\n\nconst enum EffectiveConnectionType {\n  UNKNOWN = 0,\n  CONNECTION_SLOW_2G = 1,\n  CONNECTION_2G = 2,\n  CONNECTION_3G = 3,\n  CONNECTION_4G = 4\n}\n\n/**\n * NetworkInformation\n *\n * ref: https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation\n */\ninterface NetworkInformation {\n  readonly effectiveType?: 'slow-2g' | '2g' | '3g' | '4g';\n}\n\ninterface NavigatorWithConnection extends Navigator {\n  readonly connection: NetworkInformation;\n}\n\nconst RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nconst ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nconst MAX_ATTRIBUTE_NAME_LENGTH = 40;\nconst MAX_ATTRIBUTE_VALUE_LENGTH = 100;\n\nexport function getServiceWorkerStatus(): ServiceWorkerStatus {\n  const navigator = Api.getInstance().navigator;\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return ServiceWorkerStatus.CONTROLLED;\n    } else {\n      return ServiceWorkerStatus.UNCONTROLLED;\n    }\n  } else {\n    return ServiceWorkerStatus.UNSUPPORTED;\n  }\n}\n\nexport function getVisibilityState(): VisibilityState {\n  const document = Api.getInstance().document;\n  const visibilityState = document.visibilityState;\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\n\nexport function getEffectiveConnectionType(): EffectiveConnectionType {\n  const navigator = Api.getInstance().navigator;\n  const navigatorConnection = (navigator as NavigatorWithConnection).connection;\n  const effectiveType =\n    navigatorConnection && navigatorConnection.effectiveType;\n  switch (effectiveType) {\n    case 'slow-2g':\n      return EffectiveConnectionType.CONNECTION_SLOW_2G;\n    case '2g':\n      return EffectiveConnectionType.CONNECTION_2G;\n    case '3g':\n      return EffectiveConnectionType.CONNECTION_3G;\n    case '4g':\n      return EffectiveConnectionType.CONNECTION_4G;\n    default:\n      return EffectiveConnectionType.UNKNOWN;\n  }\n}\n\nexport function isValidCustomAttributeName(name: string): boolean {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n  }\n  const matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(prefix =>\n    name.startsWith(prefix)\n  );\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\n\nexport function isValidCustomAttributeValue(value: string): boolean {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from '../constants';\n\nexport const enum ErrorCode {\n  TRACE_STARTED_BEFORE = 'trace started',\n  TRACE_STOPPED_BEFORE = 'trace stopped',\n  NONPOSITIVE_TRACE_START_TIME = 'nonpositive trace startTime',\n  NONPOSITIVE_TRACE_DURATION = 'nonpositive trace duration',\n  NO_WINDOW = 'no window',\n  NO_APP_ID = 'no app id',\n  NO_PROJECT_ID = 'no project id',\n  NO_API_KEY = 'no api key',\n  INVALID_CC_LOG = 'invalid cc log',\n  FB_NOT_DEFAULT = 'FB not default',\n  RC_NOT_OK = 'RC response not ok',\n  INVALID_ATTRIBUTE_NAME = 'invalid attribute name',\n  INVALID_ATTRIBUTE_VALUE = 'invalid attribute value',\n  INVALID_CUSTOM_METRIC_NAME = 'invalid custom metric name',\n  INVALID_STRING_MERGER_PARAMETER = 'invalid String merger input',\n  ALREADY_INITIALIZED = 'already initialized'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.TRACE_STARTED_BEFORE]: 'Trace {$traceName} was started before.',\n  [ErrorCode.TRACE_STOPPED_BEFORE]: 'Trace {$traceName} is not running.',\n  [ErrorCode.NONPOSITIVE_TRACE_START_TIME]:\n    'Trace {$traceName} startTime should be positive.',\n  [ErrorCode.NONPOSITIVE_TRACE_DURATION]:\n    'Trace {$traceName} duration should be positive.',\n  [ErrorCode.NO_WINDOW]: 'Window is not available.',\n  [ErrorCode.NO_APP_ID]: 'App id is not available.',\n  [ErrorCode.NO_PROJECT_ID]: 'Project id is not available.',\n  [ErrorCode.NO_API_KEY]: 'Api key is not available.',\n  [ErrorCode.INVALID_CC_LOG]: 'Attempted to queue invalid cc event',\n  [ErrorCode.FB_NOT_DEFAULT]:\n    'Performance can only start when Firebase app instance is the default one.',\n  [ErrorCode.RC_NOT_OK]: 'RC response is not ok',\n  [ErrorCode.INVALID_ATTRIBUTE_NAME]:\n    'Attribute name {$attributeName} is invalid.',\n  [ErrorCode.INVALID_ATTRIBUTE_VALUE]:\n    'Attribute value {$attributeValue} is invalid.',\n  [ErrorCode.INVALID_CUSTOM_METRIC_NAME]:\n    'Custom metric name {$customMetricName} is invalid',\n  [ErrorCode.INVALID_STRING_MERGER_PARAMETER]:\n    'Input for String merger is invalid, contact support team to resolve.',\n  [ErrorCode.ALREADY_INITIALIZED]: 'Performance can only be initialized once.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.TRACE_STARTED_BEFORE]: { traceName: string };\n  [ErrorCode.TRACE_STOPPED_BEFORE]: { traceName: string };\n  [ErrorCode.NONPOSITIVE_TRACE_START_TIME]: { traceName: string };\n  [ErrorCode.NONPOSITIVE_TRACE_DURATION]: { traceName: string };\n  [ErrorCode.INVALID_ATTRIBUTE_NAME]: { attributeName: string };\n  [ErrorCode.INVALID_ATTRIBUTE_VALUE]: { attributeValue: string };\n  [ErrorCode.INVALID_CUSTOM_METRIC_NAME]: { customMetricName: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SERVICE_NAME } from '../constants';\n\nexport const consoleLogger = new Logger(SERVICE_NAME);\nconsoleLogger.logLevel = LogLevel.INFO;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { isIndexedDBAvailable } from '@firebase/util';\nimport { consoleLogger } from '../utils/console_logger';\n\ndeclare global {\n  interface Window {\n    PerformanceObserver: typeof PerformanceObserver;\n    perfMetrics?: { onFirstInputDelay(fn: (fid: number) => void): void };\n  }\n}\n\nlet apiInstance: Api | undefined;\nlet windowInstance: Window | undefined;\n\nexport type EntryType =\n  | 'mark'\n  | 'measure'\n  | 'paint'\n  | 'resource'\n  | 'frame'\n  | 'navigation';\n\n/**\n * This class holds a reference to various browser related objects injected by\n * set methods.\n */\nexport class Api {\n  private readonly performance: Performance;\n  /** PreformanceObserver constructor function. */\n  private readonly PerformanceObserver: typeof PerformanceObserver;\n  private readonly windowLocation: Location;\n  readonly onFirstInputDelay?: (fn: (fid: number) => void) => void;\n  readonly localStorage?: Storage;\n  readonly document: Document;\n  readonly navigator: Navigator;\n\n  constructor(readonly window?: Window) {\n    if (!window) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_WINDOW);\n    }\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will\n      // throw an exception.\n      this.localStorage = window.localStorage;\n    }\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n\n  getUrl(): string {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  }\n\n  mark(name: string): void {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n    this.performance.mark(name);\n  }\n\n  measure(measureName: string, mark1: string, mark2: string): void {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n    this.performance.measure(measureName, mark1, mark2);\n  }\n\n  getEntriesByType(type: EntryType): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n    return this.performance.getEntriesByType(type);\n  }\n\n  getEntriesByName(name: string): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n    return this.performance.getEntriesByName(name);\n  }\n\n  getTimeOrigin(): number {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return (\n      this.performance &&\n      (this.performance.timeOrigin || this.performance.timing.navigationStart)\n    );\n  }\n\n  requiredApisAvailable(): boolean {\n    if (\n      !fetch ||\n      !Promise ||\n      !this.navigator ||\n      !this.navigator.cookieEnabled\n    ) {\n      consoleLogger.info(\n        'Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.'\n      );\n      return false;\n    }\n\n    if (!isIndexedDBAvailable()) {\n      consoleLogger.info('IndexedDB is not supported by current browswer');\n      return false;\n    }\n    return true;\n  }\n\n  setupObserver(\n    entryType: EntryType,\n    callback: (entry: PerformanceEntry) => void\n  ): void {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n    const observer = new this.PerformanceObserver(list => {\n      for (const entry of list.getEntries()) {\n        // `entry` is a PerformanceEntry instance.\n        callback(entry);\n      }\n    });\n\n    // Start observing the entry types you care about.\n    observer.observe({ entryTypes: [entryType] });\n  }\n\n  static getInstance(): Api {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n    return apiInstance;\n  }\n}\n\nexport function setupApi(window: Window): void {\n  windowInstance = window;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _FirebaseInstallationsInternal } from '@firebase/installations-exp';\n\nlet iid: string | undefined;\nlet authToken: string | undefined;\n\nexport function getIidPromise(\n  installationsService: _FirebaseInstallationsInternal\n): Promise<string> {\n  const iidPromise = installationsService.getId();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  iidPromise.then((iidVal: string) => {\n    iid = iidVal;\n  });\n  return iidPromise;\n}\n\n// This method should be used after the iid is retrieved by getIidPromise method.\nexport function getIid(): string | undefined {\n  return iid;\n}\n\nexport function getAuthTokenPromise(\n  installationsService: _FirebaseInstallationsInternal\n): Promise<string> {\n  const authTokenPromise = installationsService.getToken();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  authTokenPromise.then((authTokenVal: string) => {\n    authToken = authTokenVal;\n  });\n  return authTokenPromise;\n}\n\nexport function getAuthenticationToken(): string | undefined {\n  return authToken;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from './errors';\n\nexport function mergeStrings(part1: string, part2: string): string {\n  const sizeDiff = part1.length - part2.length;\n  if (sizeDiff < 0 || sizeDiff > 1) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_STRING_MERGER_PARAMETER);\n  }\n\n  const resultArray = [];\n  for (let i = 0; i < part1.length; i++) {\n    resultArray.push(part1.charAt(i));\n    if (part2.length > i) {\n      resultArray.push(part2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { mergeStrings } from '../utils/string_merger';\n\nlet settingsServiceInstance: SettingsService | undefined;\n\nexport class SettingsService {\n  // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n  instrumentationEnabled = true;\n\n  // The variable which controls logging of custom traces.\n  dataCollectionEnabled = true;\n\n  // Configuration flags set through remote config.\n  loggingEnabled = false;\n  // Sampling rate between 0 and 1.\n  tracesSamplingRate = 1;\n  networkRequestsSamplingRate = 1;\n\n  // Address of logging service.\n  logEndPointUrl =\n    'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\n  // Performance event transport endpoint URL which should be compatible with proto3.\n  // New Address for transport service, not configurable via Remote Config.\n  flTransportEndpointUrl = mergeStrings(\n    'hts/frbslgigp.ogepscmv/ieo/eaylg',\n    'tp:/ieaeogn-agolai.o/1frlglgc/o'\n  );\n\n  transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\n\n  // Source type for performance event logs.\n  logSource = 462;\n\n  // Flags which control per session logging of traces and network requests.\n  logTraceAfterSampling = false;\n  logNetworkAfterSampling = false;\n\n  // TTL of config retrieved from remote config in hours.\n  configTimeToLive = 12;\n\n  getFlTransportFullUrl(): string {\n    return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\n  }\n\n  static getInstance(): SettingsService {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n    return settingsServiceInstance;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from './errors';\nimport { FirebaseApp } from '@firebase/app-exp';\n\nexport function getAppId(firebaseApp: FirebaseApp): string {\n  const appId = firebaseApp.options?.appId;\n  if (!appId) {\n    throw ERROR_FACTORY.create(ErrorCode.NO_APP_ID);\n  }\n  return appId;\n}\n\nexport function getProjectId(firebaseApp: FirebaseApp): string {\n  const projectId = firebaseApp.options?.projectId;\n  if (!projectId) {\n    throw ERROR_FACTORY.create(ErrorCode.NO_PROJECT_ID);\n  }\n  return projectId;\n}\n\nexport function getApiKey(firebaseApp: FirebaseApp): string {\n  const apiKey = firebaseApp.options?.apiKey;\n  if (!apiKey) {\n    throw ERROR_FACTORY.create(ErrorCode.NO_API_KEY);\n  }\n  return apiKey;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONFIG_EXPIRY_LOCAL_STORAGE_KEY,\n  CONFIG_LOCAL_STORAGE_KEY,\n  SDK_VERSION\n} from '../constants';\nimport { consoleLogger } from '../utils/console_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\n\nimport { Api } from './api_service';\nimport { getAuthTokenPromise } from './iid_service';\nimport { SettingsService } from './settings_service';\nimport { PerformanceController } from '../controllers/perf';\nimport { getProjectId, getApiKey, getAppId } from '../utils/app_utils';\n\nconst REMOTE_CONFIG_SDK_VERSION = '0.0.1';\n\ninterface SecondaryConfig {\n  loggingEnabled?: boolean;\n  logSource?: number;\n  logEndPointUrl?: string;\n  transportKey?: string;\n  tracesSamplingRate?: number;\n  networkRequestsSamplingRate?: number;\n}\n\n// These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\nconst DEFAULT_CONFIGS: SecondaryConfig = {\n  loggingEnabled: true\n};\n\n/* eslint-disable camelcase */\ninterface RemoteConfigTemplate {\n  fpr_enabled?: string;\n  fpr_log_source?: string;\n  fpr_log_endpoint_url?: string;\n  fpr_log_transport_key?: string;\n  fpr_log_transport_web_percent?: string;\n  fpr_vc_network_request_sampling_rate?: string;\n  fpr_vc_trace_sampling_rate?: string;\n  fpr_vc_session_sampling_rate?: string;\n}\n/* eslint-enable camelcase */\n\ninterface RemoteConfigResponse {\n  entries?: RemoteConfigTemplate;\n  state?: string;\n}\n\nconst FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\n\nexport function getConfig(\n  performanceController: PerformanceController,\n  iid: string\n): Promise<void> {\n  const config = getStoredConfig();\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n\n  return getRemoteConfig(performanceController, iid)\n    .then(processConfig)\n    .then(\n      config => storeConfig(config),\n      /** Do nothing for error, use defaults set in settings service. */\n      () => {}\n    );\n}\n\nfunction getStoredConfig(): RemoteConfigResponse | undefined {\n  const localStorage = Api.getInstance().localStorage;\n  if (!localStorage) {\n    return;\n  }\n  const expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n  }\n\n  const configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n  if (!configStringified) {\n    return;\n  }\n  try {\n    const configResponse: RemoteConfigResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch {\n    return;\n  }\n}\n\nfunction storeConfig(config: RemoteConfigResponse | undefined): void {\n  const localStorage = Api.getInstance().localStorage;\n  if (!config || !localStorage) {\n    return;\n  }\n\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(\n    CONFIG_EXPIRY_LOCAL_STORAGE_KEY,\n    String(\n      Date.now() +\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000\n    )\n  );\n}\n\nconst COULD_NOT_GET_CONFIG_MSG =\n  'Could not fetch config, will use default configs';\n\nfunction getRemoteConfig(\n  performanceController: PerformanceController,\n  iid: string\n): Promise<RemoteConfigResponse | undefined> {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise(performanceController.installations)\n    .then(authToken => {\n      const projectId = getProjectId(performanceController.app);\n      const apiKey = getApiKey(performanceController.app);\n      const configEndPoint = `https://firebaseremoteconfig.googleapis.com/v1/projects/${projectId}/namespaces/fireperf:fetch?key=${apiKey}`;\n      const request = new Request(configEndPoint, {\n        method: 'POST',\n        headers: { Authorization: `${FIS_AUTH_PREFIX} ${authToken}` },\n        /* eslint-disable camelcase */\n        body: JSON.stringify({\n          app_instance_id: iid,\n          app_instance_id_token: authToken,\n          app_id: getAppId(performanceController.app),\n          app_version: SDK_VERSION,\n          sdk_version: REMOTE_CONFIG_SDK_VERSION\n        })\n        /* eslint-enable camelcase */\n      });\n      return fetch(request).then(response => {\n        if (response.ok) {\n          return response.json() as RemoteConfigResponse;\n        }\n        // In case response is not ok. This will be caught by catch.\n        throw ERROR_FACTORY.create(ErrorCode.RC_NOT_OK);\n      });\n    })\n    .catch(() => {\n      consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n      return undefined;\n    });\n}\n\n/**\n * Processes config coming either from calling RC or from local storage.\n * This method only runs if call is successful or config in storage\n * is valid.\n */\nfunction processConfig(\n  config?: RemoteConfigResponse\n): RemoteConfigResponse | undefined {\n  if (!config) {\n    return config;\n  }\n  const settingsServiceInstance = SettingsService.getInstance();\n  const entries = config.entries || {};\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is\n    // known.\n    settingsServiceInstance.loggingEnabled =\n      String(entries.fpr_enabled) === 'true';\n  } else if (DEFAULT_CONFIGS.loggingEnabled !== undefined) {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\n  }\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  } else if (DEFAULT_CONFIGS.logSource) {\n    settingsServiceInstance.logSource = DEFAULT_CONFIGS.logSource;\n  }\n\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  } else if (DEFAULT_CONFIGS.logEndPointUrl) {\n    settingsServiceInstance.logEndPointUrl = DEFAULT_CONFIGS.logEndPointUrl;\n  }\n\n  // Key from Remote Config has to be non-empty string, otherwsie use local value.\n  if (entries.fpr_log_transport_key) {\n    settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\n  } else if (DEFAULT_CONFIGS.transportKey) {\n    settingsServiceInstance.transportKey = DEFAULT_CONFIGS.transportKey;\n  }\n\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(\n      entries.fpr_vc_network_request_sampling_rate\n    );\n  } else if (DEFAULT_CONFIGS.networkRequestsSamplingRate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate =\n      DEFAULT_CONFIGS.networkRequestsSamplingRate;\n  }\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(\n      entries.fpr_vc_trace_sampling_rate\n    );\n  } else if (DEFAULT_CONFIGS.tracesSamplingRate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate =\n      DEFAULT_CONFIGS.tracesSamplingRate;\n  }\n  // Set the per session trace and network logging flags.\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.tracesSamplingRate\n  );\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.networkRequestsSamplingRate\n  );\n  return config;\n}\n\nfunction configValid(expiry: string): boolean {\n  return Number(expiry) > Date.now();\n}\n\nfunction shouldLogAfterSampling(samplingRate: number): boolean {\n  return Math.random() <= samplingRate;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIidPromise } from './iid_service';\nimport { getConfig } from './remote_config_service';\nimport { Api } from './api_service';\nimport { PerformanceController } from '../controllers/perf';\n\nconst enum InitializationStatus {\n  notInitialized = 1,\n  initializationPending,\n  initialized\n}\n\nlet initializationStatus = InitializationStatus.notInitialized;\n\nlet initializationPromise: Promise<void> | undefined;\n\nexport function getInitializationPromise(\n  performanceController: PerformanceController\n): Promise<void> {\n  initializationStatus = InitializationStatus.initializationPending;\n\n  initializationPromise =\n    initializationPromise || initializePerf(performanceController);\n\n  return initializationPromise;\n}\n\nexport function isPerfInitialized(): boolean {\n  return initializationStatus === InitializationStatus.initialized;\n}\n\nfunction initializePerf(\n  performanceController: PerformanceController\n): Promise<void> {\n  return getDocumentReadyComplete()\n    .then(() => getIidPromise(performanceController.installations))\n    .then(iid => getConfig(performanceController, iid))\n    .then(\n      () => changeInitializationStatus(),\n      () => changeInitializationStatus()\n    );\n}\n\n/**\n * Returns a promise which resolves whenever the document readystate is complete or\n * immediately if it is called after page load complete.\n */\nfunction getDocumentReadyComplete(): Promise<void> {\n  const document = Api.getInstance().document;\n  return new Promise(resolve => {\n    if (document && document.readyState !== 'complete') {\n      const handler = (): void => {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler);\n          resolve();\n        }\n      };\n      document.addEventListener('readystatechange', handler);\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction changeInitializationStatus(): void {\n  initializationStatus = InitializationStatus.initialized;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SettingsService } from './settings_service';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { consoleLogger } from '../utils/console_logger';\n\nconst DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nconst INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\n// If end point does not work, the call will be tried for these many times.\nconst DEFAULT_REMAINING_TRIES = 3;\nconst MAX_EVENT_COUNT_PER_REQUEST = 1000;\nlet remainingTries = DEFAULT_REMAINING_TRIES;\n\ninterface LogResponseDetails {\n  responseAction?: string;\n}\n\ninterface BatchEvent {\n  message: string;\n  eventTime: number;\n}\n\n/* eslint-disable camelcase */\n// CC/Fl accepted log format.\ninterface TransportBatchLogFormat {\n  request_time_ms: string;\n  client_info: ClientInfo;\n  log_source: number;\n  log_event: Log[];\n}\n\ninterface ClientInfo {\n  client_type: number;\n  js_client_info: {};\n}\n\ninterface Log {\n  source_extension_json_proto3: string;\n  event_time_ms: string;\n}\n/* eslint-enable camelcase */\n\nlet queue: BatchEvent[] = [];\n\nlet isTransportSetup: boolean = false;\n\nexport function setupTransportService(): void {\n  if (!isTransportSetup) {\n    processQueue(INITIAL_SEND_TIME_DELAY_MS);\n    isTransportSetup = true;\n  }\n}\n\n/**\n * Utilized by testing to clean up message queue and un-initialize transport service.\n */\nexport function resetTransportService(): void {\n  isTransportSetup = false;\n  queue = [];\n}\n\nfunction processQueue(timeOffset: number): void {\n  setTimeout(() => {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n    }\n\n    // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n    }\n\n    dispatchQueueEvents();\n  }, timeOffset);\n}\n\nfunction dispatchQueueEvents(): void {\n  // Extract events up to the maximum cap of single logRequest from top of \"official queue\".\n  // The staged events will be used for current logRequest attempt, remaining events will be kept\n  // for next attempt.\n  const staged = queue.splice(0, MAX_EVENT_COUNT_PER_REQUEST);\n\n  /* eslint-disable camelcase */\n  // We will pass the JSON serialized event to the backend.\n  const log_event: Log[] = staged.map(evt => ({\n    source_extension_json_proto3: evt.message,\n    event_time_ms: String(evt.eventTime)\n  }));\n\n  const data: TransportBatchLogFormat = {\n    request_time_ms: String(Date.now()),\n    client_info: {\n      client_type: 1, // 1 is JS\n      js_client_info: {}\n    },\n    log_source: SettingsService.getInstance().logSource,\n    log_event\n  };\n  /* eslint-enable camelcase */\n\n  sendEventsToFl(data, staged).catch(() => {\n    // If the request fails for some reason, add the events that were attempted\n    // back to the primary queue to retry later.\n    queue = [...staged, ...queue];\n    remainingTries--;\n    consoleLogger.info(`Tries left: ${remainingTries}.`);\n    processQueue(DEFAULT_SEND_INTERVAL_MS);\n  });\n}\n\nfunction sendEventsToFl(\n  data: TransportBatchLogFormat,\n  staged: BatchEvent[]\n): Promise<void> {\n  return postToFlEndpoint(data)\n    .then(res => {\n      if (!res.ok) {\n        consoleLogger.info('Call to Firebase backend failed.');\n      }\n      return res.json();\n    })\n    .then(res => {\n      // Find the next call wait time from the response.\n      const transportWait = Number(res.nextRequestWaitMillis);\n      let requestOffset = DEFAULT_SEND_INTERVAL_MS;\n      if (!isNaN(transportWait)) {\n        requestOffset = Math.max(transportWait, requestOffset);\n      }\n\n      // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\n      // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\n      const logResponseDetails: LogResponseDetails[] = res.logResponseDetails;\n      if (\n        Array.isArray(logResponseDetails) &&\n        logResponseDetails.length > 0 &&\n        logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER'\n      ) {\n        queue = [...staged, ...queue];\n        consoleLogger.info(`Retry transport request later.`);\n      }\n\n      remainingTries = DEFAULT_REMAINING_TRIES;\n      // Schedule the next process.\n      processQueue(requestOffset);\n    });\n}\n\nfunction postToFlEndpoint(data: TransportBatchLogFormat): Promise<Response> {\n  const flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\n  return fetch(flTransportFullUrl, {\n    method: 'POST',\n    body: JSON.stringify(data)\n  });\n}\n\nfunction addToQueue(evt: BatchEvent): void {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_CC_LOG);\n  }\n  // Add the new event to the queue.\n  queue = [...queue, evt];\n}\n\n/** Log handler for cc service to send the performance logs to the server. */\nexport function transportHandler(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  serializer: (...args: any[]) => string\n): (...args: unknown[]) => void {\n  return (...args) => {\n    const message = serializer(...args);\n    addToQueue({\n      message,\n      eventTime: Date.now()\n    });\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIid } from './iid_service';\nimport { NetworkRequest } from '../resources/network_request';\nimport { Trace } from '../resources/trace';\nimport { Api } from './api_service';\nimport { SettingsService } from './settings_service';\nimport {\n  getServiceWorkerStatus,\n  getVisibilityState,\n  VisibilityState,\n  getEffectiveConnectionType\n} from '../utils/attributes_utils';\nimport {\n  isPerfInitialized,\n  getInitializationPromise\n} from './initialization_service';\nimport { transportHandler } from './transport_service';\nimport { SDK_VERSION } from '../constants';\nimport { FirebaseApp } from '@firebase/app-exp';\nimport { getAppId } from '../utils/app_utils';\n\nconst enum ResourceType {\n  NetworkRequest,\n  Trace\n}\n\n/* eslint-disable camelcase */\ninterface ApplicationInfo {\n  google_app_id: string;\n  app_instance_id?: string;\n  web_app_info: WebAppInfo;\n  application_process_state: number;\n}\n\ninterface WebAppInfo {\n  sdk_version: string;\n  page_url: string;\n  service_worker_status: number;\n  visibility_state: number;\n  effective_connection_type: number;\n}\n\ninterface PerfNetworkLog {\n  application_info: ApplicationInfo;\n  network_request_metric: NetworkRequestMetric;\n}\n\ninterface PerfTraceLog {\n  application_info: ApplicationInfo;\n  trace_metric: TraceMetric;\n}\n\ninterface NetworkRequestMetric {\n  url: string;\n  http_method: number;\n  http_response_code: number;\n  response_payload_bytes?: number;\n  client_start_time_us?: number;\n  time_to_response_initiated_us?: number;\n  time_to_response_completed_us?: number;\n}\n\ninterface TraceMetric {\n  name: string;\n  is_auto: boolean;\n  client_start_time_us: number;\n  duration_us: number;\n  counters?: { [key: string]: number };\n  custom_attributes?: { [key: string]: string };\n}\n\n/* eslint-enble camelcase */\n\nlet logger: (\n  resource: NetworkRequest | Trace,\n  resourceType: ResourceType\n) => void | undefined;\n// This method is not called before initialization.\nfunction sendLog(\n  resource: NetworkRequest | Trace,\n  resourceType: ResourceType\n): void {\n  if (!logger) {\n    logger = transportHandler(serializer);\n  }\n  logger(resource, resourceType);\n}\n\nexport function logTrace(trace: Trace): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log if trace is auto generated and instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n  }\n  // Do not log if trace is custom and data collection is disabled.\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n  }\n  // Do not log if required apis are not available.\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n  }\n\n  // Only log the page load auto traces if page is visible.\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n    return;\n  }\n\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n    getInitializationPromise(trace.performanceController).then(\n      () => sendTraceLog(trace),\n      () => sendTraceLog(trace)\n    );\n  }\n}\n\nfunction sendTraceLog(trace: Trace): void {\n  if (!getIid()) {\n    return;\n  }\n\n  const settingsService = SettingsService.getInstance();\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logTraceAfterSampling\n  ) {\n    return;\n  }\n\n  setTimeout(() => sendLog(trace, ResourceType.Trace), 0);\n}\n\nexport function logNetworkRequest(networkRequest: NetworkRequest): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log network requests if instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled) {\n    return;\n  }\n\n  // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\n  // Need to blacklist both old and new endpoints to avoid migration gap.\n  const networkRequestUrl = networkRequest.url;\n\n  // Blacklist old log endpoint and new transport endpoint.\n  // Because Performance SDK doesn't instrument requests sent from SDK itself.\n  const logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\n  const flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\n  if (\n    networkRequestUrl === logEndpointUrl ||\n    networkRequestUrl === flEndpointUrl\n  ) {\n    return;\n  }\n\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logNetworkAfterSampling\n  ) {\n    return;\n  }\n\n  setTimeout(() => sendLog(networkRequest, ResourceType.NetworkRequest), 0);\n}\n\nfunction serializer(\n  resource: NetworkRequest | Trace,\n  resourceType: ResourceType\n): string {\n  if (resourceType === ResourceType.NetworkRequest) {\n    return serializeNetworkRequest(resource as NetworkRequest);\n  }\n  return serializeTrace(resource as Trace);\n}\n\nfunction serializeNetworkRequest(networkRequest: NetworkRequest): string {\n  const networkRequestMetric: NetworkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  const perfMetric: PerfNetworkLog = {\n    application_info: getApplicationInfo(\n      networkRequest.performanceController.app\n    ),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction serializeTrace(trace: Trace): string {\n  const traceMetric: TraceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = trace.counters;\n  }\n  const customAttributes = trace.getAttributes();\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = customAttributes;\n  }\n\n  const perfMetric: PerfTraceLog = {\n    application_info: getApplicationInfo(trace.performanceController.app),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction getApplicationInfo(firebaseApp: FirebaseApp): ApplicationInfo {\n  return {\n    google_app_id: getAppId(firebaseApp),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME,\n  OOB_TRACE_PAGE_LOAD_PREFIX\n} from '../constants';\nimport { consoleLogger } from '../utils/console_logger';\n\nconst MAX_METRIC_NAME_LENGTH = 100;\nconst RESERVED_AUTO_PREFIX = '_';\nconst oobMetrics = [\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n];\n\n/**\n * Returns true if the metric is custom and does not start with reserved prefix, or if\n * the metric is one of out of the box page load trace metrics.\n */\nexport function isValidMetricName(name: string, traceName?: string): boolean {\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n    return false;\n  }\n  return (\n    (traceName &&\n      traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\n      oobMetrics.indexOf(name) > -1) ||\n    !name.startsWith(RESERVED_AUTO_PREFIX)\n  );\n}\n\n/**\n * Converts the provided value to an integer value to be used in case of a metric.\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\n *\n * @returns Converted integer number to be set for the metric.\n */\nexport function convertMetricValueToInteger(providedValue: number): number {\n  const valueAsInteger: number = Math.floor(providedValue);\n  if (valueAsInteger < providedValue) {\n    consoleLogger.info(\n      `Metric value should be an Integer, setting the value as : ${valueAsInteger}.`\n    );\n  }\n  return valueAsInteger;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  TRACE_START_MARK_PREFIX,\n  TRACE_STOP_MARK_PREFIX,\n  TRACE_MEASURE_PREFIX,\n  OOB_TRACE_PAGE_LOAD_PREFIX,\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n} from '../constants';\nimport { Api } from '../services/api_service';\nimport { logTrace } from '../services/perf_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport {\n  isValidCustomAttributeName,\n  isValidCustomAttributeValue\n} from '../utils/attributes_utils';\nimport {\n  isValidMetricName,\n  convertMetricValueToInteger\n} from '../utils/metric_utils';\nimport { PerformanceTrace } from '../public_types';\nimport { PerformanceController } from '../controllers/perf';\n\nconst enum TraceState {\n  UNINITIALIZED = 1,\n  RUNNING,\n  TERMINATED\n}\n\nexport class Trace implements PerformanceTrace {\n  private state: TraceState = TraceState.UNINITIALIZED;\n  startTimeUs!: number;\n  durationUs!: number;\n  private customAttributes: { [key: string]: string } = {};\n  counters: { [counterName: string]: number } = {};\n  private api = Api.getInstance();\n  private randomId = Math.floor(Math.random() * 1000000);\n  private traceStartMark!: string;\n  private traceStopMark!: string;\n  private traceMeasure!: string;\n\n  /**\n   * @param performanceController The performance controller running.\n   * @param name The name of the trace.\n   * @param isAuto If the trace is auto-instrumented.\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\n   * is only set when the trace is built for logging when the user directly uses the user timing\n   * api (performance.mark and performance.measure).\n   */\n  constructor(\n    readonly performanceController: PerformanceController,\n    readonly name: string,\n    readonly isAuto = false,\n    traceMeasureName?: string\n  ) {\n    if (!this.isAuto) {\n      this.traceStartMark = `${TRACE_START_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceStopMark = `${TRACE_STOP_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceMeasure =\n        traceMeasureName ||\n        `${TRACE_MEASURE_PREFIX}-${this.randomId}-${this.name}`;\n\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n\n  /**\n   * Starts a trace. The measurement of the duration starts at this point.\n   */\n  start(): void {\n    if (this.state !== TraceState.UNINITIALIZED) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STARTED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.api.mark(this.traceStartMark);\n    this.state = TraceState.RUNNING;\n  }\n\n  /**\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\n   * is logged.\n   */\n  stop(): void {\n    if (this.state !== TraceState.RUNNING) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STOPPED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.state = TraceState.TERMINATED;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(\n      this.traceMeasure,\n      this.traceStartMark,\n      this.traceStopMark\n    );\n    this.calculateTraceMetrics();\n    logTrace(this);\n  }\n\n  /**\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\n   * directly. No need to use start and stop methods.\n   * @param startTime Trace start time since epoch in millisec\n   * @param duration The duraction of the trace in millisec\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\n   */\n  record(\n    startTime: number,\n    duration: number,\n    options?: {\n      metrics?: { [key: string]: number };\n      attributes?: { [key: string]: string };\n    }\n  ): void {\n    if (startTime <= 0) {\n      throw ERROR_FACTORY.create(ErrorCode.NONPOSITIVE_TRACE_START_TIME, {\n        traceName: this.name\n      });\n    }\n    if (duration <= 0) {\n      throw ERROR_FACTORY.create(ErrorCode.NONPOSITIVE_TRACE_DURATION, {\n        traceName: this.name\n      });\n    }\n\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n    if (options && options.attributes) {\n      this.customAttributes = { ...options.attributes };\n    }\n    if (options && options.metrics) {\n      for (const metric of Object.keys(options.metrics)) {\n        if (!isNaN(Number(options.metrics[metric]))) {\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n        }\n      }\n    }\n    logTrace(this);\n  }\n\n  /**\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\n   * custom metric if one with the given name does not exist. The value will be floored down to an\n   * integer.\n   * @param counter Name of the custom metric\n   * @param numAsInteger Increment by value\n   */\n  incrementMetric(counter: string, numAsInteger = 1): void {\n    if (this.counters[counter] === undefined) {\n      this.putMetric(counter, numAsInteger);\n    } else {\n      this.putMetric(counter, this.counters[counter] + numAsInteger);\n    }\n  }\n\n  /**\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\n   * given name does not exist. The value will be floored down to an integer.\n   * @param counter Name of the custom metric\n   * @param numAsInteger Set custom metric to this value\n   */\n  putMetric(counter: string, numAsInteger: number): void {\n    if (isValidMetricName(counter, this.name)) {\n      this.counters[counter] = convertMetricValueToInteger(numAsInteger);\n    } else {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_CUSTOM_METRIC_NAME, {\n        customMetricName: counter\n      });\n    }\n  }\n\n  /**\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\n   * not exist will return zero.\n   * @param counter\n   */\n  getMetric(counter: string): number {\n    return this.counters[counter] || 0;\n  }\n\n  /**\n   * Sets a custom attribute of a trace to a certain value.\n   * @param attr\n   * @param value\n   */\n  putAttribute(attr: string, value: string): void {\n    const isValidName = isValidCustomAttributeName(attr);\n    const isValidValue = isValidCustomAttributeValue(value);\n    if (isValidName && isValidValue) {\n      this.customAttributes[attr] = value;\n      return;\n    }\n    // Throw appropriate error when the attribute name or value is invalid.\n    if (!isValidName) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_ATTRIBUTE_NAME, {\n        attributeName: attr\n      });\n    }\n    if (!isValidValue) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_ATTRIBUTE_VALUE, {\n        attributeValue: value\n      });\n    }\n  }\n\n  /**\n   * Retrieves the value a custom attribute of a trace is set to.\n   * @param attr\n   */\n  getAttribute(attr: string): string | undefined {\n    return this.customAttributes[attr];\n  }\n\n  removeAttribute(attr: string): void {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n    }\n    delete this.customAttributes[attr];\n  }\n\n  getAttributes(): { [key: string]: string } {\n    return { ...this.customAttributes };\n  }\n\n  private setStartTime(startTime: number): void {\n    this.startTimeUs = startTime;\n  }\n\n  private setDuration(duration: number): void {\n    this.durationUs = duration;\n  }\n\n  /**\n   * Calculates and assigns the duration and start time of the trace using the measure performance\n   * entry.\n   */\n  private calculateTraceMetrics(): void {\n    const perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    const perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor(\n        (perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000\n      );\n    }\n  }\n\n  /**\n   * @param navigationTimings A single element array which contains the navigationTIming object of\n   * the page load\n   * @param paintTimings A array which contains paintTiming object of the page load\n   * @param firstInputDelay First input delay in millisec\n   */\n  static createOobTrace(\n    performanceController: PerformanceController,\n    navigationTimings: PerformanceNavigationTiming[],\n    paintTimings: PerformanceEntry[],\n    firstInputDelay?: number\n  ): void {\n    const route = Api.getInstance().getUrl();\n    if (!route) {\n      return;\n    }\n    const trace = new Trace(\n      performanceController,\n      OOB_TRACE_PAGE_LOAD_PREFIX + route,\n      true\n    );\n    const timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs);\n\n    // navigationTimings includes only one element.\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.putMetric(\n        'domInteractive',\n        Math.floor(navigationTimings[0].domInteractive * 1000)\n      );\n      trace.putMetric(\n        'domContentLoadedEventEnd',\n        Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000)\n      );\n      trace.putMetric(\n        'loadEventEnd',\n        Math.floor(navigationTimings[0].loadEventEnd * 1000)\n      );\n    }\n\n    const FIRST_PAINT = 'first-paint';\n    const FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n    if (paintTimings) {\n      const firstPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_PAINT\n      );\n      if (firstPaint && firstPaint.startTime) {\n        trace.putMetric(\n          FIRST_PAINT_COUNTER_NAME,\n          Math.floor(firstPaint.startTime * 1000)\n        );\n      }\n      const firstContentfulPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_CONTENTFUL_PAINT\n      );\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.putMetric(\n          FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n          Math.floor(firstContentfulPaint.startTime * 1000)\n        );\n      }\n\n      if (firstInputDelay) {\n        trace.putMetric(\n          FIRST_INPUT_DELAY_COUNTER_NAME,\n          Math.floor(firstInputDelay * 1000)\n        );\n      }\n    }\n\n    logTrace(trace);\n  }\n\n  static createUserTimingTrace(\n    performanceController: PerformanceController,\n    measureName: string\n  ): void {\n    const trace = new Trace(\n      performanceController,\n      measureName,\n      false,\n      measureName\n    );\n    logTrace(trace);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\nimport { logNetworkRequest } from '../services/perf_logger';\nimport { PerformanceController } from '../controllers/perf';\n\n// The order of values of this enum should not be changed.\nexport const enum HttpMethod {\n  HTTP_METHOD_UNKNOWN = 0,\n  GET = 1,\n  PUT = 2,\n  POST = 3,\n  DELETE = 4,\n  HEAD = 5,\n  PATCH = 6,\n  OPTIONS = 7,\n  TRACE = 8,\n  CONNECT = 9\n}\n\n// Durations are in microseconds.\nexport interface NetworkRequest {\n  performanceController: PerformanceController;\n  url: string;\n  httpMethod?: HttpMethod;\n  requestPayloadBytes?: number;\n  responsePayloadBytes?: number;\n  httpResponseCode?: number;\n  responseContentType?: string;\n  startTimeUs?: number;\n  timeToRequestCompletedUs?: number;\n  timeToResponseInitiatedUs?: number;\n  timeToResponseCompletedUs?: number;\n}\n\nexport function createNetworkRequestEntry(\n  performanceController: PerformanceController,\n  entry: PerformanceEntry\n): void {\n  const performanceEntry = entry as PerformanceResourceTiming;\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n  }\n  const timeOrigin = Api.getInstance().getTimeOrigin();\n  const startTimeUs = Math.floor(\n    (performanceEntry.startTime + timeOrigin) * 1000\n  );\n  const timeToResponseInitiatedUs = performanceEntry.responseStart\n    ? Math.floor(\n        (performanceEntry.responseStart - performanceEntry.startTime) * 1000\n      )\n    : undefined;\n  const timeToResponseCompletedUs = Math.floor(\n    (performanceEntry.responseEnd - performanceEntry.startTime) * 1000\n  );\n  // Remove the query params from logged network request url.\n  const url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  const networkRequest: NetworkRequest = {\n    performanceController,\n    url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs,\n    timeToResponseInitiatedUs,\n    timeToResponseCompletedUs\n  };\n\n  logNetworkRequest(networkRequest);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from './api_service';\nimport { Trace } from '../resources/trace';\nimport { createNetworkRequestEntry } from '../resources/network_request';\nimport { TRACE_MEASURE_PREFIX } from '../constants';\nimport { getIid } from './iid_service';\nimport { PerformanceController } from '../controllers/perf';\n\nconst FID_WAIT_TIME_MS = 5000;\n\nexport function setupOobResources(\n  performanceController: PerformanceController\n): void {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n  }\n  // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n  setTimeout(() => setupOobTraces(performanceController), 0);\n  setTimeout(() => setupNetworkRequests(performanceController), 0);\n  setTimeout(() => setupUserTimingTraces(performanceController), 0);\n}\n\nfunction setupNetworkRequests(\n  performanceController: PerformanceController\n): void {\n  const api = Api.getInstance();\n  const resources = api.getEntriesByType('resource');\n  for (const resource of resources) {\n    createNetworkRequestEntry(performanceController, resource);\n  }\n  api.setupObserver('resource', entry =>\n    createNetworkRequestEntry(performanceController, entry)\n  );\n}\n\nfunction setupOobTraces(performanceController: PerformanceController): void {\n  const api = Api.getInstance();\n  const navigationTimings = api.getEntriesByType(\n    'navigation'\n  ) as PerformanceNavigationTiming[];\n  const paintTimings = api.getEntriesByType('paint');\n  // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let timeoutId: any = setTimeout(() => {\n      Trace.createOobTrace(\n        performanceController,\n        navigationTimings,\n        paintTimings\n      );\n      timeoutId = undefined;\n    }, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay((fid: number) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        Trace.createOobTrace(\n          performanceController,\n          navigationTimings,\n          paintTimings,\n          fid\n        );\n      }\n    });\n  } else {\n    Trace.createOobTrace(\n      performanceController,\n      navigationTimings,\n      paintTimings\n    );\n  }\n}\n\nfunction setupUserTimingTraces(\n  performanceController: PerformanceController\n): void {\n  const api = Api.getInstance();\n  // Run through the measure performance entries collected up to this point.\n  const measures = api.getEntriesByType('measure');\n  for (const measure of measures) {\n    createUserTimingTrace(performanceController, measure);\n  }\n  // Setup an observer to capture the measures from this point on.\n  api.setupObserver('measure', entry =>\n    createUserTimingTrace(performanceController, entry)\n  );\n}\n\nfunction createUserTimingTrace(\n  performanceController: PerformanceController,\n  measure: PerformanceEntry\n): void {\n  const measureName = measure.name;\n  // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n  if (\n    measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\n    TRACE_MEASURE_PREFIX\n  ) {\n    return;\n  }\n  Trace.createUserTimingTrace(performanceController, measureName);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { setupOobResources } from '../services/oob_resources_service';\nimport { SettingsService } from '../services/settings_service';\nimport { getInitializationPromise } from '../services/initialization_service';\nimport { Api } from '../services/api_service';\nimport { FirebaseApp } from '@firebase/app-exp';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations-exp';\nimport { PerformanceSettings, FirebasePerformance } from '../public_types';\nimport { validateIndexedDBOpenable } from '@firebase/util';\nimport { setupTransportService } from '../services/transport_service';\nimport { consoleLogger } from '../utils/console_logger';\n\nexport class PerformanceController implements FirebasePerformance {\n  private initialized: boolean = false;\n\n  constructor(\n    readonly app: FirebaseApp,\n    readonly installations: _FirebaseInstallationsInternal\n  ) {}\n\n  /**\n   * This method *must* be called internally as part of creating a\n   * PerformanceController instance.\n   *\n   * Currently it's not possible to pass the settings object through the\n   * constructor using Components, so this method exists to be called with the\n   * desired settings, to ensure nothing is collected without the user's\n   * consent.\n   */\n  _init(settings?: PerformanceSettings): void {\n    if (this.initialized) {\n      return;\n    }\n\n    if (settings?.dataCollectionEnabled !== undefined) {\n      this.dataCollectionEnabled = settings.dataCollectionEnabled;\n    }\n    if (settings?.instrumentationEnabled !== undefined) {\n      this.instrumentationEnabled = settings.instrumentationEnabled;\n    }\n\n    if (Api.getInstance().requiredApisAvailable()) {\n      validateIndexedDBOpenable()\n        .then(isAvailable => {\n          if (isAvailable) {\n            setupTransportService();\n            getInitializationPromise(this).then(\n              () => setupOobResources(this),\n              () => setupOobResources(this)\n            );\n            this.initialized = true;\n          }\n        })\n        .catch(error => {\n          consoleLogger.info(`Environment doesn't support IndexedDB: ${error}`);\n        });\n    } else {\n      consoleLogger.info(\n        'Firebase Performance cannot start if the browser does not support ' +\n          '\"Fetch\" and \"Promise\", or cookies are disabled.'\n      );\n    }\n  }\n\n  set instrumentationEnabled(val: boolean) {\n    SettingsService.getInstance().instrumentationEnabled = val;\n  }\n  get instrumentationEnabled(): boolean {\n    return SettingsService.getInstance().instrumentationEnabled;\n  }\n\n  set dataCollectionEnabled(val: boolean) {\n    SettingsService.getInstance().dataCollectionEnabled = val;\n  }\n  get dataCollectionEnabled(): boolean {\n    return SettingsService.getInstance().dataCollectionEnabled;\n  }\n}\n","/**\n * Firebase Performance Monitoring\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebasePerformance,\n  PerformanceSettings,\n  PerformanceTrace\n} from './public_types';\nimport { ERROR_FACTORY, ErrorCode } from './utils/errors';\nimport { setupApi } from './services/api_service';\nimport { PerformanceController } from './controllers/perf';\nimport {\n  _registerComponent,\n  _getProvider,\n  registerVersion,\n  FirebaseApp,\n  getApp\n} from '@firebase/app-exp';\nimport {\n  InstanceFactory,\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { name, version } from '../package.json';\nimport { Trace } from './resources/trace';\nimport '@firebase/installations-exp';\nimport { getModularInstance } from '@firebase/util';\n\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\n * Returns a FirebasePerformance instance for the given app.\n * @param app - The `FirebaseApp` to use.\n * @public\n */\nexport function getPerformance(\n  app: FirebaseApp = getApp()\n): FirebasePerformance {\n  app = getModularInstance(app);\n  const provider = _getProvider(app, 'performance-exp');\n  const perfInstance = provider.getImmediate() as PerformanceController;\n  return perfInstance;\n}\n\n/**\n * Returns a FirebasePerformance instance for the given app. Can only be called once.\n * @param app - The `FirebaseApp` to use.\n * @param settings - Optional settings for the `FirebasePerformance` instance.\n * @public\n */\nexport function initializePerformance(\n  app: FirebaseApp,\n  settings?: PerformanceSettings\n): FirebasePerformance {\n  app = getModularInstance(app);\n  const provider = _getProvider(app, 'performance-exp');\n\n  // throw if an instance was already created.\n  // It could happen if initializePerformance() is called more than once, or getPerformance() is called first.\n  if (provider.isInitialized()) {\n    throw ERROR_FACTORY.create(ErrorCode.ALREADY_INITIALIZED);\n  }\n\n  const perfInstance = provider.initialize({\n    options: settings\n  }) as PerformanceController;\n  return perfInstance;\n}\n\n/**\n * Returns a new `PerformanceTrace` instance.\n * @param performance - The `FirebasePerformance` instance to use.\n * @param name - The name of the trace.\n * @public\n */\nexport function trace(\n  performance: FirebasePerformance,\n  name: string\n): PerformanceTrace {\n  performance = getModularInstance(performance);\n  return new Trace(performance as PerformanceController, name);\n}\n\nconst factory: InstanceFactory<'performance-exp'> = (\n  container: ComponentContainer,\n  { options: settings }: { options?: PerformanceSettings }\n) => {\n  // Dependencies\n  const app = container.getProvider('app-exp').getImmediate();\n  const installations = container\n    .getProvider('installations-exp-internal')\n    .getImmediate();\n\n  if (app.name !== DEFAULT_ENTRY_NAME) {\n    throw ERROR_FACTORY.create(ErrorCode.FB_NOT_DEFAULT);\n  }\n  if (typeof window === 'undefined') {\n    throw ERROR_FACTORY.create(ErrorCode.NO_WINDOW);\n  }\n  setupApi(window);\n  const perfInstance = new PerformanceController(app, installations);\n  perfInstance._init(settings);\n\n  return perfInstance;\n};\n\nfunction registerPerformance(): void {\n  _registerComponent(\n    new Component('performance-exp', factory, ComponentType.PUBLIC)\n  );\n}\n\nregisterPerformance();\nregisterVersion(name, version);\n\nexport { FirebasePerformance, PerformanceSettings, PerformanceTrace };\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  trace,\n  FirebasePerformance,\n  // The PerformanceTrace type has not changed between modular and non-modular packages.\n  PerformanceTrace\n} from '@firebase/performance-exp';\nimport { FirebasePerformance as FirebasePerformanceCompat } from '@firebase/performance-types';\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-compat';\n\nexport class PerformanceCompatImpl\n  implements FirebasePerformanceCompat, _FirebaseService {\n  constructor(\n    public app: FirebaseApp,\n    readonly _delegate: FirebasePerformance\n  ) {}\n\n  get instrumentationEnabled(): boolean {\n    return this._delegate.instrumentationEnabled;\n  }\n\n  set instrumentationEnabled(val: boolean) {\n    this._delegate.instrumentationEnabled = val;\n  }\n\n  get dataCollectionEnabled(): boolean {\n    return this._delegate.dataCollectionEnabled;\n  }\n\n  set dataCollectionEnabled(val: boolean) {\n    this._delegate.dataCollectionEnabled = val;\n  }\n\n  trace(traceName: string): PerformanceTrace {\n    return trace(this._delegate, traceName);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType\n} from '@firebase/component';\nimport { PerformanceCompatImpl } from './performance';\nimport { name as packageName, version } from '../package.json';\nimport { FirebasePerformance as FirebasePerformanceCompat } from '@firebase/performance-types';\n\n// TODO: move it to the future performance-compat-types package\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'performance-compat': FirebasePerformanceCompat;\n  }\n}\n\nfunction registerPerformanceCompat(firebaseInstance: _FirebaseNamespace): void {\n  firebaseInstance.INTERNAL.registerComponent(\n    new Component(\n      'performance-compat',\n      performanceFactory,\n      ComponentType.PUBLIC\n    )\n  );\n\n  firebaseInstance.registerVersion(packageName, version);\n}\n\nfunction performanceFactory(\n  container: ComponentContainer\n): PerformanceCompatImpl {\n  const app = container.getProvider('app-compat').getImmediate();\n  // The following call will always succeed.\n  const performance = container.getProvider('performance-exp').getImmediate();\n\n  return new PerformanceCompatImpl(app, performance);\n}\n\nregisterPerformanceCompat(firebase as _FirebaseNamespace);\n\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    performance?: {\n      (app?: FirebaseApp): FirebasePerformanceCompat;\n    };\n  }\n  interface FirebaseApp {\n    performance?(): FirebasePerformanceCompat;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Analytics.\n */\nexport const ANALYTICS_TYPE = 'analytics-exp';\n\n// Key to attach FID to in gtag params.\nexport const GA_FID_KEY = 'firebase_id';\nexport const ORIGIN_KEY = 'origin';\n\nexport const FETCH_TIMEOUT_MILLIS = 60 * 1000;\n\nexport const DYNAMIC_CONFIG_URL =\n  'https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig';\n\nexport const GTAG_URL = 'https://www.googletagmanager.com/gtag/js';\n\nexport const enum GtagCommand {\n  EVENT = 'event',\n  SET = 'set',\n  CONFIG = 'config'\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/analytics');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CustomParams, ControlParams, EventParams } from './public-types';\nimport { DynamicConfig, DataLayer, Gtag, MinimalDynamicConfig } from './types';\nimport { GtagCommand, GTAG_URL } from './constants';\nimport { logger } from './logger';\n\n/**\n * Makeshift polyfill for Promise.allSettled(). Resolves when all promises\n * have either resolved or rejected.\n *\n * @param promises Array of promises to wait for.\n */\nexport function promiseAllSettled<T>(\n  promises: Array<Promise<T>>\n): Promise<T[]> {\n  return Promise.all(promises.map(promise => promise.catch(e => e)));\n}\n\n/**\n * Inserts gtag script tag into the page to asynchronously download gtag.\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\n */\nexport function insertScriptTag(\n  dataLayerName: string,\n  measurementId: string\n): void {\n  const script = document.createElement('script');\n  // We are not providing an analyticsId in the URL because it would trigger a `page_view`\n  // without fid. We will initialize ga-id using gtag (config) command together with fid.\n  script.src = `${GTAG_URL}?l=${dataLayerName}&id=${measurementId}`;\n  script.async = true;\n  document.head.appendChild(script);\n}\n\n/**\n * Get reference to, or create, global datalayer.\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\n */\nexport function getOrCreateDataLayer(dataLayerName: string): DataLayer {\n  // Check for existing dataLayer and create if needed.\n  let dataLayer: DataLayer = [];\n  if (Array.isArray(window[dataLayerName])) {\n    dataLayer = window[dataLayerName] as DataLayer;\n  } else {\n    window[dataLayerName] = dataLayer;\n  }\n  return dataLayer;\n}\n\n/**\n * Wrapped gtag logic when gtag is called with 'config' command.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n * @param measurementId GA Measurement ID to set config for.\n * @param gtagParams Gtag config params to set.\n */\nasync function gtagOnConfig(\n  gtagCore: Gtag,\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementIdToAppId: { [measurementId: string]: string },\n  measurementId: string,\n  gtagParams?: ControlParams & EventParams & CustomParams\n): Promise<void> {\n  // If config is already fetched, we know the appId and can use it to look up what FID promise we\n  /// are waiting for, and wait only on that one.\n  const correspondingAppId = measurementIdToAppId[measurementId as string];\n  try {\n    if (correspondingAppId) {\n      await initializationPromisesMap[correspondingAppId];\n    } else {\n      // If config is not fetched yet, wait for all configs (we don't know which one we need) and\n      // find the appId (if any) corresponding to this measurementId. If there is one, wait on\n      // that appId's initialization promise. If there is none, promise resolves and gtag\n      // call goes through.\n      const dynamicConfigResults = await promiseAllSettled(\n        dynamicConfigPromisesList\n      );\n      const foundConfig = dynamicConfigResults.find(\n        config => config.measurementId === measurementId\n      );\n      if (foundConfig) {\n        await initializationPromisesMap[foundConfig.appId];\n      }\n    }\n  } catch (e) {\n    logger.error(e);\n  }\n  gtagCore(GtagCommand.CONFIG, measurementId, gtagParams);\n}\n\n/**\n * Wrapped gtag logic when gtag is called with 'event' command.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementId GA Measurement ID to log event to.\n * @param gtagParams Params to log with this event.\n */\nasync function gtagOnEvent(\n  gtagCore: Gtag,\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementId: string,\n  gtagParams?: ControlParams & EventParams & CustomParams\n): Promise<void> {\n  try {\n    let initializationPromisesToWaitFor: Array<Promise<string>> = [];\n\n    // If there's a 'send_to' param, check if any ID specified matches\n    // an initializeIds() promise we are waiting for.\n    if (gtagParams && gtagParams['send_to']) {\n      let gaSendToList: string | string[] = gtagParams['send_to'];\n      // Make it an array if is isn't, so it can be dealt with the same way.\n      if (!Array.isArray(gaSendToList)) {\n        gaSendToList = [gaSendToList];\n      }\n      // Checking 'send_to' fields requires having all measurement ID results back from\n      // the dynamic config fetch.\n      const dynamicConfigResults = await promiseAllSettled(\n        dynamicConfigPromisesList\n      );\n      for (const sendToId of gaSendToList) {\n        // Any fetched dynamic measurement ID that matches this 'send_to' ID\n        const foundConfig = dynamicConfigResults.find(\n          config => config.measurementId === sendToId\n        );\n        const initializationPromise =\n          foundConfig && initializationPromisesMap[foundConfig.appId];\n        if (initializationPromise) {\n          initializationPromisesToWaitFor.push(initializationPromise);\n        } else {\n          // Found an item in 'send_to' that is not associated\n          // directly with an FID, possibly a group.  Empty this array,\n          // exit the loop early, and let it get populated below.\n          initializationPromisesToWaitFor = [];\n          break;\n        }\n      }\n    }\n\n    // This will be unpopulated if there was no 'send_to' field , or\n    // if not all entries in the 'send_to' field could be mapped to\n    // a FID. In these cases, wait on all pending initialization promises.\n    if (initializationPromisesToWaitFor.length === 0) {\n      initializationPromisesToWaitFor = Object.values(\n        initializationPromisesMap\n      );\n    }\n\n    // Run core gtag function with args after all relevant initialization\n    // promises have been resolved.\n    await Promise.all(initializationPromisesToWaitFor);\n    // Workaround for http://b/141370449 - third argument cannot be undefined.\n    gtagCore(GtagCommand.EVENT, measurementId, gtagParams || {});\n  } catch (e) {\n    logger.error(e);\n  }\n}\n\n/**\n * Wraps a standard gtag function with extra code to wait for completion of\n * relevant initialization promises before sending requests.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n */\nfunction wrapGtag(\n  gtagCore: Gtag,\n  /**\n   * Allows wrapped gtag calls to wait on whichever intialization promises are required,\n   * depending on the contents of the gtag params' `send_to` field, if any.\n   */\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  /**\n   * Wrapped gtag calls sometimes require all dynamic config fetches to have returned\n   * before determining what initialization promises (which include FIDs) to wait for.\n   */\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  /**\n   * Wrapped gtag config calls can narrow down which initialization promise (with FID)\n   * to wait for if the measurementId is already fetched, by getting the corresponding appId,\n   * which is the key for the initialization promises map.\n   */\n  measurementIdToAppId: { [measurementId: string]: string }\n): Gtag {\n  /**\n   * Wrapper around gtag that ensures FID is sent with gtag calls.\n   * @param command Gtag command type.\n   * @param idOrNameOrParams Measurement ID if command is EVENT/CONFIG, params if command is SET.\n   * @param gtagParams Params if event is EVENT/CONFIG.\n   */\n  async function gtagWrapper(\n    command: 'config' | 'set' | 'event',\n    idOrNameOrParams: string | ControlParams,\n    gtagParams?: ControlParams & EventParams & CustomParams\n  ): Promise<void> {\n    try {\n      // If event, check that relevant initialization promises have completed.\n      if (command === GtagCommand.EVENT) {\n        // If EVENT, second arg must be measurementId.\n        await gtagOnEvent(\n          gtagCore,\n          initializationPromisesMap,\n          dynamicConfigPromisesList,\n          idOrNameOrParams as string,\n          gtagParams\n        );\n      } else if (command === GtagCommand.CONFIG) {\n        // If CONFIG, second arg must be measurementId.\n        await gtagOnConfig(\n          gtagCore,\n          initializationPromisesMap,\n          dynamicConfigPromisesList,\n          measurementIdToAppId,\n          idOrNameOrParams as string,\n          gtagParams\n        );\n      } else {\n        // If SET, second arg must be params.\n        gtagCore(GtagCommand.SET, idOrNameOrParams as CustomParams);\n      }\n    } catch (e) {\n      logger.error(e);\n    }\n  }\n  return gtagWrapper as Gtag;\n}\n\n/**\n * Creates global gtag function or wraps existing one if found.\n * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and\n * 'event' calls that belong to the GAID associated with this Firebase instance.\n *\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n * @param dataLayerName Name of global GA datalayer array.\n * @param gtagFunctionName Name of global gtag function (\"gtag\" if not user-specified).\n */\nexport function wrapOrCreateGtag(\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementIdToAppId: { [measurementId: string]: string },\n  dataLayerName: string,\n  gtagFunctionName: string\n): {\n  gtagCore: Gtag;\n  wrappedGtag: Gtag;\n} {\n  // Create a basic core gtag function\n  let gtagCore: Gtag = function (..._args: unknown[]) {\n    // Must push IArguments object, not an array.\n    (window[dataLayerName] as DataLayer).push(arguments);\n  };\n\n  // Replace it with existing one if found\n  if (\n    window[gtagFunctionName] &&\n    typeof window[gtagFunctionName] === 'function'\n  ) {\n    // @ts-ignore\n    gtagCore = window[gtagFunctionName];\n  }\n\n  window[gtagFunctionName] = wrapGtag(\n    gtagCore,\n    initializationPromisesMap,\n    dynamicConfigPromisesList,\n    measurementIdToAppId\n  );\n\n  return {\n    gtagCore,\n    wrappedGtag: window[gtagFunctionName] as Gtag\n  };\n}\n\n/**\n * Returns first script tag in DOM matching our gtag url pattern.\n */\nexport function findGtagScriptOnPage(): HTMLScriptElement | null {\n  const scriptTags = window.document.getElementsByTagName('script');\n  for (const tag of Object.values(scriptTags)) {\n    if (tag.src && tag.src.includes(GTAG_URL)) {\n      return tag;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AnalyticsError {\n  ALREADY_EXISTS = 'already-exists',\n  ALREADY_INITIALIZED = 'already-initialized',\n  INTEROP_COMPONENT_REG_FAILED = 'interop-component-reg-failed',\n  INVALID_ANALYTICS_CONTEXT = 'invalid-analytics-context',\n  INDEXEDDB_UNAVAILABLE = 'indexeddb-unavailable',\n  FETCH_THROTTLE = 'fetch-throttle',\n  CONFIG_FETCH_FAILED = 'config-fetch-failed',\n  NO_API_KEY = 'no-api-key',\n  NO_APP_ID = 'no-app-id'\n}\n\nconst ERRORS: ErrorMap<AnalyticsError> = {\n  [AnalyticsError.ALREADY_EXISTS]:\n    'A Firebase Analytics instance with the appId {$id} ' +\n    ' already exists. ' +\n    'Only one Firebase Analytics instance can be created for each appId.',\n  [AnalyticsError.ALREADY_INITIALIZED]:\n    'Firebase Analytics has already been initialized.' +\n    'settings() must be called before initializing any Analytics instance' +\n    'or it will have no effect.',\n  [AnalyticsError.INTEROP_COMPONENT_REG_FAILED]:\n    'Firebase Analytics Interop Component failed to instantiate: {$reason}',\n  [AnalyticsError.INVALID_ANALYTICS_CONTEXT]:\n    'Firebase Analytics is not supported in this environment. ' +\n    'Wrap initialization of analytics in analytics.isSupported() ' +\n    'to prevent initialization in unsupported environments. Details: {$errorInfo}',\n  [AnalyticsError.INDEXEDDB_UNAVAILABLE]:\n    'IndexedDB unavailable or restricted in this environment. ' +\n    'Wrap initialization of analytics in analytics.isSupported() ' +\n    'to prevent initialization in unsupported environments. Details: {$errorInfo}',\n  [AnalyticsError.FETCH_THROTTLE]:\n    'The config fetch request timed out while in an exponential backoff state.' +\n    ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\n  [AnalyticsError.CONFIG_FETCH_FAILED]:\n    'Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}',\n  [AnalyticsError.NO_API_KEY]:\n    'The \"apiKey\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\n    'contain a valid API key.',\n  [AnalyticsError.NO_APP_ID]:\n    'The \"appId\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\n    'contain a valid app ID.'\n};\n\ninterface ErrorParams {\n  [AnalyticsError.ALREADY_EXISTS]: { id: string };\n  [AnalyticsError.INTEROP_COMPONENT_REG_FAILED]: { reason: Error };\n  [AnalyticsError.FETCH_THROTTLE]: { throttleEndTimeMillis: number };\n  [AnalyticsError.CONFIG_FETCH_FAILED]: {\n    httpStatus: number;\n    responseMessage: string;\n  };\n  [AnalyticsError.INVALID_ANALYTICS_CONTEXT]: { errorInfo: string };\n  [AnalyticsError.INDEXEDDB_UNAVAILABLE]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AnalyticsError, ErrorParams>(\n  'analytics',\n  'Analytics',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Most logic is copied from packages/remote-config/src/client/retrying_client.ts\n */\n\nimport { FirebaseApp } from '@firebase/app-exp';\nimport { DynamicConfig, ThrottleMetadata, MinimalDynamicConfig } from './types';\nimport { FirebaseError, calculateBackoffMillis } from '@firebase/util';\nimport { AnalyticsError, ERROR_FACTORY } from './errors';\nimport { DYNAMIC_CONFIG_URL, FETCH_TIMEOUT_MILLIS } from './constants';\nimport { logger } from './logger';\n\n// App config fields needed by analytics.\nexport interface AppFields {\n  appId: string;\n  apiKey: string;\n  measurementId?: string;\n}\n\n/**\n * Backoff factor for 503 errors, which we want to be conservative about\n * to avoid overloading servers. Each retry interval will be\n * BASE_INTERVAL_MILLIS * LONG_RETRY_FACTOR ^ retryCount, so the second one\n * will be ~30 seconds (with fuzzing).\n */\nexport const LONG_RETRY_FACTOR = 30;\n\n/**\n * Base wait interval to multiplied by backoffFactor^backoffCount.\n */\nconst BASE_INTERVAL_MILLIS = 1000;\n\n/**\n * Stubbable retry data storage class.\n */\nclass RetryData {\n  constructor(\n    public throttleMetadata: { [appId: string]: ThrottleMetadata } = {},\n    public intervalMillis: number = BASE_INTERVAL_MILLIS\n  ) {}\n\n  getThrottleMetadata(appId: string): ThrottleMetadata {\n    return this.throttleMetadata[appId];\n  }\n\n  setThrottleMetadata(appId: string, metadata: ThrottleMetadata): void {\n    this.throttleMetadata[appId] = metadata;\n  }\n\n  deleteThrottleMetadata(appId: string): void {\n    delete this.throttleMetadata[appId];\n  }\n}\n\nconst defaultRetryData = new RetryData();\n\n/**\n * Set GET request headers.\n * @param apiKey App API key.\n */\nfunction getHeaders(apiKey: string): Headers {\n  return new Headers({\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\n/**\n * Fetches dynamic config from backend.\n * @param app Firebase app to fetch config for.\n */\nexport async function fetchDynamicConfig(\n  appFields: AppFields\n): Promise<DynamicConfig> {\n  const { appId, apiKey } = appFields;\n  const request: RequestInit = {\n    method: 'GET',\n    headers: getHeaders(apiKey)\n  };\n  const appUrl = DYNAMIC_CONFIG_URL.replace('{app-id}', appId);\n  const response = await fetch(appUrl, request);\n  if (response.status !== 200 && response.status !== 304) {\n    let errorMessage = '';\n    try {\n      // Try to get any error message text from server response.\n      const jsonResponse = (await response.json()) as {\n        error?: { message?: string };\n      };\n      if (jsonResponse.error?.message) {\n        errorMessage = jsonResponse.error.message;\n      }\n    } catch (_ignored) {}\n    throw ERROR_FACTORY.create(AnalyticsError.CONFIG_FETCH_FAILED, {\n      httpStatus: response.status,\n      responseMessage: errorMessage\n    });\n  }\n  return response.json();\n}\n\n/**\n * Fetches dynamic config from backend, retrying if failed.\n * @param app Firebase app to fetch config for.\n */\nexport async function fetchDynamicConfigWithRetry(\n  app: FirebaseApp,\n  // retryData and timeoutMillis are parameterized to allow passing a different value for testing.\n  retryData: RetryData = defaultRetryData,\n  timeoutMillis?: number\n): Promise<DynamicConfig | MinimalDynamicConfig> {\n  const { appId, apiKey, measurementId } = app.options;\n\n  if (!appId) {\n    throw ERROR_FACTORY.create(AnalyticsError.NO_APP_ID);\n  }\n\n  if (!apiKey) {\n    if (measurementId) {\n      return {\n        measurementId,\n        appId\n      };\n    }\n    throw ERROR_FACTORY.create(AnalyticsError.NO_API_KEY);\n  }\n\n  const throttleMetadata: ThrottleMetadata = retryData.getThrottleMetadata(\n    appId\n  ) || {\n    backoffCount: 0,\n    throttleEndTimeMillis: Date.now()\n  };\n\n  const signal = new AnalyticsAbortSignal();\n\n  setTimeout(\n    async () => {\n      // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n      signal.abort();\n    },\n    timeoutMillis !== undefined ? timeoutMillis : FETCH_TIMEOUT_MILLIS\n  );\n\n  return attemptFetchDynamicConfigWithRetry(\n    { appId, apiKey, measurementId },\n    throttleMetadata,\n    signal,\n    retryData\n  );\n}\n\n/**\n * Runs one retry attempt.\n * @param appFields Necessary app config fields.\n * @param throttleMetadata Ongoing metadata to determine throttling times.\n * @param signal Abort signal.\n */\nasync function attemptFetchDynamicConfigWithRetry(\n  appFields: AppFields,\n  { throttleEndTimeMillis, backoffCount }: ThrottleMetadata,\n  signal: AnalyticsAbortSignal,\n  retryData: RetryData = defaultRetryData // for testing\n): Promise<DynamicConfig | MinimalDynamicConfig> {\n  const { appId, measurementId } = appFields;\n  // Starts with a (potentially zero) timeout to support resumption from stored state.\n  // Ensures the throttle end time is honored if the last attempt timed out.\n  // Note the SDK will never make a request if the fetch timeout expires at this point.\n  try {\n    await setAbortableTimeout(signal, throttleEndTimeMillis);\n  } catch (e) {\n    if (measurementId) {\n      logger.warn(\n        `Timed out fetching this Firebase app's measurement ID from the server.` +\n          ` Falling back to the measurement ID ${measurementId}` +\n          ` provided in the \"measurementId\" field in the local Firebase config. [${e.message}]`\n      );\n      return { appId, measurementId };\n    }\n    throw e;\n  }\n\n  try {\n    const response = await fetchDynamicConfig(appFields);\n\n    // Note the SDK only clears throttle state if response is success or non-retriable.\n    retryData.deleteThrottleMetadata(appId);\n\n    return response;\n  } catch (e) {\n    if (!isRetriableError(e)) {\n      retryData.deleteThrottleMetadata(appId);\n      if (measurementId) {\n        logger.warn(\n          `Failed to fetch this Firebase app's measurement ID from the server.` +\n            ` Falling back to the measurement ID ${measurementId}` +\n            ` provided in the \"measurementId\" field in the local Firebase config. [${e.message}]`\n        );\n        return { appId, measurementId };\n      } else {\n        throw e;\n      }\n    }\n\n    const backoffMillis =\n      Number(e.customData.httpStatus) === 503\n        ? calculateBackoffMillis(\n            backoffCount,\n            retryData.intervalMillis,\n            LONG_RETRY_FACTOR\n          )\n        : calculateBackoffMillis(backoffCount, retryData.intervalMillis);\n\n    // Increments backoff state.\n    const throttleMetadata = {\n      throttleEndTimeMillis: Date.now() + backoffMillis,\n      backoffCount: backoffCount + 1\n    };\n\n    // Persists state.\n    retryData.setThrottleMetadata(appId, throttleMetadata);\n    logger.debug(`Calling attemptFetch again in ${backoffMillis} millis`);\n\n    return attemptFetchDynamicConfigWithRetry(\n      appFields,\n      throttleMetadata,\n      signal,\n      retryData\n    );\n  }\n}\n\n/**\n * Supports waiting on a backoff by:\n *\n * <ul>\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\n *       request appear the same.</li>\n * </ul>\n *\n * <p>Visible for testing.\n */\nfunction setAbortableTimeout(\n  signal: AnalyticsAbortSignal,\n  throttleEndTimeMillis: number\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    // Derives backoff from given end time, normalizing negative numbers to zero.\n    const backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n\n    const timeout = setTimeout(resolve, backoffMillis);\n\n    // Adds listener, rather than sets onabort, because signal is a shared object.\n    signal.addEventListener(() => {\n      clearTimeout(timeout);\n      // If the request completes before this timeout, the rejection has no effect.\n      reject(\n        ERROR_FACTORY.create(AnalyticsError.FETCH_THROTTLE, {\n          throttleEndTimeMillis\n        })\n      );\n    });\n  });\n}\n\ntype RetriableError = FirebaseError & { customData: { httpStatus: string } };\n\n/**\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\n */\nfunction isRetriableError(e: Error): e is RetriableError {\n  if (!(e instanceof FirebaseError) || !e.customData) {\n    return false;\n  }\n\n  // Uses string index defined by ErrorData, which FirebaseError implements.\n  const httpStatus = Number(e.customData['httpStatus']);\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\n/**\n * Shims a minimal AbortSignal (copied from Remote Config).\n *\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\n * swapped out if/when we do.\n */\nexport class AnalyticsAbortSignal {\n  listeners: Array<() => void> = [];\n  addEventListener(listener: () => void): void {\n    this.listeners.push(listener);\n  }\n  abort(): void {\n    this.listeners.forEach(listener => listener());\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicConfig, Gtag, MinimalDynamicConfig } from './types';\nimport { GtagCommand, GA_FID_KEY, ORIGIN_KEY } from './constants';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations-exp';\nimport { fetchDynamicConfigWithRetry } from './get-config';\nimport { logger } from './logger';\nimport { FirebaseApp } from '@firebase/app-exp';\nimport {\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport { ERROR_FACTORY, AnalyticsError } from './errors';\nimport { findGtagScriptOnPage, insertScriptTag } from './helpers';\n\nasync function validateIndexedDB(): Promise<boolean> {\n  if (!isIndexedDBAvailable()) {\n    logger.warn(\n      ERROR_FACTORY.create(AnalyticsError.INDEXEDDB_UNAVAILABLE, {\n        errorInfo: 'IndexedDB is not available in this environment.'\n      }).message\n    );\n    return false;\n  } else {\n    try {\n      await validateIndexedDBOpenable();\n    } catch (e) {\n      logger.warn(\n        ERROR_FACTORY.create(AnalyticsError.INDEXEDDB_UNAVAILABLE, {\n          errorInfo: e\n        }).message\n      );\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Initialize the analytics instance in gtag.js by calling config command with fid.\n *\n * NOTE: We combine analytics initialization and setting fid together because we want fid to be\n * part of the `page_view` event that's sent during the initialization\n * @param app Firebase app\n * @param gtagCore The gtag function that's not wrapped.\n * @param dynamicConfigPromisesList Array of all dynamic config promises.\n * @param measurementIdToAppId Maps measurementID to appID.\n * @param installations _FirebaseInstallationsInternal instance.\n *\n * @returns Measurement ID.\n */\nexport async function initializeAnalytics(\n  app: FirebaseApp,\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementIdToAppId: { [key: string]: string },\n  installations: _FirebaseInstallationsInternal,\n  gtagCore: Gtag,\n  dataLayerName: string\n): Promise<string> {\n  const dynamicConfigPromise = fetchDynamicConfigWithRetry(app);\n  // Once fetched, map measurementIds to appId, for ease of lookup in wrapped gtag function.\n  dynamicConfigPromise\n    .then(config => {\n      measurementIdToAppId[config.measurementId] = config.appId;\n      if (\n        app.options.measurementId &&\n        config.measurementId !== app.options.measurementId\n      ) {\n        logger.warn(\n          `The measurement ID in the local Firebase config (${app.options.measurementId})` +\n            ` does not match the measurement ID fetched from the server (${config.measurementId}).` +\n            ` To ensure analytics events are always sent to the correct Analytics property,` +\n            ` update the` +\n            ` measurement ID field in the local config or remove it from the local config.`\n        );\n      }\n    })\n    .catch(e => logger.error(e));\n  // Add to list to track state of all dynamic config promises.\n  dynamicConfigPromisesList.push(dynamicConfigPromise);\n\n  const fidPromise: Promise<string | undefined> = validateIndexedDB().then(\n    envIsValid => {\n      if (envIsValid) {\n        return installations.getId();\n      } else {\n        return undefined;\n      }\n    }\n  );\n\n  const [dynamicConfig, fid] = await Promise.all([\n    dynamicConfigPromise,\n    fidPromise\n  ]);\n\n  // Detect if user has already put the gtag <script> tag on this page.\n  if (!findGtagScriptOnPage()) {\n    insertScriptTag(dataLayerName, dynamicConfig.measurementId);\n  }\n\n  // This command initializes gtag.js and only needs to be called once for the entire web app,\n  // but since it is idempotent, we can call it multiple times.\n  // We keep it together with other initialization logic for better code structure.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (gtagCore as any)('js', new Date());\n\n  const configProperties: { [key: string]: string | boolean } = {\n    // guard against developers accidentally setting properties with prefix `firebase_`\n    [ORIGIN_KEY]: 'firebase',\n    update: true\n  };\n\n  if (fid != null) {\n    configProperties[GA_FID_KEY] = fid;\n  }\n\n  // It should be the first config command called on this GA-ID\n  // Initialize this GA-ID and set FID on it using the gtag config API.\n  // Note: This will trigger a page_view event unless 'send_page_view' is set to false in\n  // `configProperties`.\n  gtagCore(GtagCommand.CONFIG, dynamicConfig.measurementId, configProperties);\n  return dynamicConfig.measurementId;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SettingsOptions, Analytics } from './public-types';\nimport { Gtag, DynamicConfig, MinimalDynamicConfig } from './types';\nimport { getOrCreateDataLayer, wrapOrCreateGtag } from './helpers';\nimport { AnalyticsError, ERROR_FACTORY } from './errors';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations-exp';\nimport { areCookiesEnabled, isBrowserExtension } from '@firebase/util';\nimport { initializeAnalytics } from './initialize-analytics';\nimport { logger } from './logger';\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-exp';\n\n/**\n * Analytics Service class.\n */\nexport class AnalyticsService implements Analytics, _FirebaseService {\n  constructor(public app: FirebaseApp) {}\n  _delete(): Promise<void> {\n    delete initializationPromisesMap[this.app.options.appId!];\n    return Promise.resolve();\n  }\n}\n\n/**\n * Maps appId to full initialization promise. Wrapped gtag calls must wait on\n * all or some of these, depending on the call's `send_to` param and the status\n * of the dynamic config fetches (see below).\n */\nexport let initializationPromisesMap: {\n  [appId: string]: Promise<string>; // Promise contains measurement ID string.\n} = {};\n\n/**\n * List of dynamic config fetch promises. In certain cases, wrapped gtag calls\n * wait on all these to be complete in order to determine if it can selectively\n * wait for only certain initialization (FID) promises or if it must wait for all.\n */\nlet dynamicConfigPromisesList: Array<\n  Promise<DynamicConfig | MinimalDynamicConfig>\n> = [];\n\n/**\n * Maps fetched measurementIds to appId. Populated when the app's dynamic config\n * fetch completes. If already populated, gtag config calls can use this to\n * selectively wait for only this app's initialization promise (FID) instead of all\n * initialization promises.\n */\nconst measurementIdToAppId: { [measurementId: string]: string } = {};\n\n/**\n * Name for window global data layer array used by GA: defaults to 'dataLayer'.\n */\nlet dataLayerName: string = 'dataLayer';\n\n/**\n * Name for window global gtag function used by GA: defaults to 'gtag'.\n */\nlet gtagName: string = 'gtag';\n\n/**\n * Reproduction of standard gtag function or reference to existing\n * gtag function on window object.\n */\nlet gtagCoreFunction: Gtag;\n\n/**\n * Wrapper around gtag function that ensures FID is sent with all\n * relevant event and config calls.\n */\nexport let wrappedGtagFunction: Gtag;\n\n/**\n * Flag to ensure page initialization steps (creation or wrapping of\n * dataLayer and gtag script) are only run once per page load.\n */\nlet globalInitDone: boolean = false;\n\n/**\n * For testing\n * @internal\n */\nexport function resetGlobalVars(\n  newGlobalInitDone = false,\n  newInitializationPromisesMap = {},\n  newDynamicPromises = []\n): void {\n  globalInitDone = newGlobalInitDone;\n  initializationPromisesMap = newInitializationPromisesMap;\n  dynamicConfigPromisesList = newDynamicPromises;\n  dataLayerName = 'dataLayer';\n  gtagName = 'gtag';\n}\n\n/**\n * For testing\n * @internal\n */\nexport function getGlobalVars(): {\n  initializationPromisesMap: { [appId: string]: Promise<string> };\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >;\n} {\n  return {\n    initializationPromisesMap,\n    dynamicConfigPromisesList\n  };\n}\n\n/**\n * Configures Firebase Analytics to use custom `gtag` or `dataLayer` names.\n * Intended to be used if `gtag.js` script has been installed on\n * this page independently of Firebase Analytics, and is using non-default\n * names for either the `gtag` function or for `dataLayer`.\n * Must be called before calling `getAnalytics()` or it won't\n * have any effect.\n *\n * @public\n *\n * @param options - Custom gtag and dataLayer names.\n */\nexport function settings(options: SettingsOptions): void {\n  if (globalInitDone) {\n    throw ERROR_FACTORY.create(AnalyticsError.ALREADY_INITIALIZED);\n  }\n  if (options.dataLayerName) {\n    dataLayerName = options.dataLayerName;\n  }\n  if (options.gtagName) {\n    gtagName = options.gtagName;\n  }\n}\n\n/**\n * Returns true if no environment mismatch is found.\n * If environment mismatches are found, throws an INVALID_ANALYTICS_CONTEXT\n * error that also lists details for each mismatch found.\n */\nfunction warnOnBrowserContextMismatch(): void {\n  const mismatchedEnvMessages = [];\n  if (isBrowserExtension()) {\n    mismatchedEnvMessages.push('This is a browser extension environment.');\n  }\n  if (!areCookiesEnabled()) {\n    mismatchedEnvMessages.push('Cookies are not available.');\n  }\n  if (mismatchedEnvMessages.length > 0) {\n    const details = mismatchedEnvMessages\n      .map((message, index) => `(${index + 1}) ${message}`)\n      .join(' ');\n    const err = ERROR_FACTORY.create(AnalyticsError.INVALID_ANALYTICS_CONTEXT, {\n      errorInfo: details\n    });\n    logger.warn(err.message);\n  }\n}\n\n/**\n * Analytics instance factory.\n * @internal\n */\nexport function factory(\n  app: FirebaseApp,\n  installations: _FirebaseInstallationsInternal\n): AnalyticsService {\n  warnOnBrowserContextMismatch();\n  const appId = app.options.appId;\n  if (!appId) {\n    throw ERROR_FACTORY.create(AnalyticsError.NO_APP_ID);\n  }\n  if (!app.options.apiKey) {\n    if (app.options.measurementId) {\n      logger.warn(\n        `The \"apiKey\" field is empty in the local Firebase config. This is needed to fetch the latest` +\n          ` measurement ID for this Firebase app. Falling back to the measurement ID ${app.options.measurementId}` +\n          ` provided in the \"measurementId\" field in the local Firebase config.`\n      );\n    } else {\n      throw ERROR_FACTORY.create(AnalyticsError.NO_API_KEY);\n    }\n  }\n  if (initializationPromisesMap[appId] != null) {\n    throw ERROR_FACTORY.create(AnalyticsError.ALREADY_EXISTS, {\n      id: appId\n    });\n  }\n\n  if (!globalInitDone) {\n    // Steps here should only be done once per page: creation or wrapping\n    // of dataLayer and global gtag function.\n\n    getOrCreateDataLayer(dataLayerName);\n\n    const { wrappedGtag, gtagCore } = wrapOrCreateGtag(\n      initializationPromisesMap,\n      dynamicConfigPromisesList,\n      measurementIdToAppId,\n      dataLayerName,\n      gtagName\n    );\n    wrappedGtagFunction = wrappedGtag;\n    gtagCoreFunction = gtagCore;\n\n    globalInitDone = true;\n  }\n  // Async but non-blocking.\n  // This map reflects the completion state of all promises for each appId.\n  initializationPromisesMap[appId] = initializeAnalytics(\n    app,\n    dynamicConfigPromisesList,\n    measurementIdToAppId,\n    installations,\n    gtagCoreFunction,\n    dataLayerName\n  );\n\n  const analyticsInstance: AnalyticsService = new AnalyticsService(app);\n\n  return analyticsInstance;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable camelcase */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app-exp';\nimport {\n  Analytics,\n  AnalyticsCallOptions,\n  CustomParams,\n  EventNameString,\n  EventParams\n} from './public-types';\nimport { Provider } from '@firebase/component';\nimport {\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable,\n  areCookiesEnabled,\n  isBrowserExtension,\n  getModularInstance\n} from '@firebase/util';\nimport { ANALYTICS_TYPE } from './constants';\nimport {\n  AnalyticsService,\n  initializationPromisesMap,\n  wrappedGtagFunction\n} from './factory';\nimport { logger } from './logger';\nimport {\n  logEvent as internalLogEvent,\n  setCurrentScreen as internalSetCurrentScreen,\n  setUserId as internalSetUserId,\n  setUserProperties as internalSetUserProperties,\n  setAnalyticsCollectionEnabled as internalSetAnalyticsCollectionEnabled\n} from './functions';\n\nexport { settings } from './factory';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    [ANALYTICS_TYPE]: AnalyticsService;\n  }\n}\n\n/**\n * Returns a Firebase Analytics instance for the given app.\n *\n * @public\n *\n * @param app - The FirebaseApp to use.\n */\nexport function getAnalytics(app: FirebaseApp = getApp()): Analytics {\n  app = getModularInstance(app);\n  // Dependencies\n  const analyticsProvider: Provider<'analytics-exp'> = _getProvider(\n    app,\n    ANALYTICS_TYPE\n  );\n  const analyticsInstance = analyticsProvider.getImmediate();\n  return analyticsInstance;\n}\n\n/**\n * This is a public static method provided to users that wraps four different checks:\n *\n * 1. Check if it's not a browser extension environment.\n * 2. Check if cookies are enabled in current browser.\n * 3. Check if IndexedDB is supported by the browser environment.\n * 4. Check if the current browser context is valid for using IndexedDB.open().\n *\n * @public\n *\n */\nexport async function isSupported(): Promise<boolean> {\n  if (isBrowserExtension()) {\n    return false;\n  }\n  if (!areCookiesEnabled()) {\n    return false;\n  }\n  if (!isIndexedDBAvailable()) {\n    return false;\n  }\n\n  try {\n    const isDBOpenable: boolean = await validateIndexedDBOpenable();\n    return isDBOpenable;\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Use gtag 'config' command to set 'screen_name'.\n *\n * @public\n *\n * @param analyticsInstance - Firebase Analytics instance.\n * @param screenName - Screen name to set.\n */\nexport function setCurrentScreen(\n  analyticsInstance: Analytics,\n  screenName: string,\n  options?: AnalyticsCallOptions\n): void {\n  analyticsInstance = getModularInstance(analyticsInstance);\n  internalSetCurrentScreen(\n    wrappedGtagFunction,\n    initializationPromisesMap[analyticsInstance.app.options.appId!],\n    screenName,\n    options\n  ).catch(e => logger.error(e));\n}\n\n/**\n * Use gtag 'config' command to set 'user_id'.\n *\n * @public\n *\n * @param analyticsInstance - Firebase Analytics instance.\n * @param id - User ID to set.\n */\nexport function setUserId(\n  analyticsInstance: Analytics,\n  id: string,\n  options?: AnalyticsCallOptions\n): void {\n  analyticsInstance = getModularInstance(analyticsInstance);\n  internalSetUserId(\n    wrappedGtagFunction,\n    initializationPromisesMap[analyticsInstance.app.options.appId!],\n    id,\n    options\n  ).catch(e => logger.error(e));\n}\n\n/**\n * Use gtag 'config' command to set all params specified.\n *\n * @public\n */\nexport function setUserProperties(\n  analyticsInstance: Analytics,\n  properties: CustomParams,\n  options?: AnalyticsCallOptions\n): void {\n  analyticsInstance = getModularInstance(analyticsInstance);\n  internalSetUserProperties(\n    wrappedGtagFunction,\n    initializationPromisesMap[analyticsInstance.app.options.appId!],\n    properties,\n    options\n  ).catch(e => logger.error(e));\n}\n\n/**\n * Sets whether analytics collection is enabled for this app on this device.\n * window['ga-disable-analyticsId'] = true;\n *\n * @public\n *\n * @param analyticsInstance - Firebase Analytics instance.\n * @param enabled - If true, enables collection, if false, disables it.\n */\nexport function setAnalyticsCollectionEnabled(\n  analyticsInstance: Analytics,\n  enabled: boolean\n): void {\n  analyticsInstance = getModularInstance(analyticsInstance);\n  internalSetAnalyticsCollectionEnabled(\n    initializationPromisesMap[analyticsInstance.app.options.appId!],\n    enabled\n  ).catch(e => logger.error(e));\n}\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'add_payment_info',\n  eventParams?: {\n    coupon?: EventParams['coupon'];\n    currency?: EventParams['currency'];\n    items?: EventParams['items'];\n    payment_type?: EventParams['payment_type'];\n    value?: EventParams['value'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'add_shipping_info',\n  eventParams?: {\n    coupon?: EventParams['coupon'];\n    currency?: EventParams['currency'];\n    items?: EventParams['items'];\n    shipping_tier?: EventParams['shipping_tier'];\n    value?: EventParams['value'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'add_to_cart' | 'add_to_wishlist' | 'remove_from_cart',\n  eventParams?: {\n    currency?: EventParams['currency'];\n    value?: EventParams['value'];\n    items?: EventParams['items'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'begin_checkout',\n  eventParams?: {\n    currency?: EventParams['currency'];\n    coupon?: EventParams['coupon'];\n    value?: EventParams['value'];\n    items?: EventParams['items'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'checkout_progress',\n  eventParams?: {\n    currency?: EventParams['currency'];\n    coupon?: EventParams['coupon'];\n    value?: EventParams['value'];\n    items?: EventParams['items'];\n    checkout_step?: EventParams['checkout_step'];\n    checkout_option?: EventParams['checkout_option'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'exception',\n  eventParams?: {\n    description?: EventParams['description'];\n    fatal?: EventParams['fatal'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'generate_lead',\n  eventParams?: {\n    value?: EventParams['value'];\n    currency?: EventParams['currency'];\n    transaction_id?: EventParams['transaction_id'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'login',\n  eventParams?: {\n    method?: EventParams['method'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'page_view',\n  eventParams?: {\n    page_title?: string;\n    page_location?: string;\n    page_path?: string;\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'purchase' | 'refund',\n  eventParams?: {\n    value?: EventParams['value'];\n    currency?: EventParams['currency'];\n    transaction_id: EventParams['transaction_id'];\n    tax?: EventParams['tax'];\n    shipping?: EventParams['shipping'];\n    items?: EventParams['items'];\n    coupon?: EventParams['coupon'];\n    affiliation?: EventParams['affiliation'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'screen_view',\n  eventParams?: {\n    app_name: string;\n    screen_name: EventParams['screen_name'];\n    app_id?: string;\n    app_version?: string;\n    app_installer_id?: string;\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'search' | 'view_search_results',\n  eventParams?: {\n    search_term?: EventParams['search_term'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'select_content',\n  eventParams?: {\n    items?: EventParams['items'];\n    promotions?: EventParams['promotions'];\n    content_type?: EventParams['content_type'];\n    content_id?: EventParams['content_id'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'select_item',\n  eventParams?: {\n    items?: EventParams['items'];\n    item_list_name?: EventParams['item_list_name'];\n    item_list_id?: EventParams['item_list_id'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'select_promotion' | 'view_promotion',\n  eventParams?: {\n    items?: EventParams['items'];\n    promotion_id?: EventParams['promotion_id'];\n    promotion_name?: EventParams['promotion_name'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'set_checkout_option',\n  eventParams?: {\n    checkout_step?: EventParams['checkout_step'];\n    checkout_option?: EventParams['checkout_option'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'share',\n  eventParams?: {\n    method?: EventParams['method'];\n    content_type?: EventParams['content_type'];\n    content_id?: EventParams['content_id'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'sign_up',\n  eventParams?: {\n    method?: EventParams['method'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'timing_complete',\n  eventParams?: {\n    name: string;\n    value: number;\n    event_category?: string;\n    event_label?: string;\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'view_cart' | 'view_item',\n  eventParams?: {\n    currency?: EventParams['currency'];\n    items?: EventParams['items'];\n    value?: EventParams['value'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'view_item_list',\n  eventParams?: {\n    items?: EventParams['items'];\n    item_list_name?: EventParams['item_list_name'];\n    item_list_id?: EventParams['item_list_id'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n */\nexport function logEvent<T extends string>(\n  analyticsInstance: Analytics,\n  eventName: CustomEventName<T>,\n  eventParams?: { [key: string]: any },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * List of official event parameters can be found in the gtag.js\n * reference documentation:\n * {@link https://developers.google.com/gtagjs/reference/event\n * | the gtag.js reference documentation}.\n *\n * @public\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: string,\n  eventParams?: EventParams,\n  options?: AnalyticsCallOptions\n): void {\n  analyticsInstance = getModularInstance(analyticsInstance);\n  internalLogEvent(\n    wrappedGtagFunction,\n    initializationPromisesMap[analyticsInstance.app.options.appId!],\n    eventName,\n    eventParams,\n    options\n  ).catch(e => logger.error(e));\n}\n\n/**\n * Any custom event name string not in the standard list of recommended\n * event names.\n * @public\n */\nexport type CustomEventName<T> = T extends EventNameString ? never : T;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnalyticsCallOptions,\n  CustomParams,\n  ControlParams,\n  EventParams\n} from './public-types';\nimport { Gtag } from './types';\nimport { GtagCommand } from './constants';\n/**\n * Logs an analytics event through the Firebase SDK.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param eventName Google Analytics event name, choose from standard list or use a custom string.\n * @param eventParams Analytics event parameters.\n */\nexport async function logEvent(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  eventName: string,\n  eventParams?: EventParams,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    gtagFunction(GtagCommand.EVENT, eventName, eventParams);\n    return;\n  } else {\n    const measurementId = await initializationPromise;\n    const params: EventParams | ControlParams = {\n      ...eventParams,\n      'send_to': measurementId\n    };\n    gtagFunction(GtagCommand.EVENT, eventName, params);\n  }\n}\n\n/**\n * Set screen_name parameter for this Google Analytics ID.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param screenName Screen name string to set.\n */\nexport async function setCurrentScreen(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  screenName: string | null,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    gtagFunction(GtagCommand.SET, { 'screen_name': screenName });\n    return Promise.resolve();\n  } else {\n    const measurementId = await initializationPromise;\n    gtagFunction(GtagCommand.CONFIG, measurementId, {\n      update: true,\n      'screen_name': screenName\n    });\n  }\n}\n\n/**\n * Set user_id parameter for this Google Analytics ID.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param id User ID string to set\n */\nexport async function setUserId(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  id: string | null,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    gtagFunction(GtagCommand.SET, { 'user_id': id });\n    return Promise.resolve();\n  } else {\n    const measurementId = await initializationPromise;\n    gtagFunction(GtagCommand.CONFIG, measurementId, {\n      update: true,\n      'user_id': id\n    });\n  }\n}\n\n/**\n * Set all other user properties other than user_id and screen_name.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param properties Map of user properties to set\n */\nexport async function setUserProperties(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  properties: CustomParams,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    const flatProperties: { [key: string]: unknown } = {};\n    for (const key of Object.keys(properties)) {\n      // use dot notation for merge behavior in gtag.js\n      flatProperties[`user_properties.${key}`] = properties[key];\n    }\n    gtagFunction(GtagCommand.SET, flatProperties);\n    return Promise.resolve();\n  } else {\n    const measurementId = await initializationPromise;\n    gtagFunction(GtagCommand.CONFIG, measurementId, {\n      update: true,\n      'user_properties': properties\n    });\n  }\n}\n\n/**\n * Set whether collection is enabled for this ID.\n *\n * @param enabled If true, collection is enabled for this ID.\n */\nexport async function setAnalyticsCollectionEnabled(\n  initializationPromise: Promise<string>,\n  enabled: boolean\n): Promise<void> {\n  const measurementId = await initializationPromise;\n  window[`ga-disable-${measurementId}`] = !enabled;\n}\n","/**\n * Firebase Analytics\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerVersion, _registerComponent } from '@firebase/app-exp';\nimport { FirebaseAnalyticsInternal } from '@firebase/analytics-interop-types';\nimport { factory } from './factory';\nimport { ANALYTICS_TYPE } from './constants';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer\n} from '@firebase/component';\nimport { ERROR_FACTORY, AnalyticsError } from './errors';\nimport { logEvent } from './api';\nimport { name, version } from '../package.json';\nimport { AnalyticsCallOptions } from './public-types';\nimport '@firebase/installations-exp';\n\ndeclare global {\n  interface Window {\n    [key: string]: unknown;\n  }\n}\n\nfunction registerAnalytics(): void {\n  _registerComponent(\n    new Component(\n      ANALYTICS_TYPE,\n      container => {\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app-exp').getImmediate();\n        const installations = container\n          .getProvider('installations-exp-internal')\n          .getImmediate();\n\n        return factory(app, installations);\n      },\n      ComponentType.PUBLIC\n    )\n  );\n\n  _registerComponent(\n    new Component('analytics-internal', internalFactory, ComponentType.PRIVATE)\n  );\n\n  registerVersion(name, version);\n\n  function internalFactory(\n    container: ComponentContainer\n  ): FirebaseAnalyticsInternal {\n    try {\n      const analytics = container.getProvider(ANALYTICS_TYPE).getImmediate();\n      return {\n        logEvent: (\n          eventName: string,\n          eventParams?: { [key: string]: unknown },\n          options?: AnalyticsCallOptions\n        ) => logEvent(analytics, eventName, eventParams, options)\n      };\n    } catch (e) {\n      throw ERROR_FACTORY.create(AnalyticsError.INTEROP_COMPONENT_REG_FAILED, {\n        reason: e\n      });\n    }\n  }\n}\n\nregisterAnalytics();\n\nexport * from './api';\nexport * from './public-types';\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Officially recommended event names for gtag.js\n * Any other string is also allowed.\n */\nexport enum EventName {\n  ADD_SHIPPING_INFO = 'add_shipping_info',\n  ADD_PAYMENT_INFO = 'add_payment_info',\n  ADD_TO_CART = 'add_to_cart',\n  ADD_TO_WISHLIST = 'add_to_wishlist',\n  BEGIN_CHECKOUT = 'begin_checkout',\n  /**\n   * @deprecated\n   * This event name is deprecated and is unsupported in updated\n   * Enhanced Ecommerce reports.\n   */\n  CHECKOUT_PROGRESS = 'checkout_progress',\n  EXCEPTION = 'exception',\n  GENERATE_LEAD = 'generate_lead',\n  LOGIN = 'login',\n  PAGE_VIEW = 'page_view',\n  PURCHASE = 'purchase',\n  REFUND = 'refund',\n  REMOVE_FROM_CART = 'remove_from_cart',\n  SCREEN_VIEW = 'screen_view',\n  SEARCH = 'search',\n  SELECT_CONTENT = 'select_content',\n  SELECT_ITEM = 'select_item',\n  SELECT_PROMOTION = 'select_promotion',\n  /** @deprecated */\n  SET_CHECKOUT_OPTION = 'set_checkout_option',\n  SHARE = 'share',\n  SIGN_UP = 'sign_up',\n  TIMING_COMPLETE = 'timing_complete',\n  VIEW_CART = 'view_cart',\n  VIEW_ITEM = 'view_item',\n  VIEW_ITEM_LIST = 'view_item_list',\n  VIEW_PROMOTION = 'view_promotion',\n  VIEW_SEARCH_RESULTS = 'view_search_results'\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnalyticsCallOptions,\n  CustomParams,\n  EventParams,\n  FirebaseAnalytics\n} from '@firebase/analytics-types';\nimport {\n  Analytics as AnalyticsServiceExp,\n  logEvent as logEventExp,\n  setAnalyticsCollectionEnabled as setAnalyticsCollectionEnabledExp,\n  setCurrentScreen as setCurrentScreenExp,\n  setUserId as setUserIdExp,\n  setUserProperties as setUserPropertiesExp\n} from '@firebase/analytics-exp';\nimport { _FirebaseService, FirebaseApp } from '@firebase/app-compat';\n\nexport class AnalyticsService implements FirebaseAnalytics, _FirebaseService {\n  constructor(\n    public app: FirebaseApp,\n    readonly _delegate: AnalyticsServiceExp\n  ) {}\n\n  logEvent(\n    eventName: string,\n    eventParams?: EventParams | CustomParams,\n    options?: AnalyticsCallOptions\n  ): void {\n    logEventExp(this._delegate, eventName as '', eventParams, options);\n  }\n\n  setCurrentScreen(screenName: string, options?: AnalyticsCallOptions): void {\n    setCurrentScreenExp(this._delegate, screenName, options);\n  }\n\n  setUserId(id: string, options?: AnalyticsCallOptions): void {\n    setUserIdExp(this._delegate, id, options);\n  }\n\n  setUserProperties(\n    properties: CustomParams,\n    options?: AnalyticsCallOptions\n  ): void {\n    setUserPropertiesExp(this._delegate, properties, options);\n  }\n\n  setAnalyticsCollectionEnabled(enabled: boolean): void {\n    setAnalyticsCollectionEnabledExp(this._delegate, enabled);\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, {\n  _FirebaseNamespace,\n  FirebaseApp\n} from '@firebase/app-compat';\nimport { FirebaseAnalytics } from '@firebase/analytics-types';\nimport { name, version } from '../package.json';\nimport { AnalyticsService } from './service';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport {\n  settings as settingsExp,\n  isSupported as isSupportedExp\n} from '@firebase/analytics-exp';\nimport { EventName } from './constants';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'analytics-compat': AnalyticsService;\n  }\n}\n\nconst factory: InstanceFactory<'analytics-compat'> = (\n  container: ComponentContainer\n) => {\n  // Dependencies\n  const app = container.getProvider('app-compat').getImmediate();\n  const analyticsServiceExp = container\n    .getProvider('analytics-exp')\n    .getImmediate();\n\n  return new AnalyticsService(app as FirebaseApp, analyticsServiceExp);\n};\n\nexport function registerAnalytics(): void {\n  const namespaceExports = {\n    Analytics: AnalyticsService,\n    settings: settingsExp,\n    isSupported: isSupportedExp,\n    // We removed this enum in exp so need to re-create it here for compat.\n    EventName\n  };\n  (firebase as _FirebaseNamespace).INTERNAL.registerComponent(\n    new Component('analytics-compat', factory, ComponentType.PUBLIC)\n      .setServiceProps(namespaceExports)\n      .setMultipleInstances(true)\n  );\n}\n\nregisterAnalytics();\nfirebase.registerVersion(name, version);\n\n/**\n * Define extension behavior of `registerAnalytics`\n */\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    analytics(app?: FirebaseApp): FirebaseAnalytics;\n  }\n  interface FirebaseApp {\n    analytics(): FirebaseAnalytics;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Defines a client, as in https://en.wikipedia.org/wiki/Client%E2%80%93server_model, for the\n * Remote Config server (https://firebase.google.com/docs/reference/remote-config/rest).\n *\n * <p>Abstracts throttle, response cache and network implementation details.\n *\n * <p>Modeled after the native {@link GlobalFetch} interface, which is relatively modern and\n * convenient, but simplified for Remote Config's use case.\n *\n * Disambiguation: {@link GlobalFetch} interface and the Remote Config service define \"fetch\"\n * methods. The RestClient uses the former to make HTTP calls. This interface abstracts the latter.\n */\nexport interface RemoteConfigFetchClient {\n  /**\n   * @throws if response status is not 200 or 304.\n   */\n  fetch(request: FetchRequest): Promise<FetchResponse>;\n}\n\n/**\n * Defines a self-descriptive reference for config key-value pairs.\n */\nexport interface FirebaseRemoteConfigObject {\n  [key: string]: string;\n}\n\n/**\n * Shims a minimal AbortSignal.\n *\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\n * swapped out if/when we do.\n */\nexport class RemoteConfigAbortSignal {\n  listeners: Array<() => void> = [];\n  addEventListener(listener: () => void): void {\n    this.listeners.push(listener);\n  }\n  abort(): void {\n    this.listeners.forEach(listener => listener());\n  }\n}\n\n/**\n * Defines per-request inputs for the Remote Config fetch request.\n *\n * <p>Modeled after the native {@link Request} interface, but simplified for Remote Config's\n * use case.\n */\nexport interface FetchRequest {\n  /**\n   * Uses cached config if it is younger than this age.\n   *\n   * <p>Required because it's defined by settings, which always have a value.\n   *\n   * <p>Comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the native\n   * Fetch API.\n   */\n  cacheMaxAgeMillis: number;\n\n  /**\n   * An event bus for the signal to abort a request.\n   *\n   * <p>Required because all requests should be abortable.\n   *\n   * <p>Comparable to the native\n   * Fetch API's \"signal\" field on its request configuration object\n   * https://fetch.spec.whatwg.org/#dom-requestinit-signal.\n   *\n   * <p>Disambiguation: Remote Config commonly refers to API inputs as\n   * \"signals\". See the private ConfigFetchRequestBody interface for those:\n   * http://google3/firebase/remote_config/web/src/core/rest_client.ts?l=14&rcl=255515243.\n   */\n  signal: RemoteConfigAbortSignal;\n\n  /**\n   * The ETag header value from the last response.\n   *\n   * <p>Optional in case this is the first request.\n   *\n   * <p>Comparable to passing `headers = { 'If-None-Match': <eTag> }` to the native Fetch API.\n   */\n  eTag?: string;\n}\n\n/**\n * Defines a successful response (200 or 304).\n *\n * <p>Modeled after the native {@link Response} interface, but simplified for Remote Config's\n * use case.\n */\nexport interface FetchResponse {\n  /**\n   * The HTTP status, which is useful for differentiating success responses with data from\n   * those without.\n   *\n   * <p>{@link RemoteConfigClient} is modeled after the native {@link GlobalFetch} interface, so\n   * HTTP status is first-class.\n   *\n   * <p>Disambiguation: the fetch response returns a legacy \"state\" value that is redundant with the\n   * HTTP status code. The former is normalized into the latter.\n   */\n  status: number;\n\n  /**\n   * Defines the ETag response header value.\n   *\n   * <p>Only defined for 200 and 304 responses.\n   */\n  eTag?: string;\n\n  /**\n   * Defines the map of parameters returned as \"entries\" in the fetch response body.\n   *\n   * <p>Only defined for 200 responses.\n   */\n  config?: FirebaseRemoteConfigObject;\n\n  // Note: we're not extracting experiment metadata until\n  // ABT and Analytics have Web SDKs.\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\n\nexport const enum ErrorCode {\n  REGISTRATION_WINDOW = 'registration-window',\n  REGISTRATION_PROJECT_ID = 'registration-project-id',\n  REGISTRATION_API_KEY = 'registration-api-key',\n  REGISTRATION_APP_ID = 'registration-app-id',\n  STORAGE_OPEN = 'storage-open',\n  STORAGE_GET = 'storage-get',\n  STORAGE_SET = 'storage-set',\n  STORAGE_DELETE = 'storage-delete',\n  FETCH_NETWORK = 'fetch-client-network',\n  FETCH_TIMEOUT = 'fetch-timeout',\n  FETCH_THROTTLE = 'fetch-throttle',\n  FETCH_PARSE = 'fetch-client-parse',\n  FETCH_STATUS = 'fetch-status'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.REGISTRATION_WINDOW]:\n    'Undefined window object. This SDK only supports usage in a browser environment.',\n  [ErrorCode.REGISTRATION_PROJECT_ID]:\n    'Undefined project identifier. Check Firebase app initialization.',\n  [ErrorCode.REGISTRATION_API_KEY]:\n    'Undefined API key. Check Firebase app initialization.',\n  [ErrorCode.REGISTRATION_APP_ID]:\n    'Undefined app identifier. Check Firebase app initialization.',\n  [ErrorCode.STORAGE_OPEN]:\n    'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.STORAGE_GET]:\n    'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.STORAGE_SET]:\n    'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.STORAGE_DELETE]:\n    'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.FETCH_NETWORK]:\n    'Fetch client failed to connect to a network. Check Internet connection.' +\n    ' Original error: {$originalErrorMessage}.',\n  [ErrorCode.FETCH_TIMEOUT]:\n    'The config fetch request timed out. ' +\n    ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.',\n  [ErrorCode.FETCH_THROTTLE]:\n    'The config fetch request timed out while in an exponential backoff state.' +\n    ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' +\n    ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\n  [ErrorCode.FETCH_PARSE]:\n    'Fetch client could not parse response.' +\n    ' Original error: {$originalErrorMessage}.',\n  [ErrorCode.FETCH_STATUS]:\n    'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.'\n};\n\n// Note this is effectively a type system binding a code to params. This approach overlaps with the\n// role of TS interfaces, but works well for a few reasons:\n// 1) JS is unaware of TS interfaces, eg we can't test for interface implementation in JS\n// 2) callers should have access to a human-readable summary of the error and this interpolates\n//    params into an error message;\n// 3) callers should be able to programmatically access data associated with an error, which\n//    ErrorData provides.\ninterface ErrorParams {\n  [ErrorCode.STORAGE_OPEN]: { originalErrorMessage: string | undefined };\n  [ErrorCode.STORAGE_GET]: { originalErrorMessage: string | undefined };\n  [ErrorCode.STORAGE_SET]: { originalErrorMessage: string | undefined };\n  [ErrorCode.STORAGE_DELETE]: { originalErrorMessage: string | undefined };\n  [ErrorCode.FETCH_NETWORK]: { originalErrorMessage: string };\n  [ErrorCode.FETCH_THROTTLE]: { throttleEndTimeMillis: number };\n  [ErrorCode.FETCH_PARSE]: { originalErrorMessage: string };\n  [ErrorCode.FETCH_STATUS]: { httpStatus: number };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'remoteconfig' /* service */,\n  'Remote Config' /* service name */,\n  ERROR_DESCRIPTION_MAP\n);\n\n// Note how this is like typeof/instanceof, but for ErrorCode.\nexport function hasErrorCode(e: Error, errorCode: ErrorCode): boolean {\n  return e instanceof FirebaseError && e.code.indexOf(errorCode) !== -1;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Value as ValueType, ValueSource } from '@firebase/remote-config-types';\n\nconst DEFAULT_VALUE_FOR_BOOLEAN = false;\nconst DEFAULT_VALUE_FOR_STRING = '';\nconst DEFAULT_VALUE_FOR_NUMBER = 0;\n\nconst BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\n\nexport class Value implements ValueType {\n  constructor(\n    private readonly _source: ValueSource,\n    private readonly _value: string = DEFAULT_VALUE_FOR_STRING\n  ) {}\n\n  asString(): string {\n    return this._value;\n  }\n\n  asBoolean(): boolean {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_BOOLEAN;\n    }\n    return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\n  }\n\n  asNumber(): number {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_NUMBER;\n    }\n    let num = Number(this._value);\n    if (isNaN(num)) {\n      num = DEFAULT_VALUE_FOR_NUMBER;\n    }\n    return num;\n  }\n\n  getSource(): ValueSource {\n    return this._source;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app-exp';\nimport {\n  LogLevel as RemoteConfigLogLevel,\n  RemoteConfig,\n  Value\n} from './public_types';\nimport { RemoteConfigAbortSignal } from './client/remote_config_fetch_client';\nimport { RC_COMPONENT_NAME } from './constants';\nimport { ErrorCode, hasErrorCode } from './errors';\nimport { RemoteConfig as RemoteConfigImpl } from './remote_config';\nimport { Value as ValueImpl } from './value';\nimport { LogLevel as FirebaseLogLevel } from '@firebase/logger';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n *\n * @param app - The `FirebaseApp` instance.\n * @returns A `RemoteConfig` instance.\n *\n * @public\n */\nexport function getRemoteConfig(app: FirebaseApp = getApp()): RemoteConfig {\n  app = getModularInstance(app);\n  const rcProvider = _getProvider(app, RC_COMPONENT_NAME);\n  return rcProvider.getImmediate();\n}\n\n/**\n * Makes the last fetched config available to the getters.\n * @param remoteConfig - The `RemoteConfig` instance.\n * @returns A promise which resolves to true if the current call activated the fetched configs.\n * If the fetched configs were already activated, the promise will resolve to false.\n *\n * @public\n */\nexport async function activate(remoteConfig: RemoteConfig): Promise<boolean> {\n  const rc = getModularInstance(remoteConfig) as RemoteConfigImpl;\n  const [lastSuccessfulFetchResponse, activeConfigEtag] = await Promise.all([\n    rc._storage.getLastSuccessfulFetchResponse(),\n    rc._storage.getActiveConfigEtag()\n  ]);\n  if (\n    !lastSuccessfulFetchResponse ||\n    !lastSuccessfulFetchResponse.config ||\n    !lastSuccessfulFetchResponse.eTag ||\n    lastSuccessfulFetchResponse.eTag === activeConfigEtag\n  ) {\n    // Either there is no successful fetched config, or is the same as current active\n    // config.\n    return false;\n  }\n  await Promise.all([\n    rc._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),\n    rc._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)\n  ]);\n  return true;\n}\n\n/**\n * Ensures the last activated config are available to the getters.\n * @param remoteConfig - The `RemoteConfig` instance.\n *\n * @returns A promise that resolves when the last activated config is available to the getters.\n * @public\n */\nexport function ensureInitialized(remoteConfig: RemoteConfig): Promise<void> {\n  const rc = getModularInstance(remoteConfig) as RemoteConfigImpl;\n  if (!rc._initializePromise) {\n    rc._initializePromise = rc._storageCache.loadFromStorage().then(() => {\n      rc._isInitializationComplete = true;\n    });\n  }\n  return rc._initializePromise;\n}\n\n/**\n * Fetches and caches configuration from the Remote Config service.\n * @param remoteConfig - The `RemoteConfig` instance.\n * @public\n */\nexport async function fetchConfig(remoteConfig: RemoteConfig): Promise<void> {\n  const rc = getModularInstance(remoteConfig) as RemoteConfigImpl;\n  // Aborts the request after the given timeout, causing the fetch call to\n  // reject with an AbortError.\n  //\n  // <p>Aborting after the request completes is a no-op, so we don't need a\n  // corresponding clearTimeout.\n  //\n  // Locating abort logic here because:\n  // * it uses a developer setting (timeout)\n  // * it applies to all retries (like curl's max-time arg)\n  // * it is consistent with the Fetch API's signal input\n  const abortSignal = new RemoteConfigAbortSignal();\n\n  setTimeout(async () => {\n    // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n    abortSignal.abort();\n  }, rc.settings.fetchTimeoutMillis);\n\n  // Catches *all* errors thrown by client so status can be set consistently.\n  try {\n    await rc._client.fetch({\n      cacheMaxAgeMillis: rc.settings.minimumFetchIntervalMillis,\n      signal: abortSignal\n    });\n\n    await rc._storageCache.setLastFetchStatus('success');\n  } catch (e) {\n    const lastFetchStatus = hasErrorCode(e, ErrorCode.FETCH_THROTTLE)\n      ? 'throttle'\n      : 'failure';\n    await rc._storageCache.setLastFetchStatus(lastFetchStatus);\n    throw e;\n  }\n}\n\n/**\n * Gets all config.\n *\n * @param remoteConfig - The `RemoteConfig` instance.\n * @returns All config.\n *\n * @public\n */\nexport function getAll(remoteConfig: RemoteConfig): Record<string, Value> {\n  const rc = getModularInstance(remoteConfig) as RemoteConfigImpl;\n  return getAllKeys(\n    rc._storageCache.getActiveConfig(),\n    rc.defaultConfig\n  ).reduce((allConfigs, key) => {\n    allConfigs[key] = getValue(remoteConfig, key);\n    return allConfigs;\n  }, {} as Record<string, Value>);\n}\n\n/**\n * Gets the value for the given key as a boolean.\n *\n * Convenience method for calling <code>remoteConfig.getValue(key).asBoolean()</code>.\n *\n * @param remoteConfig - The `RemoteConfig` instance.\n * @param key - The name of the parameter.\n *\n * @returns The value for the given key as a boolean.\n * @public\n */\nexport function getBoolean(remoteConfig: RemoteConfig, key: string): boolean {\n  return getValue(getModularInstance(remoteConfig), key).asBoolean();\n}\n\n/**\n * Gets the value for the given key as a number.\n *\n * Convenience method for calling <code>remoteConfig.getValue(key).asNumber()</code>.\n *\n * @param remoteConfig - The `RemoteConfig` instance.\n * @param key - The name of the parameter.\n *\n * @returns The value for the given key as a number.\n *\n * @public\n */\nexport function getNumber(remoteConfig: RemoteConfig, key: string): number {\n  return getValue(getModularInstance(remoteConfig), key).asNumber();\n}\n\n/**\n * Gets the value for the given key as a string.\n * Convenience method for calling <code>remoteConfig.getValue(key).asString()</code>.\n *\n * @param remoteConfig - The `RemoteConfig` instance.\n * @param key - The name of the parameter.\n *\n * @returns The value for the given key as a string.\n *\n * @public\n */\nexport function getString(remoteConfig: RemoteConfig, key: string): string {\n  return getValue(getModularInstance(remoteConfig), key).asString();\n}\n\n/**\n * Gets the {@link Value} for the given key.\n *\n * @param remoteConfig - The `RemoteConfig` instance.\n * @param key - The name of the parameter.\n *\n * @returns The value for the given key.\n *\n * @public\n */\nexport function getValue(remoteConfig: RemoteConfig, key: string): Value {\n  const rc = getModularInstance(remoteConfig) as RemoteConfigImpl;\n  if (!rc._isInitializationComplete) {\n    rc._logger.debug(\n      `A value was requested for key \"${key}\" before SDK initialization completed.` +\n        ' Await on ensureInitialized if the intent was to get a previously activated value.'\n    );\n  }\n  const activeConfig = rc._storageCache.getActiveConfig();\n  if (activeConfig && activeConfig[key] !== undefined) {\n    return new ValueImpl('remote', activeConfig[key]);\n  } else if (rc.defaultConfig && rc.defaultConfig[key] !== undefined) {\n    return new ValueImpl('default', String(rc.defaultConfig[key]));\n  }\n  rc._logger.debug(\n    `Returning static value for key \"${key}\".` +\n      ' Define a default or remote value if this is unintentional.'\n  );\n  return new ValueImpl('static');\n}\n\n/**\n * Defines the log level to use.\n *\n * @param remoteConfig - The `RemoteConfig` instance.\n * @param logLevel - The log level to set.\n *\n * @public\n */\nexport function setLogLevel(\n  remoteConfig: RemoteConfig,\n  logLevel: RemoteConfigLogLevel\n): void {\n  const rc = getModularInstance(remoteConfig) as RemoteConfigImpl;\n  switch (logLevel) {\n    case 'debug':\n      rc._logger.logLevel = FirebaseLogLevel.DEBUG;\n      break;\n    case 'silent':\n      rc._logger.logLevel = FirebaseLogLevel.SILENT;\n      break;\n    default:\n      rc._logger.logLevel = FirebaseLogLevel.ERROR;\n  }\n}\n\n/**\n * Dedupes and returns an array of all the keys of the received objects.\n */\nfunction getAllKeys(obj1: {} = {}, obj2: {} = {}): string[] {\n  return Object.keys({ ...obj1, ...obj2 });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StorageCache } from '../storage/storage_cache';\nimport {\n  FetchResponse,\n  RemoteConfigFetchClient,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { Storage } from '../storage/storage';\nimport { Logger } from '@firebase/logger';\n\n/**\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\n *\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\n * Cache API doesn't support matching entries by time.\n */\nexport class CachingClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly client: RemoteConfigFetchClient,\n    private readonly storage: Storage,\n    private readonly storageCache: StorageCache,\n    private readonly logger: Logger\n  ) {}\n\n  /**\n   * Returns true if the age of the cached fetched configs is less than or equal to\n   * {@link Settings#minimumFetchIntervalInSeconds}.\n   *\n   * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\n   * native Fetch API.\n   *\n   * <p>Visible for testing.\n   */\n  isCachedDataFresh(\n    cacheMaxAgeMillis: number,\n    lastSuccessfulFetchTimestampMillis: number | undefined\n  ): boolean {\n    // Cache can only be fresh if it's populated.\n    if (!lastSuccessfulFetchTimestampMillis) {\n      this.logger.debug('Config fetch cache check. Cache unpopulated.');\n      return false;\n    }\n\n    // Calculates age of cache entry.\n    const cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\n\n    const isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\n\n    this.logger.debug(\n      'Config fetch cache check.' +\n        ` Cache age millis: ${cacheAgeMillis}.` +\n        ` Cache max age millis (minimumFetchIntervalMillis setting): ${cacheMaxAgeMillis}.` +\n        ` Is cache hit: ${isCachedDataFresh}.`\n    );\n\n    return isCachedDataFresh;\n  }\n\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    // Reads from persisted storage to avoid cache miss if callers don't wait on initialization.\n    const [\n      lastSuccessfulFetchTimestampMillis,\n      lastSuccessfulFetchResponse\n    ] = await Promise.all([\n      this.storage.getLastSuccessfulFetchTimestampMillis(),\n      this.storage.getLastSuccessfulFetchResponse()\n    ]);\n\n    // Exits early on cache hit.\n    if (\n      lastSuccessfulFetchResponse &&\n      this.isCachedDataFresh(\n        request.cacheMaxAgeMillis,\n        lastSuccessfulFetchTimestampMillis\n      )\n    ) {\n      return lastSuccessfulFetchResponse;\n    }\n\n    // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\n    // that allows the caller to pass an ETag.\n    request.eTag =\n      lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\n\n    // Falls back to service on cache miss.\n    const response = await this.client.fetch(request);\n\n    // Fetch throws for non-success responses, so success is guaranteed here.\n\n    const storageOperations = [\n      // Uses write-through cache for consistency with synchronous public API.\n      this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())\n    ];\n\n    if (response.status === 200) {\n      // Caches response only if it has changed, ie non-304 responses.\n      storageOperations.push(\n        this.storage.setLastSuccessfulFetchResponse(response)\n      );\n    }\n\n    await Promise.all(storageOperations);\n\n    return response;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FetchResponse,\n  RemoteConfigFetchClient,\n  FirebaseRemoteConfigObject,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { ERROR_FACTORY, ErrorCode } from '../errors';\nimport { getUserLanguage } from '../language';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations-exp';\n\n/**\n * Defines request body parameters required to call the fetch API:\n * https://firebase.google.com/docs/reference/remote-config/rest\n *\n * <p>Not exported because this file encapsulates REST API specifics.\n *\n * <p>Not passing User Properties because Analytics' source of truth on Web is server-side.\n */\ninterface FetchRequestBody {\n  // Disables camelcase linting for request body params.\n  /* eslint-disable camelcase*/\n  sdk_version: string;\n  app_instance_id: string;\n  app_instance_id_token: string;\n  app_id: string;\n  language_code: string;\n  /* eslint-enable camelcase */\n}\n\n/**\n * Implements the Client abstraction for the Remote Config REST API.\n */\nexport class RestClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly firebaseInstallations: _FirebaseInstallationsInternal,\n    private readonly sdkVersion: string,\n    private readonly namespace: string,\n    private readonly projectId: string,\n    private readonly apiKey: string,\n    private readonly appId: string\n  ) {}\n\n  /**\n   * Fetches from the Remote Config REST API.\n   *\n   * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\n   * connect to the network.\n   * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\n   * fetch response.\n   * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\n   */\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    const [installationId, installationToken] = await Promise.all([\n      this.firebaseInstallations.getId(),\n      this.firebaseInstallations.getToken()\n    ]);\n\n    const urlBase =\n      window.FIREBASE_REMOTE_CONFIG_URL_BASE ||\n      'https://firebaseremoteconfig.googleapis.com';\n\n    const url = `${urlBase}/v1/projects/${this.projectId}/namespaces/${this.namespace}:fetch?key=${this.apiKey}`;\n\n    const headers = {\n      'Content-Type': 'application/json',\n      'Content-Encoding': 'gzip',\n      // Deviates from pure decorator by not passing max-age header since we don't currently have\n      // service behavior using that header.\n      'If-None-Match': request.eTag || '*'\n    };\n\n    const requestBody: FetchRequestBody = {\n      /* eslint-disable camelcase */\n      sdk_version: this.sdkVersion,\n      app_instance_id: installationId,\n      app_instance_id_token: installationToken,\n      app_id: this.appId,\n      language_code: getUserLanguage()\n      /* eslint-enable camelcase */\n    };\n\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(requestBody)\n    };\n\n    // This logic isn't REST-specific, but shimming abort logic isn't worth another decorator.\n    const fetchPromise = fetch(url, options);\n    const timeoutPromise = new Promise((_resolve, reject) => {\n      // Maps async event listener to Promise API.\n      request.signal.addEventListener(() => {\n        // Emulates https://heycam.github.io/webidl/#aborterror\n        const error = new Error('The operation was aborted.');\n        error.name = 'AbortError';\n        reject(error);\n      });\n    });\n\n    let response;\n    try {\n      await Promise.race([fetchPromise, timeoutPromise]);\n      response = await fetchPromise;\n    } catch (originalError) {\n      let errorCode = ErrorCode.FETCH_NETWORK;\n      if (originalError.name === 'AbortError') {\n        errorCode = ErrorCode.FETCH_TIMEOUT;\n      }\n      throw ERROR_FACTORY.create(errorCode, {\n        originalErrorMessage: originalError.message\n      });\n    }\n\n    let status = response.status;\n\n    // Normalizes nullable header to optional.\n    const responseEtag = response.headers.get('ETag') || undefined;\n\n    let config: FirebaseRemoteConfigObject | undefined;\n    let state: string | undefined;\n\n    // JSON parsing throws SyntaxError if the response body isn't a JSON string.\n    // Requesting application/json and checking for a 200 ensures there's JSON data.\n    if (response.status === 200) {\n      let responseBody;\n      try {\n        responseBody = await response.json();\n      } catch (originalError) {\n        throw ERROR_FACTORY.create(ErrorCode.FETCH_PARSE, {\n          originalErrorMessage: originalError.message\n        });\n      }\n      config = responseBody['entries'];\n      state = responseBody['state'];\n    }\n\n    // Normalizes based on legacy state.\n    if (state === 'INSTANCE_STATE_UNSPECIFIED') {\n      status = 500;\n    } else if (state === 'NO_CHANGE') {\n      status = 304;\n    } else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\n      // These cases can be fixed remotely, so normalize to safe value.\n      config = {};\n    }\n\n    // Normalize to exception-based control flow for non-success cases.\n    // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\n    // differentiating success states (200 from 304; the state body param is undefined in a\n    // standard 304).\n    if (status !== 304 && status !== 200) {\n      throw ERROR_FACTORY.create(ErrorCode.FETCH_STATUS, {\n        httpStatus: status\n      });\n    }\n\n    return { status, eTag: responseEtag, config };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Attempts to get the most accurate browser language setting.\n *\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\n *\n * <p>Defers default language specification to server logic for consistency.\n *\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\n */\nexport function getUserLanguage(\n  navigatorLanguage: NavigatorLanguage = navigator\n): string {\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language\n    // Polyfill otherwise.\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  RemoteConfigAbortSignal,\n  RemoteConfigFetchClient,\n  FetchResponse,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { ThrottleMetadata, Storage } from '../storage/storage';\nimport { ErrorCode, ERROR_FACTORY } from '../errors';\nimport { FirebaseError, calculateBackoffMillis } from '@firebase/util';\n\n/**\n * Supports waiting on a backoff by:\n *\n * <ul>\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\n *       request appear the same.</li>\n * </ul>\n *\n * <p>Visible for testing.\n */\nexport function setAbortableTimeout(\n  signal: RemoteConfigAbortSignal,\n  throttleEndTimeMillis: number\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    // Derives backoff from given end time, normalizing negative numbers to zero.\n    const backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n\n    const timeout = setTimeout(resolve, backoffMillis);\n\n    // Adds listener, rather than sets onabort, because signal is a shared object.\n    signal.addEventListener(() => {\n      clearTimeout(timeout);\n\n      // If the request completes before this timeout, the rejection has no effect.\n      reject(\n        ERROR_FACTORY.create(ErrorCode.FETCH_THROTTLE, {\n          throttleEndTimeMillis\n        })\n      );\n    });\n  });\n}\n\ntype RetriableError = FirebaseError & { customData: { httpStatus: string } };\n/**\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\n */\nfunction isRetriableError(e: Error): e is RetriableError {\n  if (!(e instanceof FirebaseError) || !e.customData) {\n    return false;\n  }\n\n  // Uses string index defined by ErrorData, which FirebaseError implements.\n  const httpStatus = Number(e.customData['httpStatus']);\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\n/**\n * Decorates a Client with retry logic.\n *\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\n * responses (because the SDK has no use for error responses).\n */\nexport class RetryingClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly client: RemoteConfigFetchClient,\n    private readonly storage: Storage\n  ) {}\n\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    const throttleMetadata = (await this.storage.getThrottleMetadata()) || {\n      backoffCount: 0,\n      throttleEndTimeMillis: Date.now()\n    };\n\n    return this.attemptFetch(request, throttleMetadata);\n  }\n\n  /**\n   * A recursive helper for attempting a fetch request repeatedly.\n   *\n   * @throws any non-retriable errors.\n   */\n  async attemptFetch(\n    request: FetchRequest,\n    { throttleEndTimeMillis, backoffCount }: ThrottleMetadata\n  ): Promise<FetchResponse> {\n    // Starts with a (potentially zero) timeout to support resumption from stored state.\n    // Ensures the throttle end time is honored if the last attempt timed out.\n    // Note the SDK will never make a request if the fetch timeout expires at this point.\n    await setAbortableTimeout(request.signal, throttleEndTimeMillis);\n\n    try {\n      const response = await this.client.fetch(request);\n\n      // Note the SDK only clears throttle state if response is success or non-retriable.\n      await this.storage.deleteThrottleMetadata();\n\n      return response;\n    } catch (e) {\n      if (!isRetriableError(e)) {\n        throw e;\n      }\n\n      // Increments backoff state.\n      const throttleMetadata = {\n        throttleEndTimeMillis:\n          Date.now() + calculateBackoffMillis(backoffCount),\n        backoffCount: backoffCount + 1\n      };\n\n      // Persists state.\n      await this.storage.setThrottleMetadata(throttleMetadata);\n\n      return this.attemptFetch(request, throttleMetadata);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-exp';\nimport {\n  RemoteConfig as RemoteConfigType,\n  FetchStatus,\n  Settings\n} from './public_types';\nimport { StorageCache } from './storage/storage_cache';\nimport { RemoteConfigFetchClient } from './client/remote_config_fetch_client';\nimport { Storage } from './storage/storage';\nimport { Logger } from '@firebase/logger';\n\nconst DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\nconst DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\n\n/**\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\n *\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\n */\nexport class RemoteConfig implements RemoteConfigType {\n  /**\n   * Tracks completion of initialization promise.\n   * @internal\n   */\n  _isInitializationComplete = false;\n\n  /**\n   * De-duplicates initialization calls.\n   * @internal\n   */\n  _initializePromise?: Promise<void>;\n\n  settings: Settings = {\n    fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\n    minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\n  };\n\n  defaultConfig: { [key: string]: string | number | boolean } = {};\n\n  get fetchTimeMillis(): number {\n    return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\n  }\n\n  get lastFetchStatus(): FetchStatus {\n    return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\n  }\n\n  constructor(\n    // Required by FirebaseServiceFactory interface.\n    readonly app: FirebaseApp,\n    // JS doesn't support private yet\n    // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\n    // underscore prefix.\n    /**\n     * @internal\n     */\n    readonly _client: RemoteConfigFetchClient,\n    /**\n     * @internal\n     */\n    readonly _storageCache: StorageCache,\n    /**\n     * @internal\n     */\n    readonly _storage: Storage,\n    /**\n     * @internal\n     */\n    readonly _logger: Logger\n  ) {}\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FetchStatus } from '@firebase/remote-config-types';\nimport {\n  FetchResponse,\n  FirebaseRemoteConfigObject\n} from '../client/remote_config_fetch_client';\nimport { ERROR_FACTORY, ErrorCode } from '../errors';\nimport { FirebaseError } from '@firebase/util';\n\n/**\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\n */\nfunction toFirebaseError(event: Event, errorCode: ErrorCode): FirebaseError {\n  const originalError = (event.target as IDBRequest).error || undefined;\n  return ERROR_FACTORY.create(errorCode, {\n    originalErrorMessage: originalError && originalError.message\n  });\n}\n\n/**\n * A general-purpose store keyed by app + namespace + {@link\n * ProjectNamespaceKeyFieldValue}.\n *\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\n *\n * <p>Visible for testing.\n */\nexport const APP_NAMESPACE_STORE = 'app_namespace_store';\n\nconst DB_NAME = 'firebase_remote_config';\nconst DB_VERSION = 1;\n\n/**\n * Encapsulates metadata concerning throttled fetch requests.\n */\nexport interface ThrottleMetadata {\n  // The number of times fetch has backed off. Used for resuming backoff after a timeout.\n  backoffCount: number;\n  // The Unix timestamp in milliseconds when callers can retry a request.\n  throttleEndTimeMillis: number;\n}\n\n/**\n * Provides type-safety for the \"key\" field used by {@link APP_NAMESPACE_STORE}.\n *\n * <p>This seems like a small price to avoid potentially subtle bugs caused by a typo.\n */\ntype ProjectNamespaceKeyFieldValue =\n  | 'active_config'\n  | 'active_config_etag'\n  | 'last_fetch_status'\n  | 'last_successful_fetch_timestamp_millis'\n  | 'last_successful_fetch_response'\n  | 'settings'\n  | 'throttle_metadata';\n\n// Visible for testing.\nexport function openDatabase(): Promise<IDBDatabase> {\n  return new Promise((resolve, reject) => {\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\n    request.onerror = event => {\n      reject(toFirebaseError(event, ErrorCode.STORAGE_OPEN));\n    };\n    request.onsuccess = event => {\n      resolve((event.target as IDBOpenDBRequest).result);\n    };\n    request.onupgradeneeded = event => {\n      const db = (event.target as IDBOpenDBRequest).result;\n\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (event.oldVersion) {\n        case 0:\n          db.createObjectStore(APP_NAMESPACE_STORE, {\n            keyPath: 'compositeKey'\n          });\n      }\n    };\n  });\n}\n\n/**\n * Abstracts data persistence.\n */\nexport class Storage {\n  /**\n   * @param appId enables storage segmentation by app (ID + name).\n   * @param appName enables storage segmentation by app (ID + name).\n   * @param namespace enables storage segmentation by namespace.\n   */\n  constructor(\n    private readonly appId: string,\n    private readonly appName: string,\n    private readonly namespace: string,\n    private readonly openDbPromise = openDatabase()\n  ) {}\n\n  getLastFetchStatus(): Promise<FetchStatus | undefined> {\n    return this.get<FetchStatus>('last_fetch_status');\n  }\n\n  setLastFetchStatus(status: FetchStatus): Promise<void> {\n    return this.set<FetchStatus>('last_fetch_status', status);\n  }\n\n  // This is comparable to a cache entry timestamp. If we need to expire other data, we could\n  // consider adding timestamp to all storage records and an optional max age arg to getters.\n  getLastSuccessfulFetchTimestampMillis(): Promise<number | undefined> {\n    return this.get<number>('last_successful_fetch_timestamp_millis');\n  }\n\n  setLastSuccessfulFetchTimestampMillis(timestamp: number): Promise<void> {\n    return this.set<number>(\n      'last_successful_fetch_timestamp_millis',\n      timestamp\n    );\n  }\n\n  getLastSuccessfulFetchResponse(): Promise<FetchResponse | undefined> {\n    return this.get<FetchResponse>('last_successful_fetch_response');\n  }\n\n  setLastSuccessfulFetchResponse(response: FetchResponse): Promise<void> {\n    return this.set<FetchResponse>('last_successful_fetch_response', response);\n  }\n\n  getActiveConfig(): Promise<FirebaseRemoteConfigObject | undefined> {\n    return this.get<FirebaseRemoteConfigObject>('active_config');\n  }\n\n  setActiveConfig(config: FirebaseRemoteConfigObject): Promise<void> {\n    return this.set<FirebaseRemoteConfigObject>('active_config', config);\n  }\n\n  getActiveConfigEtag(): Promise<string | undefined> {\n    return this.get<string>('active_config_etag');\n  }\n\n  setActiveConfigEtag(etag: string): Promise<void> {\n    return this.set<string>('active_config_etag', etag);\n  }\n\n  getThrottleMetadata(): Promise<ThrottleMetadata | undefined> {\n    return this.get<ThrottleMetadata>('throttle_metadata');\n  }\n\n  setThrottleMetadata(metadata: ThrottleMetadata): Promise<void> {\n    return this.set<ThrottleMetadata>('throttle_metadata', metadata);\n  }\n\n  deleteThrottleMetadata(): Promise<void> {\n    return this.delete('throttle_metadata');\n  }\n\n  async get<T>(key: ProjectNamespaceKeyFieldValue): Promise<T | undefined> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.get(compositeKey);\n        request.onerror = event => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_GET));\n        };\n        request.onsuccess = event => {\n          const result = (event.target as IDBRequest).result;\n          if (result) {\n            resolve(result.value);\n          } else {\n            resolve(undefined);\n          }\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_GET, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  async set<T>(key: ProjectNamespaceKeyFieldValue, value: T): Promise<void> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.put({\n          compositeKey,\n          value\n        });\n        request.onerror = (event: Event) => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_SET));\n        };\n        request.onsuccess = () => {\n          resolve();\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_SET, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  async delete(key: ProjectNamespaceKeyFieldValue): Promise<void> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.delete(compositeKey);\n        request.onerror = (event: Event) => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_DELETE));\n        };\n        request.onsuccess = () => {\n          resolve();\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_DELETE, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  // Facilitates composite key functionality (which is unsupported in IE).\n  createCompositeKey(key: ProjectNamespaceKeyFieldValue): string {\n    return [this.appId, this.appName, this.namespace, key].join();\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FetchStatus } from '@firebase/remote-config-types';\nimport { FirebaseRemoteConfigObject } from '../client/remote_config_fetch_client';\nimport { Storage } from './storage';\n\n/**\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\n */\nexport class StorageCache {\n  constructor(private readonly storage: Storage) {}\n\n  /**\n   * Memory caches.\n   */\n  private lastFetchStatus?: FetchStatus;\n  private lastSuccessfulFetchTimestampMillis?: number;\n  private activeConfig?: FirebaseRemoteConfigObject;\n\n  /**\n   * Memory-only getters\n   */\n  getLastFetchStatus(): FetchStatus | undefined {\n    return this.lastFetchStatus;\n  }\n\n  getLastSuccessfulFetchTimestampMillis(): number | undefined {\n    return this.lastSuccessfulFetchTimestampMillis;\n  }\n\n  getActiveConfig(): FirebaseRemoteConfigObject | undefined {\n    return this.activeConfig;\n  }\n\n  /**\n   * Read-ahead getter\n   */\n  async loadFromStorage(): Promise<void> {\n    const lastFetchStatusPromise = this.storage.getLastFetchStatus();\n    const lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\n    const activeConfigPromise = this.storage.getActiveConfig();\n\n    // Note:\n    // 1. we consistently check for undefined to avoid clobbering defined values\n    //   in memory\n    // 2. we defer awaiting to improve readability, as opposed to destructuring\n    //   a Promise.all result, for example\n\n    const lastFetchStatus = await lastFetchStatusPromise;\n    if (lastFetchStatus) {\n      this.lastFetchStatus = lastFetchStatus;\n    }\n\n    const lastSuccessfulFetchTimestampMillis = await lastSuccessfulFetchTimestampMillisPromise;\n    if (lastSuccessfulFetchTimestampMillis) {\n      this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\n    }\n\n    const activeConfig = await activeConfigPromise;\n    if (activeConfig) {\n      this.activeConfig = activeConfig;\n    }\n  }\n\n  /**\n   * Write-through setters\n   */\n  setLastFetchStatus(status: FetchStatus): Promise<void> {\n    this.lastFetchStatus = status;\n    return this.storage.setLastFetchStatus(status);\n  }\n\n  setLastSuccessfulFetchTimestampMillis(\n    timestampMillis: number\n  ): Promise<void> {\n    this.lastSuccessfulFetchTimestampMillis = timestampMillis;\n    return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\n  }\n\n  setActiveConfig(activeConfig: FirebaseRemoteConfigObject): Promise<void> {\n    this.activeConfig = activeConfig;\n    return this.storage.setActiveConfig(activeConfig);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app-exp';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\nimport { Logger, LogLevel as FirebaseLogLevel } from '@firebase/logger';\nimport { RemoteConfig } from './public_types';\nimport { name as packageName, version } from '../package.json';\nimport { ensureInitialized } from './api';\nimport { CachingClient } from './client/caching_client';\nimport { RestClient } from './client/rest_client';\nimport { RetryingClient } from './client/retrying_client';\nimport { RC_COMPONENT_NAME } from './constants';\nimport { ErrorCode, ERROR_FACTORY } from './errors';\nimport { RemoteConfig as RemoteConfigImpl } from './remote_config';\nimport { Storage } from './storage/storage';\nimport { StorageCache } from './storage/storage_cache';\n// This needs to be in the same file that calls `getProvider()` on the component\n// or it will get tree-shaken out.\nimport '@firebase/installations-exp';\n\nexport function registerRemoteConfig(): void {\n  _registerComponent(\n    new Component(\n      RC_COMPONENT_NAME,\n      remoteConfigFactory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n\n  registerVersion(packageName, version);\n\n  function remoteConfigFactory(\n    container: ComponentContainer,\n    { instanceIdentifier: namespace }: InstanceFactoryOptions\n  ): RemoteConfig {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    const app = container.getProvider('app-exp').getImmediate();\n    // The following call will always succeed because rc has `import '@firebase/installations'`\n    const installations = container\n      .getProvider('installations-exp-internal')\n      .getImmediate();\n\n    // Guards against the SDK being used in non-browser environments.\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_WINDOW);\n    }\n\n    // Normalizes optional inputs.\n    const { projectId, apiKey, appId } = app.options;\n    if (!projectId) {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_PROJECT_ID);\n    }\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_API_KEY);\n    }\n    if (!appId) {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_APP_ID);\n    }\n    namespace = namespace || 'firebase';\n\n    const storage = new Storage(appId, app.name, namespace);\n    const storageCache = new StorageCache(storage);\n\n    const logger = new Logger(packageName);\n\n    // Sets ERROR as the default log level.\n    // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\n    logger.logLevel = FirebaseLogLevel.ERROR;\n\n    const restClient = new RestClient(\n      installations,\n      // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\n      SDK_VERSION,\n      namespace,\n      projectId,\n      apiKey,\n      appId\n    );\n    const retryingClient = new RetryingClient(restClient, storage);\n    const cachingClient = new CachingClient(\n      retryingClient,\n      storage,\n      storageCache,\n      logger\n    );\n\n    const remoteConfigInstance = new RemoteConfigImpl(\n      app,\n      cachingClient,\n      storageCache,\n      storage,\n      logger\n    );\n\n    // Starts warming cache.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ensureInitialized(remoteConfigInstance);\n\n    return remoteConfigInstance;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const RC_COMPONENT_NAME = 'remote-config-exp';\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-compat';\nimport {\n  Value as ValueCompat,\n  FetchStatus as FetchSTatusCompat,\n  Settings as SettingsCompat,\n  LogLevel as RemoteConfigLogLevel,\n  RemoteConfig as RemoteConfigCompat\n} from '@firebase/remote-config-types';\nimport {\n  RemoteConfig,\n  setLogLevel,\n  activate,\n  ensureInitialized,\n  fetchAndActivate,\n  fetchConfig,\n  getAll,\n  getBoolean,\n  getNumber,\n  getString,\n  getValue\n} from '@firebase/remote-config-exp';\n\nexport class RemoteConfigCompatImpl\n  implements RemoteConfigCompat, _FirebaseService {\n  constructor(public app: FirebaseApp, readonly _delegate: RemoteConfig) {}\n\n  get defaultConfig(): { [key: string]: string | number | boolean } {\n    return this._delegate.defaultConfig;\n  }\n\n  set defaultConfig(value: { [key: string]: string | number | boolean }) {\n    this._delegate.defaultConfig = value;\n  }\n\n  get fetchTimeMillis(): number {\n    return this._delegate.fetchTimeMillis;\n  }\n\n  get lastFetchStatus(): FetchSTatusCompat {\n    return this._delegate.lastFetchStatus;\n  }\n\n  get settings(): SettingsCompat {\n    return this._delegate.settings;\n  }\n\n  set settings(value: SettingsCompat) {\n    this._delegate.settings = value;\n  }\n\n  activate(): Promise<boolean> {\n    return activate(this._delegate);\n  }\n\n  ensureInitialized(): Promise<void> {\n    return ensureInitialized(this._delegate);\n  }\n\n  /**\n   * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\n   * {@link Settings.fetchTimeoutInSeconds} or\n   * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\n   */\n  fetch(): Promise<void> {\n    return fetchConfig(this._delegate);\n  }\n\n  fetchAndActivate(): Promise<boolean> {\n    return fetchAndActivate(this._delegate);\n  }\n\n  getAll(): { [key: string]: ValueCompat } {\n    return getAll(this._delegate);\n  }\n\n  getBoolean(key: string): boolean {\n    return getBoolean(this._delegate, key);\n  }\n\n  getNumber(key: string): number {\n    return getNumber(this._delegate, key);\n  }\n\n  getString(key: string): string {\n    return getString(this._delegate, key);\n  }\n\n  getValue(key: string): ValueCompat {\n    return getValue(this._delegate, key);\n  }\n\n  // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\n  // to differentiate 2p and 3p use-cases.\n  setLogLevel(logLevel: RemoteConfigLogLevel): void {\n    setLogLevel(this._delegate, logLevel);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RemoteConfig } from './public_types';\nimport { activate, fetchConfig } from './api';\nimport { getModularInstance } from '@firebase/util';\n\n// This API is put in a separate file, so we can stub fetchConfig and activate in tests.\n// It's not possible to stub standalone functions from the same module.\n/**\n *\n * Performs fetch and activate operations, as a convenience.\n *\n * @param remoteConfig - The remote config instance.\n *\n * @returns A promise which resolves to true if the current call activated the fetched configs.\n * If the fetched configs were already activated, the promise will resolve to false.\n *\n * @public\n */\nexport async function fetchAndActivate(\n  remoteConfig: RemoteConfig\n): Promise<boolean> {\n  remoteConfig = getModularInstance(remoteConfig);\n  await fetchConfig(remoteConfig);\n  return activate(remoteConfig);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactoryOptions\n} from '@firebase/component';\nimport { RemoteConfigCompatImpl } from './remoteConfig';\nimport { name as packageName, version } from '../package.json';\nimport { RemoteConfig as RemoteConfigCompat } from '@firebase/remote-config-types';\n\n// TODO: move it to remote-config-types package\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'remoteConfig-compat': RemoteConfigCompat;\n  }\n}\n\nfunction registerRemoteConfigCompat(\n  firebaseInstance: _FirebaseNamespace\n): void {\n  firebaseInstance.INTERNAL.registerComponent(\n    new Component(\n      'remoteConfig-compat',\n      remoteConfigFactory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n\n  firebaseInstance.registerVersion(packageName, version);\n}\n\nfunction remoteConfigFactory(\n  container: ComponentContainer,\n  { instanceIdentifier: namespace }: InstanceFactoryOptions\n): RemoteConfigCompatImpl {\n  const app = container.getProvider('app-compat').getImmediate();\n  // The following call will always succeed because rc `import {...} from '@firebase/remote-config-exp'`\n  const remoteConfig = container.getProvider('remote-config-exp').getImmediate({\n    identifier: namespace\n  });\n\n  return new RemoteConfigCompatImpl(app, remoteConfig);\n}\n\nregisterRemoteConfigCompat(firebase as _FirebaseNamespace);\n\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    remoteConfig?: {\n      (app?: FirebaseApp): RemoteConfigCompat;\n    };\n  }\n  interface FirebaseApp {\n    remoteConfig(): RemoteConfigCompat;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconsole.warn(`\nIt looks like you're using the development build of the Firebase JS SDK.\nWhen deploying Firebase apps to production, it is advisable to only import\nthe individual SDK components you intend to use.\n\nFor the CDN builds, these are available in the following manner\n(replace <PACKAGE> with the name of a component - i.e. auth, database, etc):\n\nhttps://www.gstatic.com/firebasejs/5.0.0/firebase-<PACKAGE>.js\n`);\n\nimport '@firebase/polyfill';\nimport firebase from './app';\nimport { name, version } from '../package.json';\n\nimport './auth';\nimport './database';\nimport './firestore';\nimport './functions';\nimport './messaging';\nimport './storage';\nimport './performance';\nimport './analytics';\nimport './remote-config';\n\nfirebase.registerVersion(name, version, 'compat-cdn');\n\nexport default firebase;\n"],"names":["self","support","viewClasses","isDataView","isArrayBufferView","methods","redirectStatuses","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Symbol","Headers","headers","this","map","forEach","append","Array","isArray","header","Object","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","toString","_bodyArrayBuffer","ArrayBuffer","Error","get","type","rejected","arrayBuffer","then","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","Request","input","options","method","url","credentials","mode","upcased","toUpperCase","indexOf","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","fetch","e","obj","DataView","isView","call","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","clone","response","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","exec","bitmap","enumerable","configurable","writable","it","IndexedObject","requireObjectCoercible","PREFERRED_STRING","isObject","fn","val","valueOf","EXISTS","document","createElement","createNonEnumerableProperty","global","check","Math","globalThis","window","Function","fails","defineProperty","nativePropertyIsEnumerable","propertyIsEnumerable","getOwnPropertyDescriptor","1","V","descriptor","classof","DESCRIPTORS","a","nativeGetOwnPropertyDescriptor","O","P","toIndexedObject","toPrimitive","IE8_DOM_DEFINE","createPropertyDescriptor","propertyIsEnumerableModule","f","nativeDefineProperty","Attributes","anObject","object","definePropertyModule","SHARED","setGlobal","functionToString","store","inspectSource","id","postfix","wmget","wmhas","wmset","STATE","WeakMap","module","version","copyright","random","shared","uid","NATIVE_WEAK_MAP","state","metadata","facade","sharedKey","hiddenKeys","objectHas","aFunction","variable","namespace","arguments","path","argument","isNaN","floor","ceil","min","toInteger","names","target","source","ownKeys","getOwnPropertyDescriptorModule","sourceProperty","TARGET","GLOBAL","STATIC","stat","targetProperty","noTargetGet","isForced","forced","copyConstructorProperties","sham","redefine","EmptyConstructor","scriptTag","content","LT","SCRIPT","activeXDocument","enforce","getterFor","TYPE","getInternalState","InternalStateModule","enforceInternalState","TEMPLATE","unsafe","simple","max","createMethod","IS_INCLUDES","$this","el","fromIndex","toLength","index","integer","toAbsoluteIndex","includes","enumBugKeys","concat","internalObjectKeys","getOwnPropertySymbols","getBuiltIn","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","replacement","feature","detection","data","normalize","POLYFILL","NATIVE","string","require$$0","F","constructor","getPrototypeOf","IE_PROTO","ObjectPrototype","CORRECT_PROTOTYPE_GETTER","toObject","setPrototypeOf","setter","CORRECT_SETTER","proto","aPossiblePrototype","__proto__","defineProperties","Properties","objectKeys","PROTOTYPE","NullProtoObject","domain","ActiveXObject","iframe","write","close","temp","parentWindow","NullProtoObjectViaActiveX","documentCreateElement","style","display","html","appendChild","src","iframeDocument","contentWindow","WellKnownSymbolsStore","NATIVE_SYMBOL","createWellKnownSymbol","Iterators","ArrayPrototype","ITERATOR","that","b","c","apply","create","USE_SYMBOL_AS_UID","withoutSetter","wellKnownSymbol","returnMethod","Result","stopped","iterable","unboundFunction","stop","condition","iteratorClose","callFn","AS_ENTRIES","INTERRUPTED","step","IS_ITERATOR","bind","iterFn","getIteratorMethod","isArrayIteratorMethod","TO_STRING_TAG","CORRECT_ARGUMENTS","classofRaw","TO_STRING_TAG_SUPPORT","tag","tryGet","callee","$AggregateError","errors","message","errorsArray","iterate","AggregateError","TAG","CONSTRUCTOR_NAME","Constructor","SPECIES","SAFE_CLOSING","called","iteratorWithReturn","return","from","SKIP_CLOSING","ITERATION_SUPPORT","defaultConstructor","S","C","run","queue","runner","defer","userAgent","process","setImmediate","clear","clearImmediate","MessageChannel","Dispatch","counter","ONREADYSTATECHANGE","listener","event","post","postMessage","protocol","host","args","IS_NODE","nextTick","now","IS_IOS","port","channel","port2","port1","onmessage","addEventListener","importScripts","removeChild","setTimeout","flush","head","last","notify","toggle","node","macrotask","require$$1","MutationObserver","WebKitMutationObserver","queueMicrotaskDescriptor","queueMicrotask","parent","exit","enter","createTextNode","observe","characterData","PromiseCapability","$$resolve","$$reject","x","promiseCapability","newPromiseCapability","task","versions","v8","match","isThenable","isReject","chain","notified","reactions","microtask","exited","reaction","handler","fail","rejection","onHandleUnhandled","onUnhandled","dispatchEvent","reason","DISPATCH_EVENT","createEvent","initEvent","NATIVE_REJECTION_EVENT","UNHANDLED_REJECTION","console","hostReportErrors","unwrap","internalReject","Internal","OwnPromiseCapability","PromiseWrapper","nativeThen","PROMISE","setInternalState","getInternalPromiseState","PromiseConstructor","NativePromise","$fetch","newPromiseCapabilityModule","newGenericPromiseCapability","PromiseRejectionEvent","FORCED","V8_VERSION","FakePromise","INCORRECT_ITERATION","checkCorrectnessOfIteration","all","IS_UNHANDLED","isUnhandled","perform","emit","internalResolve","wrapper","executor","anInstance","redefineAll","onFulfilled","onRejected","speciesConstructor","catch","$","promiseResolve","wrap","setToStringTag","setSpecies","r","capability","$promiseResolve","remaining","alreadyCalled","race","allSettled","PROMISE_ANY_ERROR","any","alreadyResolved","alreadyRejected","NON_GENERIC","real","finally","onFinally","isFunction","CONVERT_TO_STRING","pos","second","position","size","first","charCodeAt","charAt","codeAt","BUGGY_SAFARI_ITERATORS","arrayIterator","PrototypeOfArrayIteratorPrototype","IteratorPrototype","returnThis","Iterable","NAME","IteratorConstructor","DEFAULT","IS_SET","getIterationMethod","KIND","defaultIterator","IterablePrototype","VALUES","ENTRIES","createIteratorConstructor","KEY","INCORRECT_VALUES_NAME","nativeIterator","anyNativeIterator","CurrentIteratorPrototype","IteratorsCore","STRING_ITERATOR","defineIterator","iterated","point","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","UNSCOPABLES","ARRAY_ITERATOR","kind","Arguments","addToUnscopables","COLLECTION_NAME","ArrayValues","ArrayIteratorMethods","DOMIterables","Collection","CollectionPrototype","METHOD_NAME","try","callbackfn","originalArray","thrower","arg","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","IS_FILTER_OUT","NO_HOLES","specificCreate","boundFunction","arraySpeciesCreate","filter","some","every","find","findIndex","filterOut","cache","ACCESSORS","argument0","argument1","$find","FIND","SKIPS_HOLES","USES_TO_LENGTH","arrayMethodUsesToLength","CONSTRUCTOR","METHOD","$findIndex","entryUnbind","FIND_INDEX","propertyKey","arrayLike","argumentsLength","mapfn","mapping","iteratorMethod","createProperty","callWithSafeIterationClosing","$some","STRICT_METHOD","isTypedArray","klass","TypedArrayConstructorsList","BigIntArrayConstructorsList","Int8Array","Int8ArrayPrototype","Uint8ClampedArray","Uint8ClampedArrayPrototype","TypedArray","TypedArrayPrototype","TYPED_ARRAY_TAG","NATIVE_ARRAY_BUFFER_VIEWS","NATIVE_ARRAY_BUFFER","opera","TYPED_ARRAY_TAG_REQIRED","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","property","ARRAY","TypedArrayConstructor","arrayValues","ArrayIterators","arrayKeys","arrayEntries","aTypedArray","ArrayBufferViewCore","exportTypedArrayMethod","nativeTypedArrayIterator","CORRECT_ITER_NAME","typedArrayValues","nativeAssign","assign","A","B","symbol","alphabet","chr","T","j","TO_ENTRIES","$entries","$values","isRegExp","MATCH","regexp","error1","error2","correctIsRegExpLogic","searchString","notARegExp","nativeStartsWith","startsWith","CORRECT_IS_REGEXP_LOGIC","MDN_POLYFILL_BUG","search","repeat","count","str","n","Infinity","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","SPECIES_SUPPORT","foo","Boolean","k","len","E","spreadable","isConcatSpreadable","wrappedWellKnownSymbolModule","description","AllSymbols","nativeObjectCreate","$Symbol","SYMBOL","$defineProperties","properties","$getOwnPropertySymbols","$forEach","$propertyIsEnumerable","$defineProperty","nativeGetOwnPropertyNames","windowNames","getWindowNames","HIDDEN","TO_PRIMITIVE","$stringify","getOwnPropertyNamesExternal","ObjectPrototypeSymbols","StringToSymbolRegistry","SymbolToStringRegistry","QObject","USE_SETTER","findChild","setSymbolDescriptor","ObjectPrototypeDescriptor","isSymbol","$getOwnPropertyDescriptor","$getOwnPropertyNames","IS_OBJECT_PROTOTYPE","defineWellKnownSymbol","for","keyFor","sym","useSetter","useSimple","FORCED_JSON_STRINGIFY","stringify","replacer","space","$replacer","EmptyStringDescriptionStore","SymbolWrapper","symbolToString","native","NativeSymbol","symbolPrototype","desc","Reflect","WrappedWellKnownSymbolModule","isExtensible","preventExtensions","setMetadata","METADATA","objectID","weakData","meta","REQUIRED","fastKey","getWeakData","onFreeze","FREEZING","common","fixMethod","nativeMethod","NativePrototype","IS_WEAK","instance","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","ADDER","NativeConstructor","exported","getConstructor","InternalMetadataModule","$instance","dummy","NewTarget","NewTargetPrototype","Wrapper","setStrong","internalStateGetterFor","define","entry","getEntry","previous","removed","delete","prev","add","ITERATOR_NAME","getInternalCollectionState","getInternalIteratorState","collection","collectionStrong","Map","mapFn","nextItem","of","wasDeleted","remover","allDeleted","IS_PURE","deleteAll","collectionDeleteAll","emplace","update","insert","getMapIterator","newMap","findKey","groupBy","keyDerivative","element","derivedKey","searchElement","y","keyBy","keyOf","mapKeys","mapValues","merge","reduce","noInitial","accumulator","isPresentInMap","updateFn","insertFn","upsert","$upsert","updateOrInsert","Set","addAll","adder","getSetIterator","difference","newSet","intersection","hasCheck","isDisjointFrom","isSubsetOf","getIterator","otherSet","isSupersetOf","separator","sep","symmetricDifference","union","isInteger","isFinite","Number","number","extendStatics","d","p","__assign","t","s","__rest","__awaiter","_arguments","generator","fulfilled","__generator","_","label","sent","trys","ops","g","verb","throw","v","op","pop","__values","o","m","__read","ar","__spreadArray","to","il","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","out","stringToByteArray","decodeString","u","c2","c3","c1","byteArrayToString","decodeStringToByteArray","charToByteMap","byte4","base64Decode","deepExtend","Date","getTime","prop","Deferred","_this","getUA","navigator","isNode","isBrowserExtension","runtime","chrome","browser","isReactNative","isIE","ua","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist_1","DB_CHECK_NAME_1","request_1","onsuccess","deleteDatabase","onupgradeneeded","areCookiesEnabled","cookieEnabled","ERROR_NAME","__","__extends","code","customData","_super","FirebaseError","captureStackTrace","ErrorFactory","_i","fullCode","service","template","PATTERN","fullMessage","serviceName","querystring","querystringParams","params","_a","_b","arrayVal","encodeURIComponent","querystringDecode","token","extractQuerystring","queryStart","fragmentStart","substring","createSubscribe","onNoObservers","proxy","ObserverProxy","subscribe","forEachObserver","observer","complete","nextOrObserver","methods_1","implementsAnyMethods","noop","unsub","unsubscribeOne","observers","finalized","finalError","observerCount","sendOne","err","DEFAULT_INTERVAL_MILLIS","DEFAULT_BACKOFF_FACTOR","MAX_VALUE_MILLIS","RANDOM_FACTOR","calculateBackoffMillis","backoffCount","intervalMillis","backoffFactor","currBaseValue","pow","randomWait","round","getModularInstance","_delegate","Component","instantiationMode","multipleInstances","props","serviceProps","onInstanceCreated","instanceFactory","DEFAULT_ENTRY_NAME","Provider","identifier","normalizedIdentifier","normalizeInstanceIdentifier","instancesDeferred","deferred","isInitialized","shouldAutoInitialize","getOrInitializeService","instanceIdentifier","optional","component","_d","instanceDeferred","instances","services","INTERNAL","_delete","opts","_c","isComponentSet","_f","instanceIdentifier_1","invokeOnInitCallbacks","onInitCallbacks","container","ComponentContainer","provider","getProvider","setComponent","providers","addComponent","LogLevel","defaultLogHandler","logType","logLevel","toISOString","ConsoleMethod","levelStringToEnum","debug","DEBUG","verbose","VERBOSE","info","INFO","warn","WARN","ERROR","silent","SILENT","defaultLogLevel","Logger","_logLevel","_logHandler","_userLogHandler","setUserLogHandler","logCallback","instances_1","customLogLevel","level","userLogHandler","ignored","PlatformLoggerServiceImpl","getProviders","getComponent","isVersionServiceProvider","getImmediate","library","logString","logger","variant","PLATFORM_LOG_STRING","@firebase/app-exp","@firebase/app-compat","@firebase/analytics-exp","@firebase/analytics-compat","@firebase/auth-exp","@firebase/auth-compat","@firebase/database","@firebase/database-compat","@firebase/functions-exp","@firebase/functions-compat","@firebase/installations-exp","@firebase/installations-compat","@firebase/messaging-exp","@firebase/messaging-compat","@firebase/performance-exp","@firebase/performance-compat","@firebase/remote-config-exp","@firebase/remote-config-compat","@firebase/storage","@firebase/storage-compat","@firebase/firestore","@firebase/firestore-compat","fire-js","firebase-exp","_apps","_components","_addComponent","app","_addOrOverwriteComponent","addOrOverwriteComponent","_registerComponent","componentName","_getProvider","ERROR_FACTORY","no-app","bad-app-name","duplicate-app","app-deleted","invalid-app-argument","invalid-log-argument","FirebaseAppImpl","config","_options","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","_isDeleted","isDeleted","appName","SDK_VERSION","initializeApp","rawConfig","newApp","async","deleteApp","registerVersion","libraryKeyOrName","libraryMismatch","versionMismatch","warning","onLog","setLogLevel","inst","clearInstance","firebase","removeApp","_DEFAULT_ENTRY_NAME","initialize","createFirebaseNamespaceCore","firebaseAppImpl","apps","__esModule","modularAPIs.initializeApp","appCompat","modularAPIs.registerVersion","modularAPIs.setLogLevel","modularAPIs.onLog","modularAPIs.SDK_VERSION","registerComponent","componentNameWithoutCompat","serviceNamespace","modularAPIs._registerComponent","appArg","serviceFxn","_getService","useAsService","useService","modularAPIs","modularAPIs._DEFAULT_ENTRY_NAME","createFirebaseNamespace","extendNamespace","sdkVersion","firebaseNamespace","debugErrorMap","admin-restricted-operation","argument-error","app-not-authorized","app-not-installed","captcha-check-failed","code-expired","cordova-not-ready","cors-unsupported","credential-already-in-use","custom-token-mismatch","requires-recent-login","dependent-sdk-initialized-before-auth","dynamic-link-not-activated","email-change-needs-verification","email-already-in-use","emulator-config-failed","expired-action-code","cancelled-popup-request","internal-error","invalid-app-credential","invalid-app-id","invalid-user-token","invalid-auth-event","invalid-verification-code","invalid-continue-uri","invalid-cordova-configuration","invalid-custom-token","invalid-dynamic-link-domain","invalid-email","invalid-emulator-scheme","invalid-api-key","invalid-cert-hash","invalid-credential","invalid-message-payload","invalid-multi-factor-session","invalid-oauth-provider","invalid-oauth-client-id","unauthorized-domain","invalid-action-code","wrong-password","invalid-persistence-type","invalid-phone-number","invalid-provider-id","invalid-recipient-email","invalid-sender","invalid-verification-id","invalid-tenant-id","missing-android-pkg-name","auth-domain-config-required","missing-app-credential","missing-verification-code","missing-continue-uri","missing-iframe-start","missing-ios-bundle-id","missing-or-invalid-nonce","missing-multi-factor-info","missing-multi-factor-session","missing-phone-number","missing-verification-id","multi-factor-info-not-found","multi-factor-auth-required","account-exists-with-different-credential","network-request-failed","no-auth-event","no-such-provider","null-user","operation-not-allowed","operation-not-supported-in-this-environment","popup-blocked","popup-closed-by-user","provider-already-linked","quota-exceeded","redirect-cancelled-by-user","redirect-operation-pending","rejected-credential","second-factor-already-in-use","maximum-second-factor-count-exceeded","tenant-id-mismatch","timeout","user-token-expired","too-many-requests","unauthorized-continue-uri","unsupported-first-factor","unsupported-persistence-type","unsupported-tenant-operation","unverified-email","user-cancelled","user-not-found","user-disabled","user-mismatch","user-signed-out","weak-password","web-storage-unsupported","already-initialized","_DEFAULT_AUTH_ERROR_FACTORY","logClient","_logError","msg","_fail","authOrCode","rest","createErrorInternal","_createError","fullParams","_errorFactory","_assert","assertion","debugFail","failure","debugAssert","instanceCache","_getInstance","cls","_getCurrentUrl","href","_isHttpOrHttps","_getCurrentScheme","Delay","shortDelay","longDelay","isMobile","onLine","_emulatorUrl","emulator","FetchProvider","fetchImpl","headersImpl","responseImpl","SERVER_ERROR_MAP","CREDENTIAL_MISMATCH","MISSING_CUSTOM_TOKEN","INVALID_IDENTIFIER","MISSING_CONTINUE_URI","INVALID_PASSWORD","MISSING_PASSWORD","EMAIL_EXISTS","PASSWORD_LOGIN_DISABLED","INVALID_IDP_RESPONSE","INVALID_PENDING_TOKEN","FEDERATED_USER_ID_ALREADY_LINKED","MISSING_REQ_TYPE","EMAIL_NOT_FOUND","RESET_PASSWORD_EXCEED_LIMIT","EXPIRED_OOB_CODE","INVALID_OOB_CODE","MISSING_OOB_CODE","CREDENTIAL_TOO_OLD_LOGIN_AGAIN","INVALID_ID_TOKEN","TOKEN_EXPIRED","USER_NOT_FOUND","TOO_MANY_ATTEMPTS_TRY_LATER","INVALID_CODE","INVALID_SESSION_INFO","INVALID_TEMPORARY_PROOF","MISSING_SESSION_INFO","SESSION_EXPIRED","MISSING_ANDROID_PACKAGE_NAME","UNAUTHORIZED_DOMAIN","INVALID_OAUTH_CLIENT_ID","ADMIN_ONLY_OPERATION","INVALID_MFA_PENDING_CREDENTIAL","MFA_ENROLLMENT_NOT_FOUND","MISSING_MFA_ENROLLMENT_ID","MISSING_MFA_PENDING_CREDENTIAL","SECOND_FACTOR_EXISTS","SECOND_FACTOR_LIMIT_EXCEEDED","DEFAULT_API_TIMEOUT_MS","_addTidIfNecessary","auth","tenantId","_performApiRequest","customErrorMap","_performFetchWithErrorHandling","query","apiKey","_getSdkClientVersion","languageCode","_getFinalTarget","apiHost","referrerPolicy","fetchFn","_canInitEmulator","errorMap","networkTimeout","NetworkTimeout","clearNetworkTimeout","_makeTaggedError","errorMessage","serverErrorCode","_performSignInRequest","serverResponse","base","apiScheme","timer","clearTimeout","errorParams","email","phoneNumber","_tokenResponse","utcTimestampToDateString","utcTimestamp","date","toUTCString","secondsStringToMilliseconds","seconds","_parseToken","algorithm","payload","signature","decoded","_logoutIfInvalidated","user","bypassAuthState","isUserInvalidated","currentUser","signOut","ProactiveRefresh","isRunning","schedule","timerId","wasError","interval","errorBackoff","stsTokenManager","expirationTime","getInterval","iteration","getIdToken","UserMetadata","createdAt","lastLoginAt","_initializeTime","lastSignInTime","creationTime","_reloadWithoutSaving","idToken","getAccountInfo","users","coreAccount","_notifyReloadListener","newProviderData","providerUserInfo","providerId","rawId","displayName","photoURL","photoUrl","providerData","original","newData","deduped","mergeProviderData","oldIsAnonymous","isAnonymous","newIsAnonymous","passwordHash","updates","localId","emailVerified","StsTokenManager","refreshToken","expiresIn","parsedToken","exp","iat","updateTokensAndExpiration","forceRefresh","accessToken","isExpired","refresh","oldToken","grant_type","refresh_token","tokenApiHost","X-Client-Version","Content-Type","access_token","expires_in","expiresInSec","manager","toJSON","assertStringOrUndefined","UserImpl","opt","getToken","_persistUserIfCurrent","_notifyListenersIfCurrent","userInternal","claims","auth_time","signInProvider","authTime","issuedAtTime","signInSecondFactor","getIdTokenResult","reload","userInfo","_copy","_assign","_clone","reloadListener","reloadUserInfo","proactiveRefresh","_start","_stop","tokensRefreshed","updateFromServerResponse","deleteAccount","clearRefreshToken","_redirectEventId","plainObjectTokenManager","fromJSON","idTokenResponse","InMemoryPersistence","storage","_key","_listener","inMemoryPersistence","_persistenceKeyName","PersistenceUserManager","persistence","userKey","fullUserKey","fullPersistenceKey","boundEventHandler","_onStorageEvent","_addListener","_set","_get","_fromJSON","_remove","newPersistence","getCurrentUser","removeCurrentUser","setCurrentUser","_removeListener","persistenceHierarchy","chosenPersistence","_isAvailable","userToMigrate","_getBrowserName","_isIEMobile","_isFirefox","_isBlackBerry","_isWebOS","_isSafari","_isChromeIOS","_isAndroid","re","matches","_isIOS","_isMobileBrowser","_getClientVersion","clientPlatform","frameworks","reportedPlatform","reportedFrameworks","AuthImpl","Subscription","appVerificationDisabledForTesting","clientVersion","sdkClientVersion","popupRedirectResolver","_popupRedirectResolver","_initializationPromise","_deleted","persistenceManager","_shouldInitProactively","_initialize","initializeCurrentUser","_isInitialized","redirectInitializerError","assertedPersistence","_currentUser","_updateCurrentUser","redirectUserEventId","storedUserEventId","storedUser","authDomain","getOrInitRedirectPersistenceManager","redirectUser","tryRedirectSignIn","directlySetCurrentUser","reloadAndSetCurrentUserOrClear","redirectResolver","_completeRedirectFn","_setRedirectUser","navigatorLanguage","languages","language","_getUserLanguage","userExtern","notifyAuthListeners","redirectPersistenceManager","setPersistence","completed","registerStateListener","authStateSubscription","idTokenSubscription","redirectManager","resolver","_redirectPersistence","isProactiveRefreshEnabled","_startProactiveRefresh","_stopProactiveRefresh","currentUid","lastNotifiedUid","subscription","cb","addObserver","action","operations","framework","sort","_getFrameworks","_castAuth","useAuthEmulator","authInternal","disableWarnings","extractProtocol","authority","substr","hostAndPort","bracketedIPv6","parsePort","extractHostAndPort","portStr","settings","emulatorConfig","freeze","disableBanner","attachBanner","sty","innerText","width","backgroundColor","border","color","bottom","left","margin","zIndex","textAlign","classList","readyState","emitEmulatorWarning","protocolEnd","AuthCredential","signInMethod","_auth","_idToken","resetPassword","updateEmailPassword","sendOobCode","EmailAuthCredential","_email","_password","_tenantId","super","password","oobCode","_fromEmailAndPassword","_fromEmailAndCode","signInWithPassword","returnSecureToken","signInWithEmailLink","signInWithEmailLinkForLinking","_getIdTokenResponse","signInWithIdp","OAuthCredential","cred","nonce","pendingToken","oauthToken","oauthTokenSecret","secret","buildRequest","autoCreate","requestUri","postBody","VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_","PhoneAuthCredential","verificationId","verificationCode","temporaryProof","signInWithPhoneNumber","_makeVerificationRequest","linkWithPhoneNumber","operation","verifyPhoneNumberForExisting","sessionInfo","ActionCodeURL","actionLink","searchParams","parseMode","continueUrl","link","doubleDeepLink","iOSDeepLink","EmailAuthProvider","PROVIDER_ID","emailLink","actionCodeUrl","parseLink","FederatedAuthProvider","defaultLanguageCode","customOAuthParameters","customParameters","BaseOAuthProvider","scope","scopes","OAuthProvider","_fromParams","_credential","userCredential","oauthCredentialFromTaggedObject","tokenResponse","oauthIdToken","oauthAccessToken","rawNonce","FacebookAuthProvider","FACEBOOK_SIGN_IN_METHOD","credentialFromTaggedObject","credential","GoogleAuthProvider","addScope","GOOGLE_SIGN_IN_METHOD","GithubAuthProvider","GITHUB_SIGN_IN_METHOD","SAMLAuthCredential","TwitterAuthProvider","TWITTER_SIGN_IN_METHOD","signUp","UserCredentialImpl","operationType","_fromIdTokenResponse","providerIdForResponse","_updateTokensIfNecessary","MultiFactorError","_processCredentialSavingMfaContextIfNecessary","idTokenProvider","_getReauthenticationResolver","_fromErrorAndOperation","providerDataAsNames","pid","unlink","_assertLinkedStatus","deleteProvider","providersLeft","pd","_link","_linkToIdToken","_forOperation","expected","providerIds","_reauthenticate","parsed","sub","_signInWithCredential","signInWithCredential","linkWithCredential","reauthenticateWithCredential","signInWithCustomToken","customToken","MultiFactorInfoImpl","factorId","mfaEnrollmentId","enrollmentTime","enrolledAt","enrollment","PhoneMultiFactorInfo","_fromServerResponse","phoneInfo","_setActionCodeSettingsOnRequest","actionCodeSettings","dynamicLinkDomain","canHandleCodeInApp","handleCodeInApp","iOS","bundleId","iosBundleId","android","packageName","androidInstallApp","installApp","androidMinimumVersionCode","minimumVersion","androidPackageName","sendPasswordResetEmail","authModular","requestType","applyActionCode","checkActionCode","account.resetPassword","newEmail","mfaInfo","multiFactorInfo","previousEmail","sendSignInLinkToEmail","fetchSignInMethodsForEmail","continueUri","signinMethods","sendEmailVerification","verifyBeforeUpdateEmail","updateProfile","profileRequest","apiUpdateProfile","passwordProvider","updateEmailOrPassword","apiUpdateEmailPassword","GenericAdditionalUserInfo","isNewUser","profile","FederatedAdditionalUserInfoWithUsername","username","FacebookAdditionalUserInfo","GithubAdditionalUserInfo","login","GoogleAdditionalUserInfo","TwitterAdditionalUserInfo","screenName","getAdditionalUserInfo","rawUserInfo","filteredProviderId","MultiFactorSessionImpl","mfaPendingCredential","multiFactorSession","pendingCredential","_fromMfaPendingCredential","_fromIdtoken","MultiFactorResolverImpl","session","hints","signInResolver","authExtern","mfaResponse","_process","assertionExtern","MultiFactorUserImpl","_onReload","enrolledFactors","getSession","finalizeMfaResponse","infoOrUid","multiFactorUserCache","AuthInterop","assertAuthConfigured","unsubscribe","internalListeners","onIdTokenChanged","updateProactiveRefresh","STORAGE_AVAILABLE_KEY","BrowserPersistenceClass","setItem","removeItem","getItem","BrowserLocalPersistence","localStorage","top","_isIframe","onStorageEvent","listeners","newValue","localCache","poll","detachListener","stopPolling","safariLocalStorageNotSynced","storedValue","triggerListeners","notifyListeners","documentMode","forAllChangedKeys","_oldValue","pollTimer","setInterval","StorageEvent","clearInterval","removeEventListener","fallbackToPolling","startPolling","attachListener","browserLocalPersistence","Receiver","eventTarget","handleEvent","existingInstance","receivers","receiver","isListeningto","newInstance","messageEvent","eventId","eventType","handlers","handlersMap","ports","promises","origin","eventHandler","Sender","messageChannel","onMessage","completionTimer","digits","start","ackTimer","removeMessageHandler","_window","_isWorker","DB_NAME","DB_VERSION","DB_OBJECTSTORE_NAME","DB_DATA_KEYPATH","DBPromise","getObjectStore","db","isReadWrite","transaction","objectStore","_openDatabase","createObjectStore","keyPath","objectStoreNames","contains","toPromise","_putObject","put","_deleteObject","IndexedDBLocalPersistence","_workerInitializationPromise","initializeServiceWorkerMessaging","numAttempts","_openDb","initializeReceiver","initializeSender","_subscribe","_origin","_poll","keyProcessed","_data","results","activeServiceWorker","serviceWorker","ready","active","_getActiveServiceWorker","sender","_send","serviceWorkerReceiverAvailable","controller","pendingWrites","_withPendingWrite","_withRetries","notifyServiceWorker","getObject","getAllRequest","getAll","keysInResult","fbase_key","localKey","indexedDBLocalPersistence","AuthEventManager","authEventConsumer","consumers","queuedRedirectEvent","isEventForConsumer","sendToConsumer","saveEventToCache","hasEventBeenHandled","handled","consumer","hasHandledPotentialRedirect","isNullRedirectEvent","isRedirectEvent","onError","onAuthEvent","eventIdMatches","lastProcessedEventTime","cachedEventUids","eventUid","sessionId","_generateEventId","prefix","IP_ADDRESS_REGEX","HTTP_REGEX","_validateOrigin","authorizedDomains","currentUrl","hostname","URL","ceUrl","escapedDomainPattern","RegExp","matchDomain","_loadJS","setAttribute","charset","getElementsByTagName","_generateCallbackName","NETWORK_TIMEOUT","resetUnloadedGapiModules","beacon","___jsl","H","hint","L","CP","cachedGApiLoader","_loadGapi","loadGapiIframe","gapi","load","iframes","getContext","Iframe","cbName","js._generateCallbackName","js._loadJS","PING_TIMEOUT","IFRAME_PATH","EMULATED_IFRAME_PATH","IFRAME_ATTRIBUTES","height","EID_FROM_APIHOST","_openIframe","context","gapiLoader._loadGapi","where","eid","fw","getIframeUrl","messageHandlersFilter","CROSS_ORIGIN_IFRAMES_FILTER","attributes","dontclear","restyle","setHideOnLeave","networkError","networkErrorTimer","clearTimerAndResolve","ping","BrowserSessionPersistence","sessionStorage","browserSessionPersistence","BASE_POPUP_OPTIONS","resizable","statusbar","toolbar","AuthPopup","_open","screen","availHeight","availWidth","scrollbars","optionsString","accum","_isIOSStandalone","standalone","click","initMouseEvent","openAsNewWindowIOS","newWin","focus","_withDefaultResolver","resolverOverride","IdpCredential","_buildIdpRequest","returnIdpCredential","_signIn","_reauth","_linkUser","AbstractPopupRedirectOperation","pendingPromise","eventManager","onExecution","registerConsumer","urlResponse","getIdpTask","unregisterAndCleanUp","unregisterConsumer","cleanUp","PENDING_REDIRECT_KEY","redirectOutcomeMap","RedirectAction","readyOutcome","pendingRedirectKey","hasPendingRedirect","resolverPersistence","execute","_redirectUserForId","_setPendingRedirectStatus","signInWithRedirect","resolverInternal","_openRedirect","_signInWithRedirect","reauthenticateWithRedirect","prepareUserForRedirect","_reauthenticateWithRedirect","linkWithRedirect","_linkWithRedirect","_getRedirectResult","resolverExtern","WIDGET_PATH","EMULATOR_WIDGET_PATH","_getRedirectUrl","authType","redirectUrl","additionalParams","setDefaultLanguage","isEmpty","getCustomParameters","getScopes","tid","paramsDict","getHandlerBase","WEB_STORAGE_SUPPORT_KEY","BrowserPopupRedirectResolver","eventManagers","_originValidation","initAndGetManager","register","iframeEvent","authEvent","onEvent","isSupported","originValidationPromises","browserPopupRedirectResolver","MockReCaptcha","parameters","_widgets","MockWidget","optWidgetId","getResponse","containerOrId","getElementById","isVisible","clickHandler","checkIfDeleted","responseToken","deleted","allowedChars","generateRandomAlphaNumericString","expired-callback","expiredCallback","_JSLOAD_CALLBACK","jsHelpers._generateCallbackName","NETWORK_TIMEOUT_DELAY","ReCaptchaLoaderImpl","grecaptcha","hl","shouldResolveImmediately","recaptcha","render","widgetId","hostLanguage","jsHelpers._loadJS","librarySeparatelyLoaded","MockReCaptchaLoaderImpl","RECAPTCHA_VERIFIER_TYPE","DEFAULT_PARAMS","theme","RecaptchaVerifier","isInvisible","makeTokenCallback","_recaptchaLoader","validateStartingState","assertNotDestroyed","getAssertedRecaptcha","tokenChange","tokenChangeListeners","renderPromise","makeRenderPromise","reset","destroyed","clearedOneInstance","childNodes","sitekey","hasChildNodes","existing","globalFunc","guaranteedEmpty","domReady","siteKey","recaptchaSiteKey","ConfirmationResultImpl","onConfirmation","authCredential","_fromVerification","_verifyPhoneNumber","verifier","recaptchaToken","verify","phoneInfoOptions","phoneEnrollmentInfo","phoneSessionInfo","multiFactorHint","multiFactorUid","phoneSignInInfo","phoneResponseInfo","_reset","PhoneAuthProvider","phoneOptions","applicationVerifier","_fromTokenResponse","_POLL_WINDOW_CLOSE_TIMEOUT","PopupOperation","currentPopupAction","cancel","authWindow","_openPopup","associatedEvent","_isIframeWebStorageSupported","pollUserCancellation","pollId","closed","MultiFactorAssertionImpl","_finalizeEnroll","_finalizeSignIn","PhoneMultiFactorAssertionImpl","phoneVerificationInfo","PhoneMultiFactorGenerator","_fromCredential","_cordovaWindow","deps","authInstance","hierarchy","_updateErrorMap","_initializeWithPersistence","_initializeAuthInstance","setInstantiationMode","setInstanceCreatedCallback","_instanceIdentifier","_instance","authInternalProvider","getVersionForPlatform","_generateHandlerUrl","BuildInfo","sessionDigest","TextEncoder","encode","buff","stringToArrayBuffer","crypto","subtle","digest","arr","num","padStart","computeSha256","_performRedirect","handlerUrl","cordova","plugins","browsertab","isAvailable","browserTabIsAvailable","iabRef","openUrl","InAppBrowser","SESSION_ID_LENGTH","CordovaAuthEventManager","resolveInialized","passiveListeners","initPromise","_generateNewEvent","idx","generateSessionId","_getAndRemoveEvent","persistenceKey","_eventFromPartialAndUrl","partialEvent","callbackUrl","searchParamsOrEmpty","iOSDoubleDeepLink","errorObject","parseJsonOrNull","CordovaPopupRedirectResolver","attachCallbackListeners","win","universalLinks","missingPlugin","initialized","resetRedirect","eventListener","cleanup","onCloseTimer","authEventSeen","closeBrowserTab","resumed","visibilityChanged","visibilityState","addPassiveListener","removePassiveListener","_waitForAppResume","_cb","handleOpenURL","noEventTimeout","generateNoEvent","universalLinksCb","eventData","finalEvent","existingHandleOpenURL","packagePrefix","cordovaPopupRedirectResolver","_isAndroidOrIosCordovaScheme","_isLocalStorageNotSynchronized","_isEdge","_isWebStorageSupported","impl._generateEventId","_isPopupRedirectSupported","_isLikelyCordova","Persistence","LOCAL","NONE","SESSION","exp._assert","PERSISTENCE_KEY","_savePersistenceForRedirect","getSelfWindow","exp._persistenceKeyName","_getPersistence","BROWSER_RESOLVER","exp._getInstance","exp.browserPopupRedirectResolver","CORDOVA_RESOLVER","exp.cordovaPopupRedirectResolver","CompatPopupRedirectResolver","exp.browserSessionPersistence","exp._getRedirectResult","selectUnderlyingResolver","assertedUnderlyingResolver","underlyingResolver","isCordova","timeoutId","attachExtraErrorFields","mfaErr","MultiFactorResolver","errorInternal","_fromError","credentialFromObject","credErr","exp.PhoneAuthProvider","credentialFromResult","exp.GoogleAuthProvider","exp.FacebookAuthProvider","exp.GithubAuthProvider","exp.TwitterAuthProvider","exp.SAMLAuthCredential","_create","exp.OAuthCredential","exp.OAuthProvider","credentialFromError","convertCredential","credentialPromise","additionalUserInfo","exp.getAdditionalUserInfo","User","getOrCreate","convertConfirmationResult","confirmationResultPromise","confirmationResultExp","confirm","wrapped","resolveSignIn","multiFactor","userModular","_fromUser","USER_MAP","exp.linkWithCredential","appVerifier","exp.linkWithPhoneNumber","executeNotNull","exp.linkWithPopup","exp._castAuth","exp.linkWithRedirect","exp.reauthenticateWithCredential","exp.reauthenticateWithPhoneNumber","exp.reauthenticateWithPopup","exp.reauthenticateWithRedirect","exp.sendEmailVerification","exp.unlink","newPassword","phoneCredential","exp.updatePhoneNumber","exp.updateProfile","exp.verifyBeforeUpdateEmail","Auth","linkUnderlyingAuth","persistences","exp.inMemoryPersistence","exp.indexedDBLocalPersistence","_getPersistencesFromRedirect","exp.browserLocalPersistence","exp.debugErrorMap","useDeviceLanguage","exp.useAuthEmulator","exp.applyActionCode","exp.checkActionCode","exp.confirmPasswordReset","exp.createUserWithEmailAndPassword","exp.fetchSignInMethodsForEmail","_logFramework","errorFn","wrapObservers","onAuthStateChanged","exp.sendSignInLinkToEmail","exp.sendPasswordResetEmail","converted","isIndexedDBFullySupported","exp\r\n                    ._getInstance","exp._fail","exp.signInAnonymously","exp.signInWithCredential","exp.signInWithCustomToken","credentialWithLink","exp.signInWithEmailLink","exp.signInWithPhoneNumber","exp.signInWithPopup","exp.signInWithRedirect","updateCurrentUser","exp.verifyPasswordResetCode","oldNext","verifyPhoneNumber","PHONE_SIGN_IN_METHOD","exp.RecaptchaVerifier","authProvider","setServiceProps","ActionCodeInfo","Operation","EMAIL_SIGNIN","PASSWORD_RESET","RECOVER_EMAIL","REVERT_SECOND_FACTOR_ADDITION","VERIFY_AND_CHANGE_EMAIL","VERIFY_EMAIL","impl.EmailAuthProvider","impl.FacebookAuthProvider","impl.GithubAuthProvider","impl.GoogleAuthProvider","impl.OAuthProvider","CompatAuthProvider","impl.PhoneMultiFactorGenerator","CompatRecaptchaVerifier","impl.TwitterAuthProvider","impl.AuthCredential","setMultipleInstances","LONG_TYPE","UNSIGNED_LONG_TYPE","FUNCTIONS_TYPE","errorCodeMap","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","UNAUTHENTICATED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","FunctionsError","details","_errorForResponse","bodyJSON","codeForHTTPStatus","errorJSON","ContextProvider","messagingProvider","messaging","Notification","permission","authToken","getAuthToken","messagingToken","getMessagingToken","DEFAULT_REGION","FunctionsService","regionOrCustomDomain","contextProvider","cancelAllRequests","deleteService","customDomain","region","projectId","emulatorOrigin","httpsCallable","functionsInstance","_url","postJSON","millis","failAfter","responseData","decodedData","useFunctionsEmulator","_region","_customDomain","_httpsCallable","useFunctionsEmulatorExp","namespaceExports","factory","functionsServiceExp","promisifyRequest","promisifyRequestCall","proxyProperties","ProxyClass","targetProp","proxyRequestMethods","proxyMethods","proxyCursorRequestMethods","Cursor","Index","_index","cursor","_cursor","_request","ObjectStore","_store","Transaction","idbTransaction","_tx","oncomplete","onabort","UpgradeDB","oldVersion","_db","DB","openDb","upgradeCallback","deleteDb","Functions","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","nativeObject","iterateCursor","continue","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","missing-app-config-values","not-registered","installation-not-found","request-failed","app-offline","delete-pending-registration","isServerError","getInstallationsEndpoint","extractAuthTokenInfoFromResponse","requestStatus","responseExpiresIn","getErrorFromResponse","requestName","errorData","serverCode","serverMessage","serverStatus","getHeaders","Accept","x-goog-api-key","getHeadersWithAuth","appConfig","retryIfServerError","sleep","ms","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","msCrypto","getRandomValues","fid","b64String","b64","bufferToBase64UrlSafe","getKey","appId","fidChangeCallbacks","fidChanged","callFidChangeCallbacks","broadcastChannel","BroadcastChannel","getBroadcastChannel","broadcastFidChange","callbacks","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeDB","tx","remove","getInstallationEntry","registrationPromise","installationEntry","oldEntry","registrationStatus","clearTimedOutRequest","updateOrCreateInstallationEntry","entryWithPromise","updateInstallationRequest","waitUntilFidRegistration","registrationPromiseWithError","inProgressEntry","registrationTime","registeredInstallationEntry","endpoint","authVersion","responseValue","createInstallationRequest","registerInstallation","triggerRegistrationIfNecessary","generateAuthTokenRequest","platformLoggerProvider","getGenerateAuthTokenEndpoint","platformLogger","getPlatformInfoString","installation","refreshAuthToken","installations","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenExpired","updateAuthTokenRequest","waitUntilAuthTokenRequest","inProgressAuthToken","requestTime","updatedInstallationEntry","fetchAuthTokenFromServer","await","completeInstallationRegistration","installationsImpl","getMissingValueError","valueName","INSTALLATIONS_NAME","keyName","extractAppConfig","getId","only-available-in-window","only-available-in-sw","permission-default","permission-blocked","unsupported-browser","indexed-db-unsupported","failed-service-worker-registration","token-subscribe-failed","token-subscribe-no-token","token-unsubscribe-failed","token-update-failed","token-update-no-token","use-sw-after-get-token","invalid-sw-registration","invalid-bg-handler","invalid-vapid-key","use-vapid-key-after-get-token","MessagingService","analyticsProvider","senderId","messagingSenderId","firebaseDependencies","DEFAULT_SW_PATH","DEFAULT_SW_SCOPE","DEFAULT_VAPID_KEY","ENDPOINT","arrayToBase64","uint8Array","base64String","MessageType","OLD_DB_NAME","OLD_DB_VERSION","OLD_OBJECT_STORE_NAME","migrateOldDatabase","databases","dbNames","tokenDetails","oldDetails","p256dh","fcmToken","createTime","subscriptionOptions","swScope","vapidKey","checkTokenDetails","upgradeDb","dbGet","oldTokenDetails","dbSet","requestDeleteToken","unsubscribeOptions","getEndpoint","errorInfo","x-goog-firebase-installations-auth","getBody","web","applicationPubKey","TOKEN_EXPIRATION_MS","getTokenInternal","pushSubscription","swRegistration","pushManager","getSubscription","userVisibleOnly","applicationServerKey","rawData","outputArray","base64ToArray","getPushSubscription","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","updatedToken","updateOptions","requestUpdateToken","updatedTokenDetails","deleteTokenInternal","updateToken","getNewToken","dbRemove","subscribeOptions","requestGetToken","registerDefaultSw","browserErrorMessage","requestPermission","ServiceWorkerRegistration","updateSwReg","serviceWorkerRegistration","deleteToken","_deleteToken","onMessageHandler","_onMessage","onBackgroundMessage","onBackgroundMessageHandler","_onBackgroundMessage","PushSubscription","isWindowSupported","MessagingCompatImpl","_getToken","TRACE_MEASURE_PREFIX","CONFIG_LOCAL_STORAGE_KEY","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","VisibilityState","SERVICE_NAME","trace started","trace stopped","nonpositive trace startTime","nonpositive trace duration","no window","no app id","no project id","no api key","invalid cc log","FB not default","RC response not ok","invalid attribute name","invalid attribute value","invalid custom metric name","invalid String merger input","already initialized","consoleLogger","apiInstance","windowInstance","Api","performance","PerformanceObserver","windowLocation","perfMetrics","onFirstInputDelay","mark","measureName","mark1","mark2","measure","getEntriesByType","getEntriesByName","timeOrigin","timing","navigationStart","entryType","list","getEntries","entryTypes","iid","mergeStrings","part1","part2","sizeDiff","resultArray","settingsServiceInstance","SettingsService","flTransportEndpointUrl","transportKey","RESERVED_ATTRIBUTE_PREFIXES","ATTRIBUTE_FORMAT_REGEX","getVisibilityState","getInstance","VISIBLE","getAppId","firebaseApp","REMOTE_CONFIG_SDK_VERSION","DEFAULT_CONFIGS","loggingEnabled","FIS_AUTH_PREFIX","getConfig","performanceController","expiryString","expiry","configValid","configStringified","getStoredConfig","processConfig","installationsService","authTokenPromise","getAuthTokenPromise","getProjectId","getApiKey","Authorization","app_instance_id","app_instance_id_token","app_id","app_version","sdk_version","COULD_NOT_GET_CONFIG_MSG","configTimeToLive","storeConfig","fpr_enabled","fpr_log_source","logSource","fpr_log_endpoint_url","logEndPointUrl","fpr_log_transport_key","fpr_vc_network_request_sampling_rate","networkRequestsSamplingRate","fpr_vc_trace_sampling_rate","tracesSamplingRate","logTraceAfterSampling","shouldLogAfterSampling","logNetworkAfterSampling","samplingRate","initializationStatus","initializationPromise","getInitializationPromise","getDocumentReadyComplete","iidPromise","iidVal","getIidPromise","changeInitializationStatus","DEFAULT_SEND_INTERVAL_MS","DEFAULT_REMAINING_TRIES","MAX_EVENT_COUNT_PER_REQUEST","remainingTries","isTransportSetup","processQueue","timeOffset","staged","splice","log_event","evt","source_extension_json_proto3","event_time_ms","eventTime","request_time_ms","client_info","client_type","js_client_info","log_source","flTransportFullUrl","getFlTransportFullUrl","postToFlEndpoint","res","transportWait","nextRequestWaitMillis","requestOffset","logResponseDetails","responseAction","sendEventsToFl","dispatchQueueEvents","transportHandler","serializer","addToQueue","sendLog","resource","resourceType","logTrace","trace","settingsService","instrumentationEnabled","isAuto","dataCollectionEnabled","requiredApisAvailable","sendTraceLog","networkRequestMetric","networkRequest","http_method","httpMethod","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","traceMetric","is_auto","duration_us","durationUs","counters","customAttributes","getAttributes","custom_attributes","trace_metric","serializeTrace","google_app_id","web_app_info","page_url","getUrl","service_worker_status","visibility_state","effective_connection_type","navigatorConnection","connection","effectiveType","getEffectiveConnectionType","application_process_state","oobMetrics","Trace","traceMeasureName","traceStartMark","randomId","traceStopMark","traceMeasure","calculateTraceMetrics","traceName","api","startTime","duration","metrics","metric","numAsInteger","putMetric","customMetricName","providedValue","valueAsInteger","attr","isValidName","isValidValue","attributeName","attributeValue","perfMeasureEntries","perfMeasureEntry","getTimeOrigin","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","setStartTime","setDuration","domInteractive","domContentLoadedEventEnd","loadEventEnd","firstPaint","paintObject","firstContentfulPaint","createNetworkRequestEntry","performanceEntry","responseStart","responseEnd","networkRequestUrl","logEndpointUrl","flEndpointUrl","logNetworkRequest","transferSize","FID_WAIT_TIME_MS","setupOobResources","createOobTrace","setupOobTraces","resources","setupObserver","setupNetworkRequests","measures","createUserTimingTrace","setupUserTimingTraces","PerformanceController","perfInstance","_init","PerformanceCompatImpl","firebaseInstance","performanceFactory","ANALYTICS_TYPE","GA_FID_KEY","ORIGIN_KEY","FETCH_TIMEOUT_MILLIS","DYNAMIC_CONFIG_URL","GTAG_URL","promiseAllSettled","wrapGtag","gtagCore","initializationPromisesMap","dynamicConfigPromisesList","measurementIdToAppId","command","idOrNameOrParams","gtagParams","measurementId","initializationPromisesToWaitFor","gaSendToList","dynamicConfigResults","sendToId","foundConfig","gtagOnEvent","correspondingAppId","gtagOnConfig","already-exists","interop-component-reg-failed","invalid-analytics-context","indexeddb-unavailable","fetch-throttle","config-fetch-failed","no-api-key","no-app-id","LONG_RETRY_FACTOR","RetryData","throttleMetadata","defaultRetryData","fetchDynamicConfig","appFields","appUrl","jsonResponse","_ignored","httpStatus","responseMessage","fetchDynamicConfigWithRetry","retryData","timeoutMillis","getThrottleMetadata","throttleEndTimeMillis","signal","AnalyticsAbortSignal","abort","attemptFetchDynamicConfigWithRetry","setAbortableTimeout","deleteThrottleMetadata","isRetriableError","backoffMillis","setThrottleMetadata","initializeAnalytics","dataLayerName","dynamicConfigPromise","fidPromise","validateIndexedDB","envIsValid","dynamicConfig","scriptTags","findGtagScriptOnPage","script","insertScriptTag","configProperties","AnalyticsService","gtagName","gtagCoreFunction","wrappedGtagFunction","globalInitDone","mismatchedEnvMessages","warnOnBrowserContextMismatch","wrappedGtag","dataLayer","getOrCreateDataLayer","gtagFunctionName","wrapOrCreateGtag","setCurrentScreen","analyticsInstance","gtagFunction","screen_name","internalSetCurrentScreen","setUserId","user_id","internalSetUserId","setUserProperties","flatProperties","user_properties","internalSetUserProperties","setAnalyticsCollectionEnabled","enabled","internalSetAnalyticsCollectionEnabled","logEvent","eventName","eventParams","send_to","internalLogEvent","analytics","EventName","logEventExp","setCurrentScreenExp","setUserIdExp","setUserPropertiesExp","setAnalyticsCollectionEnabledExp","analyticsServiceExp","Analytics","settingsExp","isSupportedExp","RemoteConfigAbortSignal","registration-window","registration-project-id","registration-api-key","registration-app-id","storage-open","storage-get","storage-set","storage-delete","fetch-client-network","fetch-timeout","fetch-client-parse","fetch-status","BOOLEAN_TRUTHY_VALUES","Value","_source","_value","activate","remoteConfig","rc","lastSuccessfulFetchResponse","activeConfigEtag","_storage","getLastSuccessfulFetchResponse","getActiveConfigEtag","eTag","_storageCache","setActiveConfig","setActiveConfigEtag","ensureInitialized","_initializePromise","loadFromStorage","_isInitializationComplete","fetchConfig","abortSignal","fetchTimeoutMillis","_client","cacheMaxAgeMillis","minimumFetchIntervalMillis","setLastFetchStatus","lastFetchStatus","errorCode","getAllKeys","obj1","obj2","getActiveConfig","defaultConfig","allConfigs","getValue","_logger","activeConfig","ValueImpl","CachingClient","client","storageCache","lastSuccessfulFetchTimestampMillis","cacheAgeMillis","isCachedDataFresh","getLastSuccessfulFetchTimestampMillis","storageOperations","setLastSuccessfulFetchTimestampMillis","setLastSuccessfulFetchResponse","RestClient","firebaseInstallations","installationId","installationToken","FIREBASE_REMOTE_CONFIG_URL_BASE","Content-Encoding","If-None-Match","requestBody","language_code","fetchPromise","timeoutPromise","_resolve","originalError","originalErrorMessage","responseEtag","responseBody","RetryingClient","attemptFetch","RemoteConfig","getLastFetchStatus","toFirebaseError","APP_NAMESPACE_STORE","Storage","openDbPromise","openDatabase","timestamp","etag","compositeKey","createCompositeKey","StorageCache","lastFetchStatusPromise","lastSuccessfulFetchTimestampMillisPromise","activeConfigPromise","timestampMillis","FirebaseLogLevel","restClient","retryingClient","cachingClient","remoteConfigInstance","RemoteConfigImpl","RemoteConfigCompatImpl","fetchTimeMillis","fetchAndActivate","asBoolean","asNumber","asString","remoteConfigFactory"],"mappings":"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CFC,kBACE,sEACFC,oBACE,kDACFC,qBACE,4DACFC,0BACE,+KAEFC,+BACE,iFACFC,yBACE,uGAEFC,0BACE,0FAEFC,sBACE,+IAEFC,sBACE,2GAEFC,iBACE,gEACFC,2BACE,oFACFC,uBACE,gPAIFC,sBACE,wCACFC,0BACE,4GAEFC,iBACE,6KAEFC,0BACE,2EACFC,oBACE,4CACFC,2BACE,2FACFC,8BACE,8HAEFC,yBACE,gIAEFC,4BACE,6EACFC,uBACE,kDACFC,uBAAsC,sCACtCC,wBACE,oEACFC,2BACE,oKAGFC,4BACE,2CACFC,+BACE,mEACFC,uBACE,wEACFC,0BACE,uEACFrH,cACE,iDACFsH,8BACE,2EACFC,6BACE,yEACFC,2CACE,wJAGFC,yBACE,kGACFC,gBAA+B,sCAC/BC,mBACE,6DACFC,YACE,0GAEFC,wBACE,yJAGFC,8CACE,kLAGFC,gBACE,4FACFC,uBACE,yEACFC,0BACE,kEACFC,iBACE,4DACFC,6BACE,2EACFC,6BACE,mDACFC,sBACE,6DACFC,+BACE,yDACFC,uCACE,4EACFC,qBACE,sEACFC,QAAyB,+BACzBC,qBACE,yEACFC,oBACE,0FAEFC,4BACE,2GAEFC,2BACE,sHACFC,+BACE,2EACFC,+BACE,6DACFC,mBACE,2CACFC,iBACE,wEACFC,iBACE,4FAEFC,gBACE,0DACFC,gBACE,+EACFC,kBAAiC,GACjCC,gBACE,kDACFC,0BACE,+EACFC,sBACE,8CA8EC,MAAMC,GAA8B,IAAIrU,GAG7C,OAAQ,WArED,CACLkP,wCACE,4LCzVAoF,GAAY,IAAIpN,GAAO,+BAiBbqN,GAAUC,KAAgB74B,GACpC24B,GAAUpO,UAAYH,GAASe,OACjCwN,GAAUpvC,eAAewmC,QAAiB8I,OAAU74B,YCiBxC84B,GACdC,KACGC,GAEH,MAAMC,GAAoBF,KAAeC,YAc3BE,GACdH,KACGC,GAEH,OAAOC,GAAoBF,KAAeC,GAG5C,SAASC,GACPF,KACGC,GAEH,GAA0B,iBAAfD,EAaX,OAAOL,GAA4B78B,OACjCk9B,KACIC,GAf8B,CAClC,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"}